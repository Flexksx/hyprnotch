#!/nix/store/94lg0shvsfc845zy8gnflvpqxxiyijbz-bash-interactive-5.2p37/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gLi-ags.js"

cat <<EOF | base64 --decode > $file
Ly8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvZ3RrMy9pbmRleC50cwppbXBvcnQgQXN0YWw3IGZyb20gImdpOi8vQXN0YWw/dmVyc2lvbj0zLjAiOwppbXBvcnQgR3RrNCBmcm9tICJnaTovL0d0az92ZXJzaW9uPTMuMCI7CmltcG9ydCBHZGsgZnJvbSAiZ2k6Ly9HZGs/dmVyc2lvbj0zLjAiOwoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvdmFyaWFibGUudHMKaW1wb3J0IEFzdGFsMyBmcm9tICJnaTovL0FzdGFsSU8iOwoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvYmluZGluZy50cwp2YXIgc25ha2VpZnkgPSAoc3RyKSA9PiBzdHIucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgIiQxXyQyIikucmVwbGFjZUFsbCgiLSIsICJfIikudG9Mb3dlckNhc2UoKTsKdmFyIGtlYmFiaWZ5ID0gKHN0cikgPT4gc3RyLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICIkMS0kMiIpLnJlcGxhY2VBbGwoIl8iLCAiLSIpLnRvTG93ZXJDYXNlKCk7CnZhciBCaW5kaW5nID0gY2xhc3MgX0JpbmRpbmcgewogIGNvbnN0cnVjdG9yKGVtaXR0ZXIsIHByb3ApIHsKICAgIHRoaXMudHJhbnNmb3JtRm4gPSAodikgPT4gdjsKICAgIHRoaXMuI2VtaXR0ZXIgPSBlbWl0dGVyOwogICAgdGhpcy4jcHJvcCA9IHByb3AgJiYga2ViYWJpZnkocHJvcCk7CiAgfQogICNlbWl0dGVyOwogICNwcm9wOwogIHN0YXRpYyBiaW5kKGVtaXR0ZXIsIHByb3ApIHsKICAgIHJldHVybiBuZXcgX0JpbmRpbmcoZW1pdHRlciwgcHJvcCk7CiAgfQogIHRvU3RyaW5nKCkgewogICAgcmV0dXJuIGBCaW5kaW5nPCR7dGhpcy4jZW1pdHRlcn0ke3RoaXMuI3Byb3AgPyBgLCAiJHt0aGlzLiNwcm9wfSJgIDogIiJ9PmA7CiAgfQogIGFzKGZuKSB7CiAgICBjb25zdCBiaW5kMiA9IG5ldyBfQmluZGluZyh0aGlzLiNlbWl0dGVyLCB0aGlzLiNwcm9wKTsKICAgIGJpbmQyLnRyYW5zZm9ybUZuID0gKHYpID0+IGZuKHRoaXMudHJhbnNmb3JtRm4odikpOwogICAgcmV0dXJuIGJpbmQyOwogIH0KICBnZXQoKSB7CiAgICBpZiAodHlwZW9mIHRoaXMuI2VtaXR0ZXIuZ2V0ID09PSAiZnVuY3Rpb24iKQogICAgICByZXR1cm4gdGhpcy50cmFuc2Zvcm1Gbih0aGlzLiNlbWl0dGVyLmdldCgpKTsKICAgIGlmICh0eXBlb2YgdGhpcy4jcHJvcCA9PT0gInN0cmluZyIpIHsKICAgICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke3NuYWtlaWZ5KHRoaXMuI3Byb3ApfWA7CiAgICAgIGlmICh0eXBlb2YgdGhpcy4jZW1pdHRlcltnZXR0ZXJdID09PSAiZnVuY3Rpb24iKQogICAgICAgIHJldHVybiB0aGlzLnRyYW5zZm9ybUZuKHRoaXMuI2VtaXR0ZXJbZ2V0dGVyXSgpKTsKICAgICAgcmV0dXJuIHRoaXMudHJhbnNmb3JtRm4odGhpcy4jZW1pdHRlclt0aGlzLiNwcm9wXSk7CiAgICB9CiAgICB0aHJvdyBFcnJvcigiY2FuIG5vdCBnZXQgdmFsdWUgb2YgYmluZGluZyIpOwogIH0KICBzdWJzY3JpYmUoY2FsbGJhY2spIHsKICAgIGlmICh0eXBlb2YgdGhpcy4jZW1pdHRlci5zdWJzY3JpYmUgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgcmV0dXJuIHRoaXMuI2VtaXR0ZXIuc3Vic2NyaWJlKCgpID0+IHsKICAgICAgICBjYWxsYmFjayh0aGlzLmdldCgpKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLiNlbWl0dGVyLmNvbm5lY3QgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgY29uc3Qgc2lnbmFsID0gYG5vdGlmeTo6JHt0aGlzLiNwcm9wfWA7CiAgICAgIGNvbnN0IGlkID0gdGhpcy4jZW1pdHRlci5jb25uZWN0KHNpZ25hbCwgKCkgPT4gewogICAgICAgIGNhbGxiYWNrKHRoaXMuZ2V0KCkpOwogICAgICB9KTsKICAgICAgcmV0dXJuICgpID0+IHsKICAgICAgICB0aGlzLiNlbWl0dGVyLmRpc2Nvbm5lY3QoaWQpOwogICAgICB9OwogICAgfQogICAgdGhyb3cgRXJyb3IoYCR7dGhpcy4jZW1pdHRlcn0gaXMgbm90IGJpbmRhYmxlYCk7CiAgfQp9Owp2YXIgeyBiaW5kIH0gPSBCaW5kaW5nOwp2YXIgYmluZGluZ19kZWZhdWx0ID0gQmluZGluZzsKCi8vIC4uLy4uLy4uLy4uL25peC9zdG9yZS84Y2w1OGlwMm5hc2c2cmR5ajU5Y3dnMmYwcWJpeHMyOC1hc3RhbC1nanMvc2hhcmUvYXN0YWwvZ2pzL3RpbWUudHMKaW1wb3J0IEFzdGFsIGZyb20gImdpOi8vQXN0YWxJTyI7CnZhciBUaW1lID0gQXN0YWwuVGltZTsKZnVuY3Rpb24gaW50ZXJ2YWwoaW50ZXJ2YWwyLCBjYWxsYmFjaykgewogIHJldHVybiBBc3RhbC5UaW1lLmludGVydmFsKGludGVydmFsMiwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpOwp9CmZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDMsIGNhbGxiYWNrKSB7CiAgcmV0dXJuIEFzdGFsLlRpbWUudGltZW91dCh0aW1lb3V0MywgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpOwp9CgovLyAuLi8uLi8uLi8uLi9uaXgvc3RvcmUvOGNsNThpcDJuYXNnNnJkeWo1OWN3ZzJmMHFiaXhzMjgtYXN0YWwtZ2pzL3NoYXJlL2FzdGFsL2dqcy9wcm9jZXNzLnRzCmltcG9ydCBBc3RhbDIgZnJvbSAiZ2k6Ly9Bc3RhbElPIjsKdmFyIFByb2Nlc3MgPSBBc3RhbDIuUHJvY2VzczsKZnVuY3Rpb24gc3VicHJvY2VzcyhhcmdzT3JDbWQsIG9uT3V0ID0gcHJpbnQsIG9uRXJyID0gcHJpbnRlcnIpIHsKICBjb25zdCBhcmdzID0gQXJyYXkuaXNBcnJheShhcmdzT3JDbWQpIHx8IHR5cGVvZiBhcmdzT3JDbWQgPT09ICJzdHJpbmciOwogIGNvbnN0IHsgY21kLCBlcnIsIG91dCB9ID0gewogICAgY21kOiBhcmdzID8gYXJnc09yQ21kIDogYXJnc09yQ21kLmNtZCwKICAgIGVycjogYXJncyA/IG9uRXJyIDogYXJnc09yQ21kLmVyciB8fCBvbkVyciwKICAgIG91dDogYXJncyA/IG9uT3V0IDogYXJnc09yQ21kLm91dCB8fCBvbk91dAogIH07CiAgY29uc3QgcHJvYyA9IEFycmF5LmlzQXJyYXkoY21kKSA/IEFzdGFsMi5Qcm9jZXNzLnN1YnByb2Nlc3N2KGNtZCkgOiBBc3RhbDIuUHJvY2Vzcy5zdWJwcm9jZXNzKGNtZCk7CiAgcHJvYy5jb25uZWN0KCJzdGRvdXQiLCAoXywgc3Rkb3V0KSA9PiBvdXQoc3Rkb3V0KSk7CiAgcHJvYy5jb25uZWN0KCJzdGRlcnIiLCAoXywgc3RkZXJyKSA9PiBlcnIoc3RkZXJyKSk7CiAgcmV0dXJuIHByb2M7Cn0KZnVuY3Rpb24gZXhlY0FzeW5jKGNtZCkgewogIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICBpZiAoQXJyYXkuaXNBcnJheShjbWQpKSB7CiAgICAgIEFzdGFsMi5Qcm9jZXNzLmV4ZWNfYXN5bmN2KGNtZCwgKF8sIHJlcykgPT4gewogICAgICAgIHRyeSB7CiAgICAgICAgICByZXNvbHZlKEFzdGFsMi5Qcm9jZXNzLmV4ZWNfYXN5bmN2X2ZpbmlzaChyZXMpKTsKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgQXN0YWwyLlByb2Nlc3MuZXhlY19hc3luYyhjbWQsIChfLCByZXMpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShBc3RhbDIuUHJvY2Vzcy5leGVjX2ZpbmlzaChyZXMpKTsKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0pOwp9CgovLyAuLi8uLi8uLi8uLi9uaXgvc3RvcmUvOGNsNThpcDJuYXNnNnJkeWo1OWN3ZzJmMHFiaXhzMjgtYXN0YWwtZ2pzL3NoYXJlL2FzdGFsL2dqcy92YXJpYWJsZS50cwp2YXIgVmFyaWFibGVXcmFwcGVyID0gY2xhc3MgZXh0ZW5kcyBGdW5jdGlvbiB7CiAgY29uc3RydWN0b3IoaW5pdCkgewogICAgc3VwZXIoKTsKICAgIHRoaXMuZXJySGFuZGxlciA9IGNvbnNvbGUuZXJyb3I7CiAgICB0aGlzLnBvbGxJbnRlcnZhbCA9IDFlMzsKICAgIHRoaXMuX3ZhbHVlID0gaW5pdDsKICAgIHRoaXMudmFyaWFibGUgPSBuZXcgQXN0YWwzLlZhcmlhYmxlQmFzZSgpOwogICAgdGhpcy52YXJpYWJsZS5jb25uZWN0KCJkcm9wcGVkIiwgKCkgPT4gewogICAgICB0aGlzLnN0b3BXYXRjaCgpOwogICAgICB0aGlzLnN0b3BQb2xsKCk7CiAgICB9KTsKICAgIHRoaXMudmFyaWFibGUuY29ubmVjdCgiZXJyb3IiLCAoXywgZXJyKSA9PiB0aGlzLmVyckhhbmRsZXI/LihlcnIpKTsKICAgIHJldHVybiBuZXcgUHJveHkodGhpcywgewogICAgICBhcHBseTogKHRhcmdldCwgXywgYXJncykgPT4gdGFyZ2V0Ll9jYWxsKGFyZ3NbMF0pCiAgICB9KTsKICB9CiAgX2NhbGwodHJhbnNmb3JtKSB7CiAgICBjb25zdCBiID0gYmluZGluZ19kZWZhdWx0LmJpbmQodGhpcyk7CiAgICByZXR1cm4gdHJhbnNmb3JtID8gYi5hcyh0cmFuc2Zvcm0pIDogYjsKICB9CiAgdG9TdHJpbmcoKSB7CiAgICByZXR1cm4gU3RyaW5nKGBWYXJpYWJsZTwke3RoaXMuZ2V0KCl9PmApOwogIH0KICBnZXQoKSB7CiAgICByZXR1cm4gdGhpcy5fdmFsdWU7CiAgfQogIHNldCh2YWx1ZSkgewogICAgaWYgKHZhbHVlICE9PSB0aGlzLl92YWx1ZSkgewogICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlOwogICAgICB0aGlzLnZhcmlhYmxlLmVtaXQoImNoYW5nZWQiKTsKICAgIH0KICB9CiAgc3RhcnRQb2xsKCkgewogICAgaWYgKHRoaXMuX3BvbGwpCiAgICAgIHJldHVybjsKICAgIGlmICh0aGlzLnBvbGxGbikgewogICAgICB0aGlzLl9wb2xsID0gaW50ZXJ2YWwodGhpcy5wb2xsSW50ZXJ2YWwsICgpID0+IHsKICAgICAgICBjb25zdCB2ID0gdGhpcy5wb2xsRm4odGhpcy5nZXQoKSk7CiAgICAgICAgaWYgKHYgaW5zdGFuY2VvZiBQcm9taXNlKSB7CiAgICAgICAgICB2LnRoZW4oKHYyKSA9PiB0aGlzLnNldCh2MikpLmNhdGNoKChlcnIpID0+IHRoaXMudmFyaWFibGUuZW1pdCgiZXJyb3IiLCBlcnIpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5zZXQodik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0gZWxzZSBpZiAodGhpcy5wb2xsRXhlYykgewogICAgICB0aGlzLl9wb2xsID0gaW50ZXJ2YWwodGhpcy5wb2xsSW50ZXJ2YWwsICgpID0+IHsKICAgICAgICBleGVjQXN5bmModGhpcy5wb2xsRXhlYykudGhlbigodikgPT4gdGhpcy5zZXQodGhpcy5wb2xsVHJhbnNmb3JtKHYsIHRoaXMuZ2V0KCkpKSkuY2F0Y2goKGVycikgPT4gdGhpcy52YXJpYWJsZS5lbWl0KCJlcnJvciIsIGVycikpOwogICAgICB9KTsKICAgIH0KICB9CiAgc3RhcnRXYXRjaCgpIHsKICAgIGlmICh0aGlzLl93YXRjaCkKICAgICAgcmV0dXJuOwogICAgdGhpcy5fd2F0Y2ggPSBzdWJwcm9jZXNzKHsKICAgICAgY21kOiB0aGlzLndhdGNoRXhlYywKICAgICAgb3V0OiAob3V0KSA9PiB0aGlzLnNldCh0aGlzLndhdGNoVHJhbnNmb3JtKG91dCwgdGhpcy5nZXQoKSkpLAogICAgICBlcnI6IChlcnIpID0+IHRoaXMudmFyaWFibGUuZW1pdCgiZXJyb3IiLCBlcnIpCiAgICB9KTsKICB9CiAgc3RvcFBvbGwoKSB7CiAgICB0aGlzLl9wb2xsPy5jYW5jZWwoKTsKICAgIGRlbGV0ZSB0aGlzLl9wb2xsOwogIH0KICBzdG9wV2F0Y2goKSB7CiAgICB0aGlzLl93YXRjaD8ua2lsbCgpOwogICAgZGVsZXRlIHRoaXMuX3dhdGNoOwogIH0KICBpc1BvbGxpbmcoKSB7CiAgICByZXR1cm4gISF0aGlzLl9wb2xsOwogIH0KICBpc1dhdGNoaW5nKCkgewogICAgcmV0dXJuICEhdGhpcy5fd2F0Y2g7CiAgfQogIGRyb3AoKSB7CiAgICB0aGlzLnZhcmlhYmxlLmVtaXQoImRyb3BwZWQiKTsKICB9CiAgb25Ecm9wcGVkKGNhbGxiYWNrKSB7CiAgICB0aGlzLnZhcmlhYmxlLmNvbm5lY3QoImRyb3BwZWQiLCBjYWxsYmFjayk7CiAgICByZXR1cm4gdGhpczsKICB9CiAgb25FcnJvcihjYWxsYmFjaykgewogICAgZGVsZXRlIHRoaXMuZXJySGFuZGxlcjsKICAgIHRoaXMudmFyaWFibGUuY29ubmVjdCgiZXJyb3IiLCAoXywgZXJyKSA9PiBjYWxsYmFjayhlcnIpKTsKICAgIHJldHVybiB0aGlzOwogIH0KICBzdWJzY3JpYmUoY2FsbGJhY2spIHsKICAgIGNvbnN0IGlkID0gdGhpcy52YXJpYWJsZS5jb25uZWN0KCJjaGFuZ2VkIiwgKCkgPT4gewogICAgICBjYWxsYmFjayh0aGlzLmdldCgpKTsKICAgIH0pOwogICAgcmV0dXJuICgpID0+IHRoaXMudmFyaWFibGUuZGlzY29ubmVjdChpZCk7CiAgfQogIHBvbGwoaW50ZXJ2YWwyLCBleGVjLCB0cmFuc2Zvcm0gPSAob3V0KSA9PiBvdXQpIHsKICAgIHRoaXMuc3RvcFBvbGwoKTsKICAgIHRoaXMucG9sbEludGVydmFsID0gaW50ZXJ2YWwyOwogICAgdGhpcy5wb2xsVHJhbnNmb3JtID0gdHJhbnNmb3JtOwogICAgaWYgKHR5cGVvZiBleGVjID09PSAiZnVuY3Rpb24iKSB7CiAgICAgIHRoaXMucG9sbEZuID0gZXhlYzsKICAgICAgZGVsZXRlIHRoaXMucG9sbEV4ZWM7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnBvbGxFeGVjID0gZXhlYzsKICAgICAgZGVsZXRlIHRoaXMucG9sbEZuOwogICAgfQogICAgdGhpcy5zdGFydFBvbGwoKTsKICAgIHJldHVybiB0aGlzOwogIH0KICB3YXRjaChleGVjLCB0cmFuc2Zvcm0gPSAob3V0KSA9PiBvdXQpIHsKICAgIHRoaXMuc3RvcFdhdGNoKCk7CiAgICB0aGlzLndhdGNoRXhlYyA9IGV4ZWM7CiAgICB0aGlzLndhdGNoVHJhbnNmb3JtID0gdHJhbnNmb3JtOwogICAgdGhpcy5zdGFydFdhdGNoKCk7CiAgICByZXR1cm4gdGhpczsKICB9CiAgb2JzZXJ2ZShvYmpzLCBzaWdPckZuLCBjYWxsYmFjaykgewogICAgY29uc3QgZiA9IHR5cGVvZiBzaWdPckZuID09PSAiZnVuY3Rpb24iID8gc2lnT3JGbiA6IGNhbGxiYWNrID8/ICgoKSA9PiB0aGlzLmdldCgpKTsKICAgIGNvbnN0IHNldCA9IChvYmosIC4uLmFyZ3MpID0+IHRoaXMuc2V0KGYob2JqLCAuLi5hcmdzKSk7CiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmpzKSkgewogICAgICBmb3IgKGNvbnN0IG9iaiBvZiBvYmpzKSB7CiAgICAgICAgY29uc3QgW28sIHNdID0gb2JqOwogICAgICAgIGNvbnN0IGlkID0gby5jb25uZWN0KHMsIHNldCk7CiAgICAgICAgdGhpcy5vbkRyb3BwZWQoKCkgPT4gby5kaXNjb25uZWN0KGlkKSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGlmICh0eXBlb2Ygc2lnT3JGbiA9PT0gInN0cmluZyIpIHsKICAgICAgICBjb25zdCBpZCA9IG9ianMuY29ubmVjdChzaWdPckZuLCBzZXQpOwogICAgICAgIHRoaXMub25Ecm9wcGVkKCgpID0+IG9ianMuZGlzY29ubmVjdChpZCkpOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gdGhpczsKICB9CiAgc3RhdGljIGRlcml2ZShkZXBzLCBmbiA9ICguLi5hcmdzKSA9PiBhcmdzKSB7CiAgICBjb25zdCB1cGRhdGUgPSAoKSA9PiBmbiguLi5kZXBzLm1hcCgoZCkgPT4gZC5nZXQoKSkpOwogICAgY29uc3QgZGVyaXZlZCA9IG5ldyBWYXJpYWJsZSh1cGRhdGUoKSk7CiAgICBjb25zdCB1bnN1YnMgPSBkZXBzLm1hcCgoZGVwKSA9PiBkZXAuc3Vic2NyaWJlKCgpID0+IGRlcml2ZWQuc2V0KHVwZGF0ZSgpKSkpOwogICAgZGVyaXZlZC5vbkRyb3BwZWQoKCkgPT4gdW5zdWJzLm1hcCgodW5zdWIpID0+IHVuc3ViKCkpKTsKICAgIHJldHVybiBkZXJpdmVkOwogIH0KfTsKdmFyIFZhcmlhYmxlID0gbmV3IFByb3h5KFZhcmlhYmxlV3JhcHBlciwgewogIGFwcGx5OiAoX3QsIF9hLCBhcmdzKSA9PiBuZXcgVmFyaWFibGVXcmFwcGVyKGFyZ3NbMF0pCn0pOwp2YXIgeyBkZXJpdmUgfSA9IFZhcmlhYmxlOwp2YXIgdmFyaWFibGVfZGVmYXVsdCA9IFZhcmlhYmxlOwoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvX2FzdGFsLnRzCnZhciBub0ltcGxpY2l0RGVzdHJveSA9IFN5bWJvbCgibm8gbm8gaW1wbGljaXQgZGVzdHJveSIpOwp2YXIgc2V0Q2hpbGRyZW4gPSBTeW1ib2woImNoaWxkcmVuIHNldHRlciBtZXRob2QiKTsKZnVuY3Rpb24gbWVyZ2VCaW5kaW5ncyhhcnJheSkgewogIGZ1bmN0aW9uIGdldFZhbHVlcyguLi5hcmdzKSB7CiAgICBsZXQgaSA9IDA7CiAgICByZXR1cm4gYXJyYXkubWFwKAogICAgICAodmFsdWUpID0+IHZhbHVlIGluc3RhbmNlb2YgYmluZGluZ19kZWZhdWx0ID8gYXJnc1tpKytdIDogdmFsdWUKICAgICk7CiAgfQogIGNvbnN0IGJpbmRpbmdzID0gYXJyYXkuZmlsdGVyKChpKSA9PiBpIGluc3RhbmNlb2YgYmluZGluZ19kZWZhdWx0KTsKICBpZiAoYmluZGluZ3MubGVuZ3RoID09PSAwKQogICAgcmV0dXJuIGFycmF5OwogIGlmIChiaW5kaW5ncy5sZW5ndGggPT09IDEpCiAgICByZXR1cm4gYmluZGluZ3NbMF0uYXMoZ2V0VmFsdWVzKTsKICByZXR1cm4gdmFyaWFibGVfZGVmYXVsdC5kZXJpdmUoYmluZGluZ3MsIGdldFZhbHVlcykoKTsKfQpmdW5jdGlvbiBzZXRQcm9wKG9iaiwgcHJvcCwgdmFsdWUpIHsKICB0cnkgewogICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke3NuYWtlaWZ5KHByb3ApfWA7CiAgICBpZiAodHlwZW9mIG9ialtzZXR0ZXJdID09PSAiZnVuY3Rpb24iKQogICAgICByZXR1cm4gb2JqW3NldHRlcl0odmFsdWUpOwogICAgcmV0dXJuIG9ialtwcm9wXSA9IHZhbHVlOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICBjb25zb2xlLmVycm9yKGBjb3VsZCBub3Qgc2V0IHByb3BlcnR5ICIke3Byb3B9IiBvbiAke29ian06YCwgZXJyb3IpOwogIH0KfQpmdW5jdGlvbiBob29rKHdpZGdldCwgb2JqZWN0LCBzaWduYWxPckNhbGxiYWNrLCBjYWxsYmFjaykgewogIGlmICh0eXBlb2Ygb2JqZWN0LmNvbm5lY3QgPT09ICJmdW5jdGlvbiIgJiYgY2FsbGJhY2spIHsKICAgIGNvbnN0IGlkID0gb2JqZWN0LmNvbm5lY3Qoc2lnbmFsT3JDYWxsYmFjaywgKF8sIC4uLmFyZ3MpID0+IHsKICAgICAgcmV0dXJuIGNhbGxiYWNrKHdpZGdldCwgLi4uYXJncyk7CiAgICB9KTsKICAgIHdpZGdldC5jb25uZWN0KCJkZXN0cm95IiwgKCkgPT4gewogICAgICBvYmplY3QuZGlzY29ubmVjdChpZCk7CiAgICB9KTsKICB9IGVsc2UgaWYgKHR5cGVvZiBvYmplY3Quc3Vic2NyaWJlID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBzaWduYWxPckNhbGxiYWNrID09PSAiZnVuY3Rpb24iKSB7CiAgICBjb25zdCB1bnN1YiA9IG9iamVjdC5zdWJzY3JpYmUoKC4uLmFyZ3MpID0+IHsKICAgICAgc2lnbmFsT3JDYWxsYmFjayh3aWRnZXQsIC4uLmFyZ3MpOwogICAgfSk7CiAgICB3aWRnZXQuY29ubmVjdCgiZGVzdHJveSIsIHVuc3ViKTsKICB9Cn0KZnVuY3Rpb24gY29uc3RydWN0KHdpZGdldCwgY29uZmlnKSB7CiAgbGV0IHsgc2V0dXAsIGNoaWxkLCBjaGlsZHJlbiA9IFtdLCAuLi5wcm9wcyB9ID0gY29uZmlnOwogIGlmIChjaGlsZHJlbiBpbnN0YW5jZW9mIGJpbmRpbmdfZGVmYXVsdCkgewogICAgY2hpbGRyZW4gPSBbY2hpbGRyZW5dOwogIH0KICBpZiAoY2hpbGQpIHsKICAgIGNoaWxkcmVuLnVuc2hpZnQoY2hpbGQpOwogIH0KICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHsKICAgIGlmICh2YWx1ZSA9PT0gdm9pZCAwKSB7CiAgICAgIGRlbGV0ZSBwcm9wc1trZXldOwogICAgfQogIH0KICBjb25zdCBiaW5kaW5ncyA9IE9iamVjdC5rZXlzKHByb3BzKS5yZWR1Y2UoKGFjYywgcHJvcCkgPT4gewogICAgaWYgKHByb3BzW3Byb3BdIGluc3RhbmNlb2YgYmluZGluZ19kZWZhdWx0KSB7CiAgICAgIGNvbnN0IGJpbmRpbmcgPSBwcm9wc1twcm9wXTsKICAgICAgZGVsZXRlIHByb3BzW3Byb3BdOwogICAgICByZXR1cm4gWy4uLmFjYywgW3Byb3AsIGJpbmRpbmddXTsKICAgIH0KICAgIHJldHVybiBhY2M7CiAgfSwgW10pOwogIGNvbnN0IG9uSGFuZGxlcnMgPSBPYmplY3Qua2V5cyhwcm9wcykucmVkdWNlKChhY2MsIGtleSkgPT4gewogICAgaWYgKGtleS5zdGFydHNXaXRoKCJvbiIpKSB7CiAgICAgIGNvbnN0IHNpZyA9IGtlYmFiaWZ5KGtleSkuc3BsaXQoIi0iKS5zbGljZSgxKS5qb2luKCItIik7CiAgICAgIGNvbnN0IGhhbmRsZXIgPSBwcm9wc1trZXldOwogICAgICBkZWxldGUgcHJvcHNba2V5XTsKICAgICAgcmV0dXJuIFsuLi5hY2MsIFtzaWcsIGhhbmRsZXJdXTsKICAgIH0KICAgIHJldHVybiBhY2M7CiAgfSwgW10pOwogIGNvbnN0IG1lcmdlZENoaWxkcmVuID0gbWVyZ2VCaW5kaW5ncyhjaGlsZHJlbi5mbGF0KEluZmluaXR5KSk7CiAgaWYgKG1lcmdlZENoaWxkcmVuIGluc3RhbmNlb2YgYmluZGluZ19kZWZhdWx0KSB7CiAgICB3aWRnZXRbc2V0Q2hpbGRyZW5dKG1lcmdlZENoaWxkcmVuLmdldCgpKTsKICAgIHdpZGdldC5jb25uZWN0KCJkZXN0cm95IiwgbWVyZ2VkQ2hpbGRyZW4uc3Vic2NyaWJlKCh2KSA9PiB7CiAgICAgIHdpZGdldFtzZXRDaGlsZHJlbl0odik7CiAgICB9KSk7CiAgfSBlbHNlIHsKICAgIGlmIChtZXJnZWRDaGlsZHJlbi5sZW5ndGggPiAwKSB7CiAgICAgIHdpZGdldFtzZXRDaGlsZHJlbl0obWVyZ2VkQ2hpbGRyZW4pOwogICAgfQogIH0KICBmb3IgKGNvbnN0IFtzaWduYWwsIGNhbGxiYWNrXSBvZiBvbkhhbmRsZXJzKSB7CiAgICBjb25zdCBzaWcgPSBzaWduYWwuc3RhcnRzV2l0aCgibm90aWZ5IikgPyBzaWduYWwucmVwbGFjZSgiLSIsICI6OiIpIDogc2lnbmFsOwogICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gImZ1bmN0aW9uIikgewogICAgICB3aWRnZXQuY29ubmVjdChzaWcsIGNhbGxiYWNrKTsKICAgIH0gZWxzZSB7CiAgICAgIHdpZGdldC5jb25uZWN0KHNpZywgKCkgPT4gZXhlY0FzeW5jKGNhbGxiYWNrKS50aGVuKHByaW50KS5jYXRjaChjb25zb2xlLmVycm9yKSk7CiAgICB9CiAgfQogIGZvciAoY29uc3QgW3Byb3AsIGJpbmRpbmddIG9mIGJpbmRpbmdzKSB7CiAgICBpZiAocHJvcCA9PT0gImNoaWxkIiB8fCBwcm9wID09PSAiY2hpbGRyZW4iKSB7CiAgICAgIHdpZGdldC5jb25uZWN0KCJkZXN0cm95IiwgYmluZGluZy5zdWJzY3JpYmUoKHYpID0+IHsKICAgICAgICB3aWRnZXRbc2V0Q2hpbGRyZW5dKHYpOwogICAgICB9KSk7CiAgICB9CiAgICB3aWRnZXQuY29ubmVjdCgiZGVzdHJveSIsIGJpbmRpbmcuc3Vic2NyaWJlKCh2KSA9PiB7CiAgICAgIHNldFByb3Aod2lkZ2V0LCBwcm9wLCB2KTsKICAgIH0pKTsKICAgIHNldFByb3Aod2lkZ2V0LCBwcm9wLCBiaW5kaW5nLmdldCgpKTsKICB9CiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7CiAgICBpZiAodmFsdWUgPT09IHZvaWQgMCkgewogICAgICBkZWxldGUgcHJvcHNba2V5XTsKICAgIH0KICB9CiAgT2JqZWN0LmFzc2lnbih3aWRnZXQsIHByb3BzKTsKICBzZXR1cD8uKHdpZGdldCk7CiAgcmV0dXJuIHdpZGdldDsKfQpmdW5jdGlvbiBpc0Fycm93RnVuY3Rpb24oZnVuYykgewogIHJldHVybiAhT2JqZWN0Lmhhc093bihmdW5jLCAicHJvdG90eXBlIik7Cn0KZnVuY3Rpb24ganN4KGN0b3JzMiwgY3RvciwgeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgewogIGNoaWxkcmVuID8/PSBbXTsKICBpZiAoIUFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKQogICAgY2hpbGRyZW4gPSBbY2hpbGRyZW5dOwogIGNoaWxkcmVuID0gY2hpbGRyZW4uZmlsdGVyKEJvb2xlYW4pOwogIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDEpCiAgICBwcm9wcy5jaGlsZCA9IGNoaWxkcmVuWzBdOwogIGVsc2UgaWYgKGNoaWxkcmVuLmxlbmd0aCA+IDEpCiAgICBwcm9wcy5jaGlsZHJlbiA9IGNoaWxkcmVuOwogIGlmICh0eXBlb2YgY3RvciA9PT0gInN0cmluZyIpIHsKICAgIGlmIChpc0Fycm93RnVuY3Rpb24oY3RvcnMyW2N0b3JdKSkKICAgICAgcmV0dXJuIGN0b3JzMltjdG9yXShwcm9wcyk7CiAgICByZXR1cm4gbmV3IGN0b3JzMltjdG9yXShwcm9wcyk7CiAgfQogIGlmIChpc0Fycm93RnVuY3Rpb24oY3RvcikpCiAgICByZXR1cm4gY3Rvcihwcm9wcyk7CiAgcmV0dXJuIG5ldyBjdG9yKHByb3BzKTsKfQoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvZ3RrMy9hc3RhbGlmeS50cwppbXBvcnQgQXN0YWw0IGZyb20gImdpOi8vQXN0YWw/dmVyc2lvbj0zLjAiOwppbXBvcnQgR3RrIGZyb20gImdpOi8vR3RrP3ZlcnNpb249My4wIjsKaW1wb3J0IEdPYmplY3QgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKZnVuY3Rpb24gYXN0YWxpZnkoY2xzLCBjbHNOYW1lID0gY2xzLm5hbWUpIHsKICBjbGFzcyBXaWRnZXQgZXh0ZW5kcyBjbHMgewogICAgZ2V0IGNzcygpIHsKICAgICAgcmV0dXJuIEFzdGFsNC53aWRnZXRfZ2V0X2Nzcyh0aGlzKTsKICAgIH0KICAgIHNldCBjc3MoY3NzKSB7CiAgICAgIEFzdGFsNC53aWRnZXRfc2V0X2Nzcyh0aGlzLCBjc3MpOwogICAgfQogICAgZ2V0X2NzcygpIHsKICAgICAgcmV0dXJuIHRoaXMuY3NzOwogICAgfQogICAgc2V0X2Nzcyhjc3MpIHsKICAgICAgdGhpcy5jc3MgPSBjc3M7CiAgICB9CiAgICBnZXQgY2xhc3NOYW1lKCkgewogICAgICByZXR1cm4gQXN0YWw0LndpZGdldF9nZXRfY2xhc3NfbmFtZXModGhpcykuam9pbigiICIpOwogICAgfQogICAgc2V0IGNsYXNzTmFtZShjbGFzc05hbWUpIHsKICAgICAgQXN0YWw0LndpZGdldF9zZXRfY2xhc3NfbmFtZXModGhpcywgY2xhc3NOYW1lLnNwbGl0KC9ccysvKSk7CiAgICB9CiAgICBnZXRfY2xhc3NfbmFtZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2xhc3NOYW1lOwogICAgfQogICAgc2V0X2NsYXNzX25hbWUoY2xhc3NOYW1lKSB7CiAgICAgIHRoaXMuY2xhc3NOYW1lID0gY2xhc3NOYW1lOwogICAgfQogICAgZ2V0IGN1cnNvcigpIHsKICAgICAgcmV0dXJuIEFzdGFsNC53aWRnZXRfZ2V0X2N1cnNvcih0aGlzKTsKICAgIH0KICAgIHNldCBjdXJzb3IoY3Vyc29yKSB7CiAgICAgIEFzdGFsNC53aWRnZXRfc2V0X2N1cnNvcih0aGlzLCBjdXJzb3IpOwogICAgfQogICAgZ2V0X2N1cnNvcigpIHsKICAgICAgcmV0dXJuIHRoaXMuY3Vyc29yOwogICAgfQogICAgc2V0X2N1cnNvcihjdXJzb3IpIHsKICAgICAgdGhpcy5jdXJzb3IgPSBjdXJzb3I7CiAgICB9CiAgICBnZXQgY2xpY2tUaHJvdWdoKCkgewogICAgICByZXR1cm4gQXN0YWw0LndpZGdldF9nZXRfY2xpY2tfdGhyb3VnaCh0aGlzKTsKICAgIH0KICAgIHNldCBjbGlja1Rocm91Z2goY2xpY2tUaHJvdWdoKSB7CiAgICAgIEFzdGFsNC53aWRnZXRfc2V0X2NsaWNrX3Rocm91Z2godGhpcywgY2xpY2tUaHJvdWdoKTsKICAgIH0KICAgIGdldF9jbGlja190aHJvdWdoKCkgewogICAgICByZXR1cm4gdGhpcy5jbGlja1Rocm91Z2g7CiAgICB9CiAgICBzZXRfY2xpY2tfdGhyb3VnaChjbGlja1Rocm91Z2gpIHsKICAgICAgdGhpcy5jbGlja1Rocm91Z2ggPSBjbGlja1Rocm91Z2g7CiAgICB9CiAgICBnZXQgbm9JbXBsaWNpdERlc3Ryb3koKSB7CiAgICAgIHJldHVybiB0aGlzW25vSW1wbGljaXREZXN0cm95XTsKICAgIH0KICAgIHNldCBub0ltcGxpY2l0RGVzdHJveSh2YWx1ZSkgewogICAgICB0aGlzW25vSW1wbGljaXREZXN0cm95XSA9IHZhbHVlOwogICAgfQogICAgc2V0IGFjdGlvbkdyb3VwKFtwcmVmaXgsIGdyb3VwXSkgewogICAgICB0aGlzLmluc2VydF9hY3Rpb25fZ3JvdXAocHJlZml4LCBncm91cCk7CiAgICB9CiAgICBzZXRfYWN0aW9uX2dyb3VwKGFjdGlvbkdyb3VwKSB7CiAgICAgIHRoaXMuYWN0aW9uR3JvdXAgPSBhY3Rpb25Hcm91cDsKICAgIH0KICAgIGdldENoaWxkcmVuKCkgewogICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIEd0ay5CaW4pIHsKICAgICAgICByZXR1cm4gdGhpcy5nZXRfY2hpbGQoKSA/IFt0aGlzLmdldF9jaGlsZCgpXSA6IFtdOwogICAgICB9IGVsc2UgaWYgKHRoaXMgaW5zdGFuY2VvZiBHdGsuQ29udGFpbmVyKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0X2NoaWxkcmVuKCk7CiAgICAgIH0KICAgICAgcmV0dXJuIFtdOwogICAgfQogICAgc2V0Q2hpbGRyZW4oY2hpbGRyZW4pIHsKICAgICAgY2hpbGRyZW4gPSBjaGlsZHJlbi5mbGF0KEluZmluaXR5KS5tYXAoKGNoKSA9PiBjaCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgPyBjaCA6IG5ldyBHdGsuTGFiZWwoeyB2aXNpYmxlOiB0cnVlLCBsYWJlbDogU3RyaW5nKGNoKSB9KSk7CiAgICAgIGlmICh0aGlzIGluc3RhbmNlb2YgR3RrLkNvbnRhaW5lcikgewogICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGRyZW4pCiAgICAgICAgICB0aGlzLmFkZChjaCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbiBub3QgYWRkIGNoaWxkcmVuIHRvICR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfWApOwogICAgICB9CiAgICB9CiAgICBbc2V0Q2hpbGRyZW5dKGNoaWxkcmVuKSB7CiAgICAgIGlmICh0aGlzIGluc3RhbmNlb2YgR3RrLkNvbnRhaW5lcikgewogICAgICAgIGZvciAoY29uc3QgY2ggb2YgdGhpcy5nZXRDaGlsZHJlbigpKSB7CiAgICAgICAgICB0aGlzLnJlbW92ZShjaCk7CiAgICAgICAgICBpZiAoIWNoaWxkcmVuLmluY2x1ZGVzKGNoKSAmJiAhdGhpcy5ub0ltcGxpY2l0RGVzdHJveSkKICAgICAgICAgICAgY2g/LmRlc3Ryb3koKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5zZXRDaGlsZHJlbihjaGlsZHJlbik7CiAgICB9CiAgICB0b2dnbGVDbGFzc05hbWUoY24sIGNvbmQgPSB0cnVlKSB7CiAgICAgIEFzdGFsNC53aWRnZXRfdG9nZ2xlX2NsYXNzX25hbWUodGhpcywgY24sIGNvbmQpOwogICAgfQogICAgaG9vayhvYmplY3QsIHNpZ25hbE9yQ2FsbGJhY2ssIGNhbGxiYWNrKSB7CiAgICAgIGhvb2sodGhpcywgb2JqZWN0LCBzaWduYWxPckNhbGxiYWNrLCBjYWxsYmFjayk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogICAgY29uc3RydWN0b3IoLi4ucGFyYW1zKSB7CiAgICAgIHN1cGVyKCk7CiAgICAgIGNvbnN0IHByb3BzID0gcGFyYW1zWzBdIHx8IHt9OwogICAgICBwcm9wcy52aXNpYmxlID8/PSB0cnVlOwogICAgICBjb25zdHJ1Y3QodGhpcywgcHJvcHMpOwogICAgfQogIH0KICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3MoewogICAgR1R5cGVOYW1lOiBgQXN0YWxfJHtjbHNOYW1lfWAsCiAgICBQcm9wZXJ0aWVzOiB7CiAgICAgICJjbGFzcy1uYW1lIjogR09iamVjdC5QYXJhbVNwZWMuc3RyaW5nKAogICAgICAgICJjbGFzcy1uYW1lIiwKICAgICAgICAiIiwKICAgICAgICAiIiwKICAgICAgICBHT2JqZWN0LlBhcmFtRmxhZ3MuUkVBRFdSSVRFLAogICAgICAgICIiCiAgICAgICksCiAgICAgICJjc3MiOiBHT2JqZWN0LlBhcmFtU3BlYy5zdHJpbmcoCiAgICAgICAgImNzcyIsCiAgICAgICAgIiIsCiAgICAgICAgIiIsCiAgICAgICAgR09iamVjdC5QYXJhbUZsYWdzLlJFQURXUklURSwKICAgICAgICAiIgogICAgICApLAogICAgICAiY3Vyc29yIjogR09iamVjdC5QYXJhbVNwZWMuc3RyaW5nKAogICAgICAgICJjdXJzb3IiLAogICAgICAgICIiLAogICAgICAgICIiLAogICAgICAgIEdPYmplY3QuUGFyYW1GbGFncy5SRUFEV1JJVEUsCiAgICAgICAgImRlZmF1bHQiCiAgICAgICksCiAgICAgICJjbGljay10aHJvdWdoIjogR09iamVjdC5QYXJhbVNwZWMuYm9vbGVhbigKICAgICAgICAiY2xpY2stdGhyb3VnaCIsCiAgICAgICAgIiIsCiAgICAgICAgIiIsCiAgICAgICAgR09iamVjdC5QYXJhbUZsYWdzLlJFQURXUklURSwKICAgICAgICBmYWxzZQogICAgICApLAogICAgICAibm8taW1wbGljaXQtZGVzdHJveSI6IEdPYmplY3QuUGFyYW1TcGVjLmJvb2xlYW4oCiAgICAgICAgIm5vLWltcGxpY2l0LWRlc3Ryb3kiLAogICAgICAgICIiLAogICAgICAgICIiLAogICAgICAgIEdPYmplY3QuUGFyYW1GbGFncy5SRUFEV1JJVEUsCiAgICAgICAgZmFsc2UKICAgICAgKQogICAgfQogIH0sIFdpZGdldCk7CiAgcmV0dXJuIFdpZGdldDsKfQoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvZ3RrMy9hcHAudHMKaW1wb3J0IEd0azIgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj0zLjAiOwppbXBvcnQgQXN0YWw1IGZyb20gImdpOi8vQXN0YWw/dmVyc2lvbj0zLjAiOwoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvb3ZlcnJpZGVzLnRzCnZhciBzbmFrZWlmeTIgPSAoc3RyKSA9PiBzdHIucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgIiQxXyQyIikucmVwbGFjZUFsbCgiLSIsICJfIikudG9Mb3dlckNhc2UoKTsKYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3MobW9kLCBwYXRjaDIpIHsKICByZXR1cm4gbW9kLnRoZW4oKG0pID0+IHBhdGNoMihtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApOwp9CmZ1bmN0aW9uIHBhdGNoKHByb3RvLCBwcm9wKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7CiAgICBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzW2BnZXRfJHtzbmFrZWlmeTIocHJvcCl9YF0oKTsKICAgIH0KICB9KTsKfQphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxBcHBzIiksICh7IEFwcHMsIEFwcGxpY2F0aW9uIH0pID0+IHsKICBwYXRjaChBcHBzLnByb3RvdHlwZSwgImxpc3QiKTsKICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsICJrZXl3b3JkcyIpOwogIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgImNhdGVnb3JpZXMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbEJhdHRlcnkiKSwgKHsgVVBvd2VyIH0pID0+IHsKICBwYXRjaChVUG93ZXIucHJvdG90eXBlLCAiZGV2aWNlcyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsQmx1ZXRvb3RoIiksICh7IEFkYXB0ZXIsIEJsdWV0b290aDogQmx1ZXRvb3RoMiwgRGV2aWNlIH0pID0+IHsKICBwYXRjaChBZGFwdGVyLnByb3RvdHlwZSwgInV1aWRzIik7CiAgcGF0Y2goQmx1ZXRvb3RoMi5wcm90b3R5cGUsICJhZGFwdGVycyIpOwogIHBhdGNoKEJsdWV0b290aDIucHJvdG90eXBlLCAiZGV2aWNlcyIpOwogIHBhdGNoKERldmljZS5wcm90b3R5cGUsICJ1dWlkcyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsSHlwcmxhbmQiKSwgKHsgSHlwcmxhbmQ6IEh5cHJsYW5kNCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHsKICBwYXRjaChIeXBybGFuZDQucHJvdG90eXBlLCAiYmluZHMiKTsKICBwYXRjaChIeXBybGFuZDQucHJvdG90eXBlLCAibW9uaXRvcnMiKTsKICBwYXRjaChIeXBybGFuZDQucHJvdG90eXBlLCAid29ya3NwYWNlcyIpOwogIHBhdGNoKEh5cHJsYW5kNC5wcm90b3R5cGUsICJjbGllbnRzIik7CiAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsICJhdmFpbGFibGVNb2RlcyIpOwogIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCAiYXZhaWxhYmxlX21vZGVzIik7CiAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgImNsaWVudHMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbE1wcmlzIiksICh7IE1wcmlzOiBNcHJpczIsIFBsYXllciB9KSA9PiB7CiAgcGF0Y2goTXByaXMyLnByb3RvdHlwZSwgInBsYXllcnMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkX3VyaV9zY2hlbWVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgInN1cHBvcnRlZFVyaVNjaGVtZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkX21pbWVfdHlwZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkTWltZVR5cGVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgImNvbW1lbnRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxOZXR3b3JrIiksICh7IFdpZmkgfSkgPT4gewogIHBhdGNoKFdpZmkucHJvdG90eXBlLCAiYWNjZXNzX3BvaW50cyIpOwogIHBhdGNoKFdpZmkucHJvdG90eXBlLCAiYWNjZXNzUG9pbnRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxOb3RpZmQiKSwgKHsgTm90aWZkOiBOb3RpZmQyLCBOb3RpZmljYXRpb24gfSkgPT4gewogIHBhdGNoKE5vdGlmZDIucHJvdG90eXBlLCAibm90aWZpY2F0aW9ucyIpOwogIHBhdGNoKE5vdGlmaWNhdGlvbi5wcm90b3R5cGUsICJhY3Rpb25zIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxQb3dlclByb2ZpbGVzIiksICh7IFBvd2VyUHJvZmlsZXMgfSkgPT4gewogIHBhdGNoKFBvd2VyUHJvZmlsZXMucHJvdG90eXBlLCAiYWN0aW9ucyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsV3AiKSwgKHsgV3A6IFdwMiwgQXVkaW8sIFZpZGVvIH0pID0+IHsKICBwYXRjaChXcDIucHJvdG90eXBlLCAiZW5kcG9pbnRzIik7CiAgcGF0Y2goV3AyLnByb3RvdHlwZSwgImRldmljZXMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJzdHJlYW1zIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAicmVjb3JkZXJzIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAibWljcm9waG9uZXMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJzcGVha2VycyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgImRldmljZXMiKTsKICBwYXRjaChWaWRlby5wcm90b3R5cGUsICJzdHJlYW1zIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAicmVjb3JkZXJzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAic2lua3MiKTsKICBwYXRjaChWaWRlby5wcm90b3R5cGUsICJzb3VyY2VzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAiZGV2aWNlcyIpOwp9KTsKCi8vIC4uLy4uLy4uLy4uL25peC9zdG9yZS84Y2w1OGlwMm5hc2c2cmR5ajU5Y3dnMmYwcWJpeHMyOC1hc3RhbC1nanMvc2hhcmUvYXN0YWwvZ2pzL19hcHAudHMKaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gImNvbnNvbGUiOwppbXBvcnQgeyBleGl0LCBwcm9ncmFtQXJncyB9IGZyb20gInN5c3RlbSI7CmltcG9ydCBJTyBmcm9tICJnaTovL0FzdGFsSU8iOwppbXBvcnQgR09iamVjdDIgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKZnVuY3Rpb24gbWtBcHAoQXBwKSB7CiAgcmV0dXJuIG5ldyBjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHsKICAgIHN0YXRpYyB7CiAgICAgIEdPYmplY3QyLnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6ICJBc3RhbEpTIiB9LCB0aGlzKTsKICAgIH0KICAgIGV2YWwoYm9keSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IGZuID0gRnVuY3Rpb24oYHJldHVybiAoYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR7Ym9keS5pbmNsdWRlcygiOyIpID8gYm9keSA6IGByZXR1cm4gJHtib2R5fTtgfQogICAgICAgICAgICAgICAgICAgIH0pYCk7CiAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlaik7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHJlaihlcnJvcik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICAgIHZmdW5jX3JlcXVlc3QobXNnLCBjb25uKSB7CiAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXF1ZXN0SGFuZGxlciA9PT0gImZ1bmN0aW9uIikgewogICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIobXNnLCAocmVzcG9uc2UpID0+IHsKICAgICAgICAgIElPLndyaXRlX3NvY2soCiAgICAgICAgICAgIGNvbm4sCiAgICAgICAgICAgIFN0cmluZyhyZXNwb25zZSksCiAgICAgICAgICAgIChfLCByZXMpID0+IElPLndyaXRlX3NvY2tfZmluaXNoKHJlcykKICAgICAgICAgICk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3VwZXIudmZ1bmNfcmVxdWVzdChtc2csIGNvbm4pOwogICAgICB9CiAgICB9CiAgICBhcHBseV9jc3Moc3R5bGUsIHJlc2V0ID0gZmFsc2UpIHsKICAgICAgc3VwZXIuYXBwbHlfY3NzKHN0eWxlLCByZXNldCk7CiAgICB9CiAgICBxdWl0KGNvZGUpIHsKICAgICAgc3VwZXIucXVpdCgpOwogICAgICBleGl0KGNvZGUgPz8gMCk7CiAgICB9CiAgICBzdGFydCh7IHJlcXVlc3RIYW5kbGVyLCBjc3MsIGhvbGQsIG1haW4sIGNsaWVudCwgaWNvbnMsIC4uLmNmZyB9ID0ge30pIHsKICAgICAgY29uc3QgYXBwID0gdGhpczsKICAgICAgY2xpZW50ID8/PSAoKSA9PiB7CiAgICAgICAgcHJpbnQoYEFzdGFsIGluc3RhbmNlICIke2FwcC5pbnN0YW5jZU5hbWV9IiBhbHJlYWR5IHJ1bm5pbmdgKTsKICAgICAgICBleGl0KDEpOwogICAgICB9OwogICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNmZyk7CiAgICAgIHNldENvbnNvbGVMb2dEb21haW4oYXBwLmluc3RhbmNlTmFtZSk7CiAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSByZXF1ZXN0SGFuZGxlcjsKICAgICAgYXBwLmNvbm5lY3QoImFjdGl2YXRlIiwgKCkgPT4gewogICAgICAgIG1haW4/LiguLi5wcm9ncmFtQXJncyk7CiAgICAgIH0pOwogICAgICB0cnkgewogICAgICAgIGFwcC5hY3F1aXJlX3NvY2tldCgpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHJldHVybiBjbGllbnQoKG1zZykgPT4gSU8uc2VuZF9yZXF1ZXN0KGFwcC5pbnN0YW5jZU5hbWUsIG1zZyksIC4uLnByb2dyYW1BcmdzKTsKICAgICAgfQogICAgICBpZiAoY3NzKQogICAgICAgIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpOwogICAgICBpZiAoaWNvbnMpCiAgICAgICAgYXBwLmFkZF9pY29ucyhpY29ucyk7CiAgICAgIGhvbGQgPz89IHRydWU7CiAgICAgIGlmIChob2xkKQogICAgICAgIGFwcC5ob2xkKCk7CiAgICAgIGFwcC5ydW5Bc3luYyhbXSk7CiAgICB9CiAgfSgpOwp9CgovLyAuLi8uLi8uLi8uLi9uaXgvc3RvcmUvOGNsNThpcDJuYXNnNnJkeWo1OWN3ZzJmMHFiaXhzMjgtYXN0YWwtZ2pzL3NoYXJlL2FzdGFsL2dqcy9ndGszL2FwcC50cwpHdGsyLmluaXQobnVsbCk7CnZhciBhcHBfZGVmYXVsdCA9IG1rQXBwKEFzdGFsNS5BcHBsaWNhdGlvbik7CgovLyAuLi8uLi8uLi8uLi9uaXgvc3RvcmUvOGNsNThpcDJuYXNnNnJkeWo1OWN3ZzJmMHFiaXhzMjgtYXN0YWwtZ2pzL3NoYXJlL2FzdGFsL2dqcy9ndGszL3dpZGdldC50cwppbXBvcnQgQXN0YWw2IGZyb20gImdpOi8vQXN0YWw/dmVyc2lvbj0zLjAiOwppbXBvcnQgR3RrMyBmcm9tICJnaTovL0d0az92ZXJzaW9uPTMuMCI7CmltcG9ydCBHT2JqZWN0MyBmcm9tICJnaTovL0dPYmplY3QiOwpmdW5jdGlvbiBmaWx0ZXIoY2hpbGRyZW4pIHsKICByZXR1cm4gY2hpbGRyZW4uZmxhdChJbmZpbml0eSkubWFwKChjaCkgPT4gY2ggaW5zdGFuY2VvZiBHdGszLldpZGdldCA/IGNoIDogbmV3IEd0azMuTGFiZWwoeyB2aXNpYmxlOiB0cnVlLCBsYWJlbDogU3RyaW5nKGNoKSB9KSk7Cn0KT2JqZWN0LmRlZmluZVByb3BlcnR5KEFzdGFsNi5Cb3gucHJvdG90eXBlLCAiY2hpbGRyZW4iLCB7CiAgZ2V0KCkgewogICAgcmV0dXJuIHRoaXMuZ2V0X2NoaWxkcmVuKCk7CiAgfSwKICBzZXQodikgewogICAgdGhpcy5zZXRfY2hpbGRyZW4odik7CiAgfQp9KTsKdmFyIEJveCA9IGNsYXNzIGV4dGVuZHMgYXN0YWxpZnkoQXN0YWw2LkJveCkgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiQm94IiB9LCB0aGlzKTsKICB9CiAgY29uc3RydWN0b3IocHJvcHMsIC4uLmNoaWxkcmVuKSB7CiAgICBzdXBlcih7IGNoaWxkcmVuLCAuLi5wcm9wcyB9KTsKICB9CiAgc2V0Q2hpbGRyZW4oY2hpbGRyZW4pIHsKICAgIHRoaXMuc2V0X2NoaWxkcmVuKGZpbHRlcihjaGlsZHJlbikpOwogIH0KfTsKdmFyIEJ1dHRvbiA9IGNsYXNzIGV4dGVuZHMgYXN0YWxpZnkoQXN0YWw2LkJ1dHRvbikgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiQnV0dG9uIiB9LCB0aGlzKTsKICB9CiAgY29uc3RydWN0b3IocHJvcHMsIGNoaWxkKSB7CiAgICBzdXBlcih7IGNoaWxkLCAuLi5wcm9wcyB9KTsKICB9Cn07CnZhciBDZW50ZXJCb3ggPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5DZW50ZXJCb3gpIHsKICBzdGF0aWMgewogICAgR09iamVjdDMucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogIkNlbnRlckJveCIgfSwgdGhpcyk7CiAgfQogIGNvbnN0cnVjdG9yKHByb3BzLCAuLi5jaGlsZHJlbikgewogICAgc3VwZXIoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSk7CiAgfQogIHNldENoaWxkcmVuKGNoaWxkcmVuKSB7CiAgICBjb25zdCBjaCA9IGZpbHRlcihjaGlsZHJlbik7CiAgICB0aGlzLnN0YXJ0V2lkZ2V0ID0gY2hbMF0gfHwgbmV3IEd0azMuQm94KCk7CiAgICB0aGlzLmNlbnRlcldpZGdldCA9IGNoWzFdIHx8IG5ldyBHdGszLkJveCgpOwogICAgdGhpcy5lbmRXaWRnZXQgPSBjaFsyXSB8fCBuZXcgR3RrMy5Cb3goKTsKICB9Cn07CnZhciBDaXJjdWxhclByb2dyZXNzID0gY2xhc3MgZXh0ZW5kcyBhc3RhbGlmeShBc3RhbDYuQ2lyY3VsYXJQcm9ncmVzcykgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiQ2lyY3VsYXJQcm9ncmVzcyIgfSwgdGhpcyk7CiAgfQogIGNvbnN0cnVjdG9yKHByb3BzLCBjaGlsZCkgewogICAgc3VwZXIoeyBjaGlsZCwgLi4ucHJvcHMgfSk7CiAgfQp9Owp2YXIgRHJhd2luZ0FyZWEgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEd0azMuRHJhd2luZ0FyZWEpIHsKICBzdGF0aWMgewogICAgR09iamVjdDMucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogIkRyYXdpbmdBcmVhIiB9LCB0aGlzKTsKICB9CiAgY29uc3RydWN0b3IocHJvcHMpIHsKICAgIHN1cGVyKHByb3BzKTsKICB9Cn07CnZhciBFbnRyeSA9IGNsYXNzIGV4dGVuZHMgYXN0YWxpZnkoR3RrMy5FbnRyeSkgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiRW50cnkiIH0sIHRoaXMpOwogIH0KICBjb25zdHJ1Y3Rvcihwcm9wcykgewogICAgc3VwZXIocHJvcHMpOwogIH0KfTsKdmFyIEV2ZW50Qm94ID0gY2xhc3MgZXh0ZW5kcyBhc3RhbGlmeShBc3RhbDYuRXZlbnRCb3gpIHsKICBzdGF0aWMgewogICAgR09iamVjdDMucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogIkV2ZW50Qm94IiB9LCB0aGlzKTsKICB9CiAgY29uc3RydWN0b3IocHJvcHMsIGNoaWxkKSB7CiAgICBzdXBlcih7IGNoaWxkLCAuLi5wcm9wcyB9KTsKICB9Cn07CnZhciBJY29uID0gY2xhc3MgZXh0ZW5kcyBhc3RhbGlmeShBc3RhbDYuSWNvbikgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiSWNvbiIgfSwgdGhpcyk7CiAgfQogIGNvbnN0cnVjdG9yKHByb3BzKSB7CiAgICBzdXBlcihwcm9wcyk7CiAgfQp9Owp2YXIgTGFiZWwgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5MYWJlbCkgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiTGFiZWwiIH0sIHRoaXMpOwogIH0KICBjb25zdHJ1Y3Rvcihwcm9wcykgewogICAgc3VwZXIocHJvcHMpOwogIH0KICBzZXRDaGlsZHJlbihjaGlsZHJlbikgewogICAgdGhpcy5sYWJlbCA9IFN0cmluZyhjaGlsZHJlbik7CiAgfQp9Owp2YXIgTGV2ZWxCYXIgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5MZXZlbEJhcikgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiTGV2ZWxCYXIiIH0sIHRoaXMpOwogIH0KICBjb25zdHJ1Y3Rvcihwcm9wcykgewogICAgc3VwZXIocHJvcHMpOwogIH0KfTsKdmFyIE1lbnVCdXR0b24gPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEd0azMuTWVudUJ1dHRvbikgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiTWVudUJ1dHRvbiIgfSwgdGhpcyk7CiAgfQogIGNvbnN0cnVjdG9yKHByb3BzLCBjaGlsZCkgewogICAgc3VwZXIoeyBjaGlsZCwgLi4ucHJvcHMgfSk7CiAgfQp9OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoQXN0YWw2Lk92ZXJsYXkucHJvdG90eXBlLCAib3ZlcmxheXMiLCB7CiAgZ2V0KCkgewogICAgcmV0dXJuIHRoaXMuZ2V0X292ZXJsYXlzKCk7CiAgfSwKICBzZXQodikgewogICAgdGhpcy5zZXRfb3ZlcmxheXModik7CiAgfQp9KTsKdmFyIE92ZXJsYXkgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5PdmVybGF5KSB7CiAgc3RhdGljIHsKICAgIEdPYmplY3QzLnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6ICJPdmVybGF5IiB9LCB0aGlzKTsKICB9CiAgY29uc3RydWN0b3IocHJvcHMsIC4uLmNoaWxkcmVuKSB7CiAgICBzdXBlcih7IGNoaWxkcmVuLCAuLi5wcm9wcyB9KTsKICB9CiAgc2V0Q2hpbGRyZW4oY2hpbGRyZW4pIHsKICAgIGNvbnN0IFtjaGlsZCwgLi4ub3ZlcmxheXNdID0gZmlsdGVyKGNoaWxkcmVuKTsKICAgIHRoaXMuc2V0X2NoaWxkKGNoaWxkKTsKICAgIHRoaXMuc2V0X292ZXJsYXlzKG92ZXJsYXlzKTsKICB9Cn07CnZhciBSZXZlYWxlciA9IGNsYXNzIGV4dGVuZHMgYXN0YWxpZnkoR3RrMy5SZXZlYWxlcikgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiUmV2ZWFsZXIiIH0sIHRoaXMpOwogIH0KICBjb25zdHJ1Y3Rvcihwcm9wcywgY2hpbGQpIHsKICAgIHN1cGVyKHsgY2hpbGQsIC4uLnByb3BzIH0pOwogIH0KfTsKdmFyIFNjcm9sbGFibGUgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5TY3JvbGxhYmxlKSB7CiAgc3RhdGljIHsKICAgIEdPYmplY3QzLnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6ICJTY3JvbGxhYmxlIiB9LCB0aGlzKTsKICB9CiAgY29uc3RydWN0b3IocHJvcHMsIGNoaWxkKSB7CiAgICBzdXBlcih7IGNoaWxkLCAuLi5wcm9wcyB9KTsKICB9Cn07CnZhciBTbGlkZXIgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5TbGlkZXIpIHsKICBzdGF0aWMgewogICAgR09iamVjdDMucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogIlNsaWRlciIgfSwgdGhpcyk7CiAgfQogIGNvbnN0cnVjdG9yKHByb3BzKSB7CiAgICBzdXBlcihwcm9wcyk7CiAgfQp9Owp2YXIgU3RhY2sgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5TdGFjaykgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiU3RhY2siIH0sIHRoaXMpOwogIH0KICBjb25zdHJ1Y3Rvcihwcm9wcywgLi4uY2hpbGRyZW4pIHsKICAgIHN1cGVyKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pOwogIH0KICBzZXRDaGlsZHJlbihjaGlsZHJlbikgewogICAgdGhpcy5zZXRfY2hpbGRyZW4oZmlsdGVyKGNoaWxkcmVuKSk7CiAgfQp9Owp2YXIgU3dpdGNoID0gY2xhc3MgZXh0ZW5kcyBhc3RhbGlmeShHdGszLlN3aXRjaCkgewogIHN0YXRpYyB7CiAgICBHT2JqZWN0My5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiU3dpdGNoIiB9LCB0aGlzKTsKICB9CiAgY29uc3RydWN0b3IocHJvcHMpIHsKICAgIHN1cGVyKHByb3BzKTsKICB9Cn07CnZhciBXaW5kb3cgPSBjbGFzcyBleHRlbmRzIGFzdGFsaWZ5KEFzdGFsNi5XaW5kb3cpIHsKICBzdGF0aWMgewogICAgR09iamVjdDMucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogIldpbmRvdyIgfSwgdGhpcyk7CiAgfQogIGNvbnN0cnVjdG9yKHByb3BzLCBjaGlsZCkgewogICAgc3VwZXIoeyBjaGlsZCwgLi4ucHJvcHMgfSk7CiAgfQp9OwoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvaW5kZXgudHMKaW1wb3J0IHsgZGVmYXVsdCBhcyBkZWZhdWx0MyB9IGZyb20gImdpOi8vQXN0YWxJTz92ZXJzaW9uPTAuMSI7CgovLyAuLi8uLi8uLi8uLi9uaXgvc3RvcmUvOGNsNThpcDJuYXNnNnJkeWo1OWN3ZzJmMHFiaXhzMjgtYXN0YWwtZ2pzL3NoYXJlL2FzdGFsL2dqcy9maWxlLnRzCmltcG9ydCBBc3RhbDggZnJvbSAiZ2k6Ly9Bc3RhbElPIjsKaW1wb3J0IEdpbyBmcm9tICJnaTovL0dpbz92ZXJzaW9uPTIuMCI7CgovLyAuLi8uLi8uLi8uLi9uaXgvc3RvcmUvOGNsNThpcDJuYXNnNnJkeWo1OWN3ZzJmMHFiaXhzMjgtYXN0YWwtZ2pzL3NoYXJlL2FzdGFsL2dqcy9nb2JqZWN0LnRzCmltcG9ydCBHT2JqZWN0NCBmcm9tICJnaTovL0dPYmplY3QiOwppbXBvcnQgeyBkZWZhdWx0IGFzIGRlZmF1bHQyIH0gZnJvbSAiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wIjsKdmFyIG1ldGEgPSBTeW1ib2woIm1ldGEiKTsKdmFyIHByaXYgPSBTeW1ib2woInByaXYiKTsKdmFyIHsgUGFyYW1TcGVjLCBQYXJhbUZsYWdzIH0gPSBHT2JqZWN0NDsKCi8vIHNyYy90aW1lL1RpbWVTZXJ2aWNlLnRzCnZhciBUaW1lU2VydmljZSA9IGNsYXNzIF9UaW1lU2VydmljZSB7CiAgY29uc3RydWN0b3IoKSB7CiAgICB0aGlzLnRpbWVWYXJpYWJsZSA9IFZhcmlhYmxlKCIiKS5wb2xsKDFlMywgImRhdGUiKTsKICB9CiAgLy8gUHJpdmF0ZSBjb25zdHJ1Y3RvciB0byBwcmV2ZW50IGRpcmVjdCBpbnN0YW50aWF0aW9uCiAgc3RhdGljIGdldEluc3RhbmNlKCkgewogICAgaWYgKCFfVGltZVNlcnZpY2UuaW5zdGFuY2UpIHsKICAgICAgX1RpbWVTZXJ2aWNlLmluc3RhbmNlID0gbmV3IF9UaW1lU2VydmljZSgpOwogICAgfQogICAgcmV0dXJuIF9UaW1lU2VydmljZS5pbnN0YW5jZTsKICB9CiAgZ2V0VGltZSgpIHsKICAgIHJldHVybiB0aGlzLnRpbWVWYXJpYWJsZTsKICB9Cn07CgovLyBzcmMvc291bmQvV2lyZVBsdW1iZXJWaWV3TW9kZWwudHMKaW1wb3J0IFdwIGZyb20gImdpOi8vQXN0YWxXcCI7CgovLyBzcmMvbG9nZ2VyL0xvZ2dlci50cwp2YXIgTG9nTGV2ZWwgPSAvKiBAX19QVVJFX18gKi8gKChMb2dMZXZlbDIpID0+IHsKICBMb2dMZXZlbDJbTG9nTGV2ZWwyWyJERUJVRyJdID0gMV0gPSAiREVCVUciOwogIExvZ0xldmVsMltMb2dMZXZlbDJbIklORk8iXSA9IDJdID0gIklORk8iOwogIExvZ0xldmVsMltMb2dMZXZlbDJbIkVSUk9SIl0gPSAzXSA9ICJFUlJPUiI7CiAgTG9nTGV2ZWwyW0xvZ0xldmVsMlsiV0FSTiJdID0gNF0gPSAiV0FSTiI7CiAgcmV0dXJuIExvZ0xldmVsMjsKfSkoTG9nTGV2ZWwgfHwge30pOwp2YXIgTG9nZ2VyID0gY2xhc3MgX0xvZ2dlciB7CiAgY29uc3RydWN0b3IobG9nZ2luZ0NsYXNzTmFtZSwgbG9nTGV2ZWwgPSBfTG9nZ2VyLkRFRkFVTFRfTE9HX0xFVkVMKSB7CiAgICB0aGlzLmxvZ0xldmVsID0gX0xvZ2dlci5ERUZBVUxUX0xPR19MRVZFTDsKICAgIHRoaXMubG9nZ2luZ0NsYXNzTmFtZSA9IGxvZ2dpbmdDbGFzc05hbWU7CiAgICB0aGlzLmxvZ0xldmVsID0gbG9nTGV2ZWw7CiAgfQogIHN0YXRpYyB7CiAgICB0aGlzLkRFRkFVTFRfTE9HX0xFVkVMID0gMSAvKiBERUJVRyAqLzsKICB9CiAgc3RhdGljIHsKICAgIHRoaXMuTUFYX0NMQVNTX05BTUVfTEVOR1RIID0gMjA7CiAgfQogIGRlYnVnKG1lc3NhZ2UsIC4uLmFyZ3MpIHsKICAgIHRoaXMucHJpbnRXaXRoTGV2ZWwoMSAvKiBERUJVRyAqLywgbWVzc2FnZSwgLi4uYXJncyk7CiAgfQogIGluZm8obWVzc2FnZSwgLi4uYXJncykgewogICAgdGhpcy5wcmludFdpdGhMZXZlbCgyIC8qIElORk8gKi8sIG1lc3NhZ2UsIC4uLmFyZ3MpOwogIH0KICB3YXJuKG1lc3NhZ2UsIC4uLmFyZ3MpIHsKICAgIHRoaXMucHJpbnRXaXRoTGV2ZWwoNCAvKiBXQVJOICovLCBtZXNzYWdlLCAuLi5hcmdzKTsKICB9CiAgZXJyb3IobWVzc2FnZSwgLi4uYXJncykgewogICAgdGhpcy5wcmludFdpdGhMZXZlbCgzIC8qIEVSUk9SICovLCBtZXNzYWdlLCAuLi5hcmdzKTsKICB9CiAgc2hvdWxkTG9nKGxldmVsKSB7CiAgICByZXR1cm4gbGV2ZWwgPj0gdGhpcy5sb2dMZXZlbDsKICB9CiAgcHJpbnRXaXRoTGV2ZWwobGV2ZWwsIG1lc3NhZ2UsIC4uLmFyZ3MpIHsKICAgIGlmICghdGhpcy5zaG91bGRMb2cobGV2ZWwpKSByZXR1cm47CiAgICBjb25zdCBsZXZlbFN0cmluZyA9IExvZ0xldmVsW2xldmVsXS50b1VwcGVyQ2FzZSgpOwogICAgY29uc3QgbWF4ID0gX0xvZ2dlci5NQVhfQ0xBU1NfTkFNRV9MRU5HVEg7CiAgICBsZXQgbmFtZSA9IHRoaXMubG9nZ2luZ0NsYXNzTmFtZTsKICAgIGlmIChuYW1lLmxlbmd0aCA+IG1heCkgewogICAgICBuYW1lID0gbmFtZS5zbGljZSgwLCBtYXgpOwogICAgfSBlbHNlIHsKICAgICAgbmFtZSA9IG5hbWUucGFkRW5kKG1heCwgIiAiKTsKICAgIH0KICAgIGNvbnN0IGZvcm1hdHRlZCA9IGAke2xldmVsU3RyaW5nfSAtICR7bmFtZX0gLSAke21lc3NhZ2V9YDsKICAgIGNvbnNvbGUubG9nKGZvcm1hdHRlZCwgLi4uYXJncyk7CiAgfQp9OwoKLy8gc3JjL3NvdW5kL1dpcmVQbHVtYmVyVmlld01vZGVsLnRzCnZhciBXaXJlUGx1bWJlclZpZXdNb2RlbCA9IGNsYXNzIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHRoaXMubGFzdERlZmF1bHRTcGVha2VyVm9sdW1lQmVmb3JlTXV0ZSA9IG51bGw7CiAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIodGhpcy5jb25zdHJ1Y3Rvci5uYW1lKTsKICAgIHRoaXMud2lyZXBsdW1iZXIgPSBXcC5nZXRfZGVmYXVsdCgpOwogICAgaWYgKCF0aGlzLndpcmVwbHVtYmVyKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiV2lyZVBsdW1iZXIgaXMgbm90IGluaXRpYWxpemVkLiIpOwogICAgfQogICAgdGhpcy5fYXVkaW8gPSBiaW5kKHRoaXMud2lyZXBsdW1iZXIsICJhdWRpbyIpOwogICAgdGhpcy5fZGVmYXVsdFNwZWFrZXIgPSB0aGlzLl9hdWRpby5hcygKICAgICAgKGF1ZGlvKSA9PiBiaW5kKGF1ZGlvLCAiZGVmYXVsdFNwZWFrZXIiKS5nZXQoKQogICAgKTsKICAgIHRoaXMuX3NwZWFrZXJzID0gdGhpcy5fYXVkaW8uYXMoCiAgICAgIChhdWRpbykgPT4gYmluZChhdWRpbywgInNwZWFrZXJzIikuZ2V0KCkgfHwgW10KICAgICk7CiAgfQogIGdldFdpcmVQbHVtYmVyKCkgewogICAgaWYgKCF0aGlzLndpcmVwbHVtYmVyKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiV2lyZVBsdW1iZXIgaXMgbm90IGluaXRpYWxpemVkLiIpOwogICAgfQogICAgcmV0dXJuIHRoaXMud2lyZXBsdW1iZXI7CiAgfQogIGdldEF1ZGlvKCkgewogICAgcmV0dXJuIHRoaXMuX2F1ZGlvOwogIH0KICBnZXRWaWRlbygpIHsKICAgIHJldHVybiBiaW5kKHRoaXMuZ2V0V2lyZVBsdW1iZXIoKSwgInZpZGVvIik7CiAgfQogIGdldFNwZWFrZXJzKCkgewogICAgcmV0dXJuIHRoaXMuX3NwZWFrZXJzOwogIH0KICBnZXREZWZhdWx0U3BlYWtlcigpIHsKICAgIHRoaXMubG9nZ2VyLmRlYnVnKAogICAgICAiR2V0dGluZyBkZWZhdWx0IHNwZWFrZXIgd2hpY2ggaXM6ICIsCiAgICAgIHRoaXMuX2RlZmF1bHRTcGVha2VyLmdldCgpPy5nZXRfZGVzY3JpcHRpb24oKQogICAgKTsKICAgIHJldHVybiB0aGlzLl9kZWZhdWx0U3BlYWtlcjsKICB9CiAgZ2V0RGVmYXVsdFNwZWFrZXJWb2x1bWUoKSB7CiAgICByZXR1cm4gdGhpcy5fZGVmYXVsdFNwZWFrZXIuYXMoKHNwZWFrZXIpID0+IGJpbmQoc3BlYWtlciwgInZvbHVtZSIpLmdldCgpKTsKICB9CiAgZ2V0RGVmYXVsdFNwZWFrZXJWb2x1bWVJY29uKCkgewogICAgcmV0dXJuIHRoaXMuX2RlZmF1bHRTcGVha2VyLmFzKAogICAgICAoc3BlYWtlcikgPT4gYmluZChzcGVha2VyLCAidm9sdW1lSWNvbiIpLmdldCgpCiAgICApOwogIH0KICBzZXREZWZhdWx0U3BlYWtlclZvbHVtZSh2b2x1bWUpIHsKICAgIGNvbnN0IGRlZmF1bHRTcGVha2VyID0gdGhpcy5fZGVmYXVsdFNwZWFrZXIuZ2V0KCk7CiAgICBpZiAoZGVmYXVsdFNwZWFrZXIpIHsKICAgICAgZGVmYXVsdFNwZWFrZXIuc2V0X3ZvbHVtZSh2b2x1bWUpOwogICAgfQogIH0KICBtdXRlRGVmYXVsdFNwZWFrZXIoKSB7CiAgICBjb25zdCBkZWZhdWx0U3BlYWtlciA9IHRoaXMuX2RlZmF1bHRTcGVha2VyLmdldCgpOwogICAgaWYgKGRlZmF1bHRTcGVha2VyKSB7CiAgICAgIHRoaXMubGFzdERlZmF1bHRTcGVha2VyVm9sdW1lQmVmb3JlTXV0ZSA9IGRlZmF1bHRTcGVha2VyLmdldF92b2x1bWUoKTsKICAgICAgZGVmYXVsdFNwZWFrZXIuc2V0X3ZvbHVtZSgwKTsKICAgIH0KICB9CiAgdW5tdXRlRGVmYXVsdFNwZWFrZXIoKSB7CiAgICBjb25zdCBkZWZhdWx0U3BlYWtlciA9IHRoaXMuX2RlZmF1bHRTcGVha2VyLmdldCgpOwogICAgaWYgKGRlZmF1bHRTcGVha2VyICYmIHRoaXMubGFzdERlZmF1bHRTcGVha2VyVm9sdW1lQmVmb3JlTXV0ZSAhPT0gbnVsbCkgewogICAgICBkZWZhdWx0U3BlYWtlci5zZXRfdm9sdW1lKHRoaXMubGFzdERlZmF1bHRTcGVha2VyVm9sdW1lQmVmb3JlTXV0ZSk7CiAgICAgIHRoaXMubGFzdERlZmF1bHRTcGVha2VyVm9sdW1lQmVmb3JlTXV0ZSA9IG51bGw7CiAgICB9CiAgfQogIHNldERlZmF1bHRTcGVha2VyKHNwZWFrZXIpIHsKICAgIHNwZWFrZXIuc2V0X2lzX2RlZmF1bHQodHJ1ZSk7CiAgICB0aGlzLmxvZ2dlci5kZWJ1ZygKICAgICAgIlNldCBkZWZhdWx0IHNwZWFrZXIgdG86ICIsCiAgICAgIHNwZWFrZXIuZ2V0X2Rlc2NyaXB0aW9uKCksCiAgICAgICIgd2l0aCBJRDogIiwKICAgICAgc3BlYWtlci5nZXRfaWQoKSwKICAgICAgIiBkZWZhdWx0IHNwZWFrZXIgSUQgaXM6ICIsCiAgICAgIHRoaXMuZ2V0RGVmYXVsdFNwZWFrZXIoKS5nZXQoKT8uZ2V0X2Rlc2NyaXB0aW9uKCkKICAgICk7CiAgfQp9OwoKLy8gLi4vLi4vLi4vLi4vbml4L3N0b3JlLzhjbDU4aXAybmFzZzZyZHlqNTljd2cyZjBxYml4czI4LWFzdGFsLWdqcy9zaGFyZS9hc3RhbC9nanMvZ3RrMy9qc3gtcnVudGltZS50cwpmdW5jdGlvbiBGcmFnbWVudCh7IGNoaWxkcmVuID0gW10sIGNoaWxkIH0pIHsKICBpZiAoY2hpbGQpIGNoaWxkcmVuLnB1c2goY2hpbGQpOwogIHJldHVybiBtZXJnZUJpbmRpbmdzKGNoaWxkcmVuKTsKfQpmdW5jdGlvbiBqc3gyKGN0b3IsIHByb3BzKSB7CiAgcmV0dXJuIGpzeChjdG9ycywgY3RvciwgcHJvcHMpOwp9CnZhciBjdG9ycyA9IHsKICBib3g6IEJveCwKICBidXR0b246IEJ1dHRvbiwKICBjZW50ZXJib3g6IENlbnRlckJveCwKICBjaXJjdWxhcnByb2dyZXNzOiBDaXJjdWxhclByb2dyZXNzLAogIGRyYXdpbmdhcmVhOiBEcmF3aW5nQXJlYSwKICBlbnRyeTogRW50cnksCiAgZXZlbnRib3g6IEV2ZW50Qm94LAogIC8vIFRPRE86IGZpeGVkCiAgLy8gVE9ETzogZmxvd2JveAogIGljb246IEljb24sCiAgbGFiZWw6IExhYmVsLAogIGxldmVsYmFyOiBMZXZlbEJhciwKICAvLyBUT0RPOiBsaXN0Ym94CiAgbWVudWJ1dHRvbjogTWVudUJ1dHRvbiwKICBvdmVybGF5OiBPdmVybGF5LAogIHJldmVhbGVyOiBSZXZlYWxlciwKICBzY3JvbGxhYmxlOiBTY3JvbGxhYmxlLAogIHNsaWRlcjogU2xpZGVyLAogIHN0YWNrOiBTdGFjaywKICBzd2l0Y2g6IFN3aXRjaCwKICB3aW5kb3c6IFdpbmRvdwp9Owp2YXIganN4cyA9IGpzeDI7CgovLyBzcmMvdmlldy9ub3RjaC9leHBhbmRlZC9TZXR0aW5nc01lbnUudHN4CnZhciB0b2dnbGVTb3VuZFNldHRpbmdzID0gKG5vdGNoU3RhdGVWaWV3TW9kZWwpID0+IHsKICBjb25zdCBjdXJyZW50U3RhdGUgPSBub3RjaFN0YXRlVmlld01vZGVsLmdldE5vdGNoU3RhdGUoKS5nZXQoKTsKICBpZiAoY3VycmVudFN0YXRlID09PSAic291bmRfc2V0dGluZ3MiIC8qIFNPVU5EX1NFVFRJTkdTICovKSB7CiAgICBub3RjaFN0YXRlVmlld01vZGVsLnNldE5vdGNoU3RhdGUoIm5vcm1hbCIgLyogTk9STUFMICovKTsKICB9IGVsc2UgewogICAgbm90Y2hTdGF0ZVZpZXdNb2RlbC5zZXROb3RjaFN0YXRlKCJzb3VuZF9zZXR0aW5ncyIgLyogU09VTkRfU0VUVElOR1MgKi8pOwogIH0KfTsKZnVuY3Rpb24gU291bmRTZXR0aW5nc0J1dHRvbihwcm9wcykgewogIGNvbnN0IHdpcmVQbHVtYmVyVmlld01vZGVsMiA9IG5ldyBXaXJlUGx1bWJlclZpZXdNb2RlbCgpOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJidXR0b24iLAogICAgewogICAgICBjbGFzc05hbWU6ICJpY29uX2J1dHRvbiB4c21hbGwiLAogICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoImljb24iLCB7IGljb246IHdpcmVQbHVtYmVyVmlld01vZGVsMi5nZXREZWZhdWx0U3BlYWtlclZvbHVtZUljb24oKSB9KSwKICAgICAgb25DbGljazogKCkgPT4gdG9nZ2xlU291bmRTZXR0aW5ncyhwcm9wcy5ub3RjaFN0YXRlVmlld01vZGVsKQogICAgfQogICk7Cn0KZnVuY3Rpb24gU2V0dGluZ3NNZW51KHByb3BzKSB7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIGNsYXNzTmFtZTogInNldHRpbmdzX21lbnUiLAogICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgImJveCIsCiAgICAgICAgewogICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAgICAgU291bmRTZXR0aW5nc0J1dHRvbiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBub3RjaFN0YXRlVmlld01vZGVsOiBwcm9wcy5ub3RjaFN0YXRlVmlld01vZGVsCiAgICAgICAgICAgICAgfQogICAgICAgICAgICApLAogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MigiYnV0dG9uIiwgeyBjbGFzc05hbWU6ICJpY29uX2J1dHRvbiB4c21hbGwiLCBsYWJlbDogIk9wdGlvbiAyIiB9KSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoImJ1dHRvbiIsIHsgY2xhc3NOYW1lOiAiaWNvbl9idXR0b24geHNtYWxsIiwgbGFiZWw6ICJPcHRpb24gMyIgfSkKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgICkKICAgIH0KICApOwp9CgovLyBzcmMvdmlldy9ub3RjaC9leHBhbmRlZC9FeHBhbmRlZE5vdGNoLnRzeApmdW5jdGlvbiBUaW1lMigpIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY2xhc3NOYW1lOiAiZXhwYW5kZWRfbm90Y2hfdGltZSIsIGNoaWxkcmVuOiBbCiAgICAvKiBAX19QVVJFX18gKi8ganN4MigibGFiZWwiLCB7IGNoaWxkcmVuOiBiaW5kKFRpbWVTZXJ2aWNlLmdldEluc3RhbmNlKCkuZ2V0VGltZSgpKS5hcygodGltZSkgPT4gewogICAgICByZXR1cm4gdGltZS5zbGljZSgwLCAxMCk7CiAgICB9KSB9KSwKICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKCJsYWJlbCIsIHsgY2hpbGRyZW46IGJpbmQoVGltZVNlcnZpY2UuZ2V0SW5zdGFuY2UoKS5nZXRUaW1lKCkpLmFzKCh0aW1lKSA9PiB7CiAgICAgIHJldHVybiB0aW1lLnNsaWNlKDEwLCAyMCk7CiAgICB9KSB9KQogIF0gfSk7Cn0KZnVuY3Rpb24gRXhwYW5kZWROb3RjaChwcm9wcykgewogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJib3giLAogICAgewogICAgICBjbGFzc05hbWU6ICJleHBhbmRlZF9ub3RjaCIsCiAgICAgIGNoaWxkOiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAiYm94IiwKICAgICAgICB7CiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MihGcmFnbWVudCwgeyBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAgICAgImJveCIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdmVydGljYWw6IHRydWUsCiAgICAgICAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cyhGcmFnbWVudCwgeyBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgICAgICAgICAgICAgU2V0dGluZ3NNZW51LAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBub3RjaFN0YXRlVmlld01vZGVsOiBwcm9wcy5ub3RjaFN0YXRlVmlld01vZGVsCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MigiYm94IiwgeyBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoVGltZTIsIHt9KSB9KQogICAgICAgICAgICAgICAgICBdIH0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICApIH0pCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICApCiAgICB9CiAgKTsKfQoKLy8gc3JjL21lZGlhL01lZGlhVmlld01vZGVsLnRzCmltcG9ydCBNcHJpcyBmcm9tICJnaTovL0FzdGFsTXByaXMiOwp2YXIgTWVkaWFWaWV3TW9kZWwgPSBjbGFzcyB7CiAgY29uc3RydWN0b3IoKSB7CiAgICB0aGlzLm1wcmlzID0gTXByaXMuZ2V0X2RlZmF1bHQoKTsKICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcigiTWVkaWFWaWV3TW9kZWwiKTsKICAgIHRoaXMuc3BvdGlmeSA9IE1wcmlzLlBsYXllci5uZXcoInNwb3RpZnkiKTsKICAgIHRoaXMueW91dHViZSA9IE1wcmlzLlBsYXllci5uZXcoInlvdXR1YmUiKTsKICB9CiAgZ2V0UGxheWVycygpIHsKICAgIHJldHVybiBiaW5kKHRoaXMubXByaXMsICJwbGF5ZXJzIik7CiAgfQogIGdldFNwb3RpZnlBdmFpbGFibGUoKSB7CiAgICByZXR1cm4gYmluZCh0aGlzLnNwb3RpZnksICJhdmFpbGFibGUiKTsKICB9CiAgZ2V0WW91dHViZUF2YWlsYWJsZSgpIHsKICAgIHJldHVybiBiaW5kKHRoaXMueW91dHViZSwgImF2YWlsYWJsZSIpOwogIH0KfTsKCi8vIHNyYy92aWV3L25vdGNoL25vcm1hbC9Ob3JtYWxOb3RjaC50c3gKZnVuY3Rpb24gTWVkaWFJbmRpY2F0b3IoKSB7CiAgY29uc3QgbWVkaWFWaWV3TW9kZWwgPSBuZXcgTWVkaWFWaWV3TW9kZWwoKTsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYm94IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAibm9ybWFsX25vdGNoX21lZGlhX2ljb24iLAogICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgImJveCIsCiAgICAgICAgewogICAgICAgICAgY2xhc3NOYW1lOiAibm9ybWFsX25vdGNoX21lZGlhX2luZGljYXRvciIsCiAgICAgICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBsYWJlbDogbWVkaWFWaWV3TW9kZWwuZ2V0UGxheWVycygpLmFzKChwbGF5ZXJzKSA9PiB7CiAgICAgICAgICAgICAgICBpZiAocGxheWVycy5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICJObyBNZWRpYSI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gcGxheWVyc1swXS5nZXRfaWRlbnRpdHkoKTsKICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgICApCiAgICAgICAgfQogICAgICApCiAgICB9CiAgKTsKfQpmdW5jdGlvbiBUaW1lMygpIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYm94IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAibm9ybWFsX25vdGNoX3RpbWUiLAogICAgICBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKCJsYWJlbCIsIHsgY2hpbGRyZW46IGJpbmQoVGltZVNlcnZpY2UuZ2V0SW5zdGFuY2UoKS5nZXRUaW1lKCkpLmFzKCh0aW1lKSA9PiB7CiAgICAgICAgICByZXR1cm4gdGltZS5zbGljZSgxMCwgMTYpOwogICAgICAgIH0pIH0pCiAgICAgIF0KICAgIH0KICApOwp9CmZ1bmN0aW9uIE5vcm1hbE5vdGNoKCkgewogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJjZW50ZXJib3giLAogICAgewogICAgICBjbGFzc05hbWU6ICJub3JtYWxfbm90Y2giLAogICAgICBzdGFydFdpZGdldDogLyogQF9fUFVSRV9fICovIGpzeDIoVGltZTMsIHt9KSwKICAgICAgY2VudGVyV2lkZ2V0OiAvKiBAX19QVVJFX18gKi8ganN4MigibGFiZWwiLCB7IGxhYmVsOiAiSHlwcm5vdGNoIiB9KSwKICAgICAgZW5kV2lkZ2V0OiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAiYm94IiwKICAgICAgICB7CiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAgICAgICAiYm94IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB2ZXJ0aWNhbDogdHJ1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoImJveCIsIHsgdmVydGljYWw6IHRydWUsIGNoaWxkcmVuOiBbLyogQF9fUFVSRV9fICovIGpzeDIoTWVkaWFJbmRpY2F0b3IsIHt9KV0gfSkKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgICkKICAgIH0KICApOwp9CgovLyBzcmMvbm90Y2gvc3RhdGUvTm90Y2hTdGF0ZVZpZXdNb2RlbC50cwp2YXIgTm90Y2hTdGF0ZVZpZXdNb2RlbCA9IGNsYXNzIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcigiTm90Y2hTdGF0ZVZpZXdNb2RlbCIpOwogICAgdGhpcy5ub3RjaFN0YXRlID0gVmFyaWFibGUoCiAgICAgICJub3JtYWwiIC8qIE5PUk1BTCAqLwogICAgKTsKICAgIHRoaXMuc3RhdGVDaGFuZ2VUaW1lb3V0ID0gbnVsbDsKICB9CiAgZ2V0Tm90Y2hTdGF0ZSgpIHsKICAgIHJldHVybiBiaW5kKHRoaXMubm90Y2hTdGF0ZSkuYXMoKCkgPT4gewogICAgICByZXR1cm4gdGhpcy5ub3RjaFN0YXRlLmdldCgpOwogICAgfSk7CiAgfQogIHNldE5vdGNoU3RhdGUoc3RhdGUpIHsKICAgIHRoaXMubG9nZ2VyLmluZm8oYFNldHRpbmcgbm90Y2ggc3RhdGUgdG86ICR7c3RhdGV9YCk7CiAgICB0aGlzLm5vdGNoU3RhdGUuc2V0KHN0YXRlKTsKICB9Cn07CgovLyBzcmMvc291bmQvc3BlYWtlcl92b2x1bWUvU291bmRNdXRlQnV0dG9uUHJvcHMudHN4CmZ1bmN0aW9uIFNvdW5kTXV0ZUJ1dHRvbihwcm9wcykgewogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJidXR0b24iLAogICAgewogICAgICBjbGFzc05hbWU6IHByb3BzLndpcmVQbHVtYmVyVmlld01vZGVsLmdldERlZmF1bHRTcGVha2VyVm9sdW1lKCkuYXMoKHZvbHVtZSkgPT4gewogICAgICAgIGxldCBjbGFzc05hbWUgPSAiaWNvbl9idXR0b24geHNtYWxsIjsKICAgICAgICByZXR1cm4gdm9sdW1lID09PSAwID8gY2xhc3NOYW1lICs9ICIgb3V0bGluZWQiIDogY2xhc3NOYW1lICs9ICIgZmlsbGVkIjsKICAgICAgfSksCiAgICAgIGNoaWxkOiAvKiBAX19QVVJFX18gKi8ganN4MigiaWNvbiIsIHsgaWNvbjogcHJvcHMud2lyZVBsdW1iZXJWaWV3TW9kZWwuZ2V0RGVmYXVsdFNwZWFrZXJWb2x1bWVJY29uKCkgfSksCiAgICAgIG9uQnV0dG9uUmVsZWFzZUV2ZW50OiAoKSA9PiB7CiAgICAgICAgcHJvcHMud2lyZVBsdW1iZXJWaWV3TW9kZWwuZ2V0RGVmYXVsdFNwZWFrZXJWb2x1bWUoKS5nZXQoKSA+IDAgPyBwcm9wcy53aXJlUGx1bWJlclZpZXdNb2RlbC5tdXRlRGVmYXVsdFNwZWFrZXIoKSA6IHByb3BzLndpcmVQbHVtYmVyVmlld01vZGVsLnVubXV0ZURlZmF1bHRTcGVha2VyKCk7CiAgICAgIH0KICAgIH0KICApOwp9CgovLyBzcmMvc291bmQvc3BlYWtlcl92b2x1bWUvU291bmRTbGlkZXIudHN4CmZ1bmN0aW9uIFNvdW5kU2xpZGVyKHByb3BzKSB7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIHZlcnRpY2FsOiB0cnVlLAogICAgICBjbGFzc05hbWU6ICJzb3VuZF9zbGlkZXIiLAogICAgICBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgInNsaWRlciIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHZlcnRpY2FsOiB0cnVlLAogICAgICAgICAgICBpbnZlcnRlZDogdHJ1ZSwKICAgICAgICAgICAgbWluOiAwLAogICAgICAgICAgICBtYXg6IDEwMCwKICAgICAgICAgICAgdmFsdWU6IHByb3BzLmluaXRpYWxWYWx1ZSwKICAgICAgICAgICAgb25EcmFnZ2VkOiAoc2VsZikgPT4gewogICAgICAgICAgICAgIGNvbnN0IHZvbHVtZVRvU2V0ID0gc2VsZi5nZXRfdmFsdWUoKSAvIDEwMDsKICAgICAgICAgICAgICBwcm9wcy53aXJlUGx1bWJlclZpZXdNb2RlbC5zZXREZWZhdWx0U3BlYWtlclZvbHVtZSh2b2x1bWVUb1NldCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICApLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKFNvdW5kTXV0ZUJ1dHRvbiwgeyB3aXJlUGx1bWJlclZpZXdNb2RlbDogcHJvcHMud2lyZVBsdW1iZXJWaWV3TW9kZWwgfSkKICAgICAgXQogICAgfQogICk7Cn0KCi8vIHNyYy9saWIvaWNvbnMvbmVyZGZvbnRzLnRzCnZhciBuZXJkZm9udHNfZGVmYXVsdCA9IHsKICBzb3VuZDogewogICAgYmx1ZXRvb3RoOiB7CiAgICAgIGlkbGU6ICJcdXtGMDBBRn0iLAogICAgICBjb25uZWN0ZWQ6ICJcdXtGMDBCMX0iLAogICAgICBvZmY6ICJcdXtGMDBCMn0iCiAgICB9CiAgfSwKICBiYXR0ZXJ5OiB7CiAgICBibHVldG9vdGg6IHsKICAgICAgdGVuOiAiXHV7RjA5M0V9IiwKICAgICAgdHdlbnR5OiAiXHV7RjA5M0Z9IiwKICAgICAgdGhpcnR5OiAiXHV7RjA5NDB9IiwKICAgICAgZm9ydHk6ICJcdXtGMDk0MX0iLAogICAgICBmaWZ0eTogIlx1e0YwOTQyfSIsCiAgICAgIHNpeHR5OiAiXHV7RjA5NDN9IiwKICAgICAgc2V2ZW50eTogIlx1e0YwOTQ0fSIsCiAgICAgIGVpZ2h0eTogIlx1e0YwOTQ1fSIsCiAgICAgIG5pbmV0eTogIlx1e0YwOTQ2fSIsCiAgICAgIGZ1bGw6ICJcdXtGMDk0OH0iCiAgICB9CiAgfQp9OwoKLy8gc3JjL3NvdW5kL2JsdWV0b290aC9CbHVldG9vdGhWaWV3TW9kZWwudHMKaW1wb3J0IEJsdWV0b290aCBmcm9tICJnaTovL0FzdGFsQmx1ZXRvb3RoIjsKdmFyIEJsdWV0b290aFZpZXdNb2RlbCA9IGNsYXNzIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHRoaXMuYmx1ZXRvb3RoID0gQmx1ZXRvb3RoLmdldF9kZWZhdWx0KCk7CiAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIodGhpcy5jb25zdHJ1Y3Rvci5uYW1lKTsKICB9CiAgZ2V0RGV2aWNlcygpIHsKICAgIHJldHVybiBiaW5kKHRoaXMuYmx1ZXRvb3RoLCAiZGV2aWNlcyIpOwogIH0KICBnZXRBZGFwdGVycygpIHsKICAgIHJldHVybiBiaW5kKHRoaXMuYmx1ZXRvb3RoLCAiYWRhcHRlcnMiKTsKICB9CiAgZ2V0SXNQb3dlcmVkKCkgewogICAgcmV0dXJuIGJpbmQodGhpcy5ibHVldG9vdGgsICJpc19wb3dlcmVkIik7CiAgfQogIHRvZ2dsZSgpIHsKICAgIHRoaXMuYmx1ZXRvb3RoLnRvZ2dsZSgpOwogICAgdGhpcy5sb2dnZXIuaW5mbygKICAgICAgIlRvZ2dsaW5nIGJsdWV0b290aCBzdGF0ZSB0byAiICsgdGhpcy5nZXRJc1Bvd2VyZWQoKS5nZXQoKQogICAgKTsKICB9Cn07CgovLyBzcmMvc291bmQvYmx1ZXRvb3RoL0JsdWV0b290aFNldHRpbmdzTWVudS50c3gKdmFyIGJsdWV0b290aFZpZXdNb2RlbCA9IG5ldyBCbHVldG9vdGhWaWV3TW9kZWwoKTsKZnVuY3Rpb24gQmx1ZXRvb3RoVG9nZ2xlQnV0dG9uKCkgewogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJidXR0b24iLAogICAgewogICAgICBjbGFzc05hbWU6IGJsdWV0b290aFZpZXdNb2RlbC5nZXRJc1Bvd2VyZWQoKS5hcygoaXNQb3dlcmVkKSA9PiB7CiAgICAgICAgbGV0IGNsYXNzTmFtZSA9ICJpY29uX2J1dHRvbiI7CiAgICAgICAgY2xhc3NOYW1lICs9IGlzUG93ZXJlZCA/ICIgIiA6ICIgb3V0bGluZWQiOwogICAgICAgIHJldHVybiBjbGFzc05hbWU7CiAgICAgIH0pLAogICAgICBvbkNsaWNrOiAoKSA9PiB7CiAgICAgICAgYmx1ZXRvb3RoVmlld01vZGVsLnRvZ2dsZSgpOwogICAgICB9LAogICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgImxhYmVsIiwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogYmx1ZXRvb3RoVmlld01vZGVsLmdldElzUG93ZXJlZCgpLmFzKChpc1Bvd2VyZWQpID0+IHsKICAgICAgICAgICAgcmV0dXJuIGlzUG93ZXJlZCA/IG5lcmRmb250c19kZWZhdWx0LnNvdW5kLmJsdWV0b290aC5pZGxlIDogbmVyZGZvbnRzX2RlZmF1bHQuc291bmQuYmx1ZXRvb3RoLm9mZjsKICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICApCiAgICB9CiAgKTsKfQpmdW5jdGlvbiBCbHVldG9vdGhEZXZpY2VCYXR0ZXJ5TGV2ZWwoKSB7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIGNsYXNzTmFtZTogImJsdWV0b290aF9kZXZpY2VfYmF0dGVyeV9sZXZlbCIsCiAgICAgIGNoaWxkcmVuOiBibHVldG9vdGhWaWV3TW9kZWwuZ2V0RGV2aWNlcygpLmFzKChkZXZpY2VzKSA9PiB7CiAgICAgICAgcmV0dXJuIGRldmljZXMuZmlsdGVyKChkZXZpY2UpID0+IGRldmljZS5nZXRfY29ubmVjdGVkKCkpLm1hcCgoZGV2aWNlKSA9PiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAgICJjaXJjdWxhcnByb2dyZXNzIiwKICAgICAgICAgIHsKICAgICAgICAgICAgcm91bmRlZDogdHJ1ZSwKICAgICAgICAgICAgc3RhcnRBdDogMCwKICAgICAgICAgICAgZW5kQXQ6IDEsCiAgICAgICAgICAgIHZhbHVlOiBiaW5kKGRldmljZSwgImJhdHRlcnlQZXJjZW50YWdlIiksCiAgICAgICAgICAgIGNoaWxkOiAvKiBAX19QVVJFX18gKi8ganN4MigiaWNvbiIsIHsgaWNvbjogYmluZChkZXZpY2UsICJpY29uIikgfSkKICAgICAgICAgIH0KICAgICAgICApKTsKICAgICAgfSkKICAgIH0KICApOwp9CmZ1bmN0aW9uIEJsdWV0b290aFNldHRpbmdzTWVudSgpIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYm94IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAiYmx1ZXRvb3RoX3NldHRpbmdzX21lbnVfY29udGFpbmVyIiwKICAgICAgY2hpbGRyZW46IFsKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAgICJib3giLAogICAgICAgICAgewogICAgICAgICAgICBjbGFzc05hbWU6ICJibHVldG9vdGhfc2V0dGluZ3NfbWVudSIsCiAgICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoQmx1ZXRvb3RoVG9nZ2xlQnV0dG9uLCB7fSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoQmx1ZXRvb3RoRGV2aWNlQmF0dGVyeUxldmVsLCB7fSkKICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgICkKICAgICAgXQogICAgfQogICk7Cn0KCi8vIHNyYy9zb3VuZC9ibHVldG9vdGgvT3V0cHV0RGV2aWNlU2VsZWN0b3IudHN4CnZhciB3aXJlUGx1bWJlclZpZXdNb2RlbCA9IG5ldyBXaXJlUGx1bWJlclZpZXdNb2RlbCgpOwpmdW5jdGlvbiBPdXRwdXREZXZpY2VTZWxlY3RvcigpIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYm94IiwKICAgIHsKICAgICAgb3JpZW50YXRpb246IEd0azQuT3JpZW50YXRpb24uVkVSVElDQUwsCiAgICAgIGNoaWxkcmVuOiB3aXJlUGx1bWJlclZpZXdNb2RlbC5nZXRTcGVha2VycygpLmFzKChzcGVha2VycykgPT4gewogICAgICAgIHNwZWFrZXJzID0gc3BlYWtlcnMgPyBzcGVha2VycyA6IFtdOwogICAgICAgIGNvbnN0IGRlZmF1bHRTcGVha2VyQmluZGluZyA9IHdpcmVQbHVtYmVyVmlld01vZGVsLmdldERlZmF1bHRTcGVha2VyKCk7CiAgICAgICAgcmV0dXJuIHNwZWFrZXJzLm1hcCgoc3BlYWtlcikgPT4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgIHsKICAgICAgICAgICAgY2xhc3NOYW1lOiBkZWZhdWx0U3BlYWtlckJpbmRpbmcuYXMoKGRlZmF1bHRTcGVha2VyKSA9PiB7CiAgICAgICAgICAgICAgbGV0IGNsYXNzTmFtZSA9ICJpY29uX2J1dHRvbiBsYXJnZSBvdXRwdXRfZGV2aWNlX2J1dHRvbiI7CiAgICAgICAgICAgICAgaWYgKGRlZmF1bHRTcGVha2VyICYmIGRlZmF1bHRTcGVha2VyLmdldF9pZCgpID09PSBzcGVha2VyLmdldF9pZCgpKSB7CiAgICAgICAgICAgICAgICBjbGFzc05hbWUgKz0gIiBzZWxlY3RlZCI7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBjbGFzc05hbWU7CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiB7CiAgICAgICAgICAgICAgd2lyZVBsdW1iZXJWaWV3TW9kZWwuc2V0RGVmYXVsdFNwZWFrZXIoc3BlYWtlcik7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNoaWxkOiAvKiBAX19QVVJFX18gKi8ganN4MigibGFiZWwiLCB7IGxhYmVsOiBzcGVha2VyLmdldF9kZXNjcmlwdGlvbigpLnNsaWNlKDAsIDIwKSB9KQogICAgICAgICAgfQogICAgICAgICkpOwogICAgICB9KQogICAgfQogICk7Cn0KCi8vIHNyYy9zb3VuZC9Tb3VuZFNldHRpbmdzTm90Y2gudHN4CmZ1bmN0aW9uIFNvdW5kU2V0dGluZ3NOb3RjaCgpIHsKICBjb25zdCB3aXJlUGx1bWJlclZpZXdNb2RlbDIgPSBuZXcgV2lyZVBsdW1iZXJWaWV3TW9kZWwoKTsKICBjb25zdCBsb2dnZXIzID0gbmV3IExvZ2dlcigiU291bmRTZXR0aW5nc05vdGNoIik7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIGNsYXNzTmFtZTogInNvdW5kX3NldHRpbmdzX25vdGNoIiwKICAgICAgY2hpbGQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICJib3giLAogICAgICAgIHsKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgICAgIFNvdW5kU2xpZGVyLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHdpcmVQbHVtYmVyVmlld01vZGVsOiB3aXJlUGx1bWJlclZpZXdNb2RlbDIsCiAgICAgICAgICAgICAgICBpbml0aWFsVmFsdWU6IHdpcmVQbHVtYmVyVmlld01vZGVsMi5nZXREZWZhdWx0U3BlYWtlclZvbHVtZSgpLmdldCgpICogMTAwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICApLAogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MihPdXRwdXREZXZpY2VTZWxlY3Rvciwge30pLAogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MihCbHVldG9vdGhTZXR0aW5nc01lbnUsIHt9KQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgKQogICAgfQogICk7Cn0KCi8vIHNyYy92aWV3L0h5cHJub3RjaC50c3gKZnVuY3Rpb24gSHlwcm5vdGNoKHByb3BzKSB7CiAgY29uc3Qgbm90Y2hTdGF0ZVZpZXdNb2RlbCA9IG5ldyBOb3RjaFN0YXRlVmlld01vZGVsKCk7CiAgY29uc3QgeyBnZGttb25pdG9yIH0gPSBwcm9wczsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAid2luZG93IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAiaHlwcm5vdGNoIiwKICAgICAgbmFtZXNwYWNlOiAiaHlwcm5vdGNoIiwKICAgICAgZ2RrbW9uaXRvciwKICAgICAgYW5jaG9yOiBBc3RhbDcuV2luZG93QW5jaG9yLlRPUCwKICAgICAgZXhjbHVzaXZpdHk6IEFzdGFsNy5FeGNsdXNpdml0eS5JR05PUkUsCiAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgY2hpbGQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICJjZW50ZXJib3giLAogICAgICAgIHsKICAgICAgICAgIGNlbnRlcldpZGdldDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb25CdXR0b25QcmVzc0V2ZW50OiAoKSA9PiB7CiAgICAgICAgICAgICAgICBub3RjaFN0YXRlVmlld01vZGVsLmdldE5vdGNoU3RhdGUoKS5nZXQoKSA9PT0gIm5vcm1hbCIgLyogTk9STUFMICovID8gbm90Y2hTdGF0ZVZpZXdNb2RlbC5zZXROb3RjaFN0YXRlKCJleHBhbmRlZCIgLyogRVhQQU5ERUQgKi8pIDogbm90Y2hTdGF0ZVZpZXdNb2RlbC5zZXROb3RjaFN0YXRlKCJub3JtYWwiIC8qIE5PUk1BTCAqLyk7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBjbGFzc05hbWU6IG5vdGNoU3RhdGVWaWV3TW9kZWwuZ2V0Tm90Y2hTdGF0ZSgpLmFzKChub3RjaFN0YXRlKSA9PiAiaHlwcm5vdGNoLWJ1dHRvbi1hcmVhICIgKyBub3RjaFN0YXRlKSwKICAgICAgICAgICAgICBjaGlsZDogbm90Y2hTdGF0ZVZpZXdNb2RlbC5nZXROb3RjaFN0YXRlKCkuYXMoKG5vdGNoU3RhdGUpID0+IHsKICAgICAgICAgICAgICAgIHN3aXRjaCAobm90Y2hTdGF0ZSkgewogICAgICAgICAgICAgICAgICBjYXNlICJzb3VuZF9zZXR0aW5ncyIgLyogU09VTkRfU0VUVElOR1MgKi86CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKFNvdW5kU2V0dGluZ3NOb3RjaCwge30pOwogICAgICAgICAgICAgICAgICBjYXNlICJleHBhbmRlZCIgLyogRVhQQU5ERUQgKi86CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgICAgICAgICAgICAgRXhwYW5kZWROb3RjaCwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbm90Y2hTdGF0ZVZpZXdNb2RlbAogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgIGNhc2UgIm5vcm1hbCIgLyogTk9STUFMICovOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MihOb3JtYWxOb3RjaCwge30pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICAgICkKICAgICAgICB9CiAgICAgICkKICAgIH0KICApOwp9CgovLyBzcmMvaHlwcmxhbmQvd29ya3NwYWNlcy9IeXBybGFuZFdvcmtzcGFjZXNWaWV3TW9kZWwudHMKaW1wb3J0IEh5cHJsYW5kMiBmcm9tICJnaTovL0FzdGFsSHlwcmxhbmQiOwoKLy8gc3JjL2h5cHJsYW5kL3dvcmtzcGFjZXMvSHlwcmxhbmRXb3Jrc3BhY2VWaWV3TW9kZWwudHMKaW1wb3J0IEh5cHJsYW5kIGZyb20gImdpOi8vQXN0YWxIeXBybGFuZCI7CnZhciBIeXBybGFuZFdvcmtzcGFjZVZpZXdNb2RlbCA9IGNsYXNzIHsKICBjb25zdHJ1Y3Rvcih3b3Jrc3BhY2VJZCkgewogICAgdGhpcy5oeXBybGFuZCA9IEh5cHJsYW5kLmdldF9kZWZhdWx0KCk7CiAgICB0aGlzLndvcmtzcGFjZVZhcmlhYmxlID0gbmV3IFZhcmlhYmxlKG51bGwpOwogICAgdGhpcy53b3Jrc3BhY2VJZCA9IDA7CiAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIoYEh5cHJsYW5kV29ya3NwYWNlVmlld01vZGVsLSR7d29ya3NwYWNlSWR9YCk7CiAgICB0aGlzLmxvZ2dlci5kZWJ1ZyhgQ3JlYXRpbmcgdmlldyBtb2RlbCBmb3Igd29ya3NwYWNlICR7d29ya3NwYWNlSWR9YCk7CiAgICB0aGlzLndvcmtzcGFjZUlkID0gd29ya3NwYWNlSWQ7CiAgICBjb25zdCB3b3Jrc3BhY2UgPSB0aGlzLmh5cHJsYW5kLmdldF93b3Jrc3BhY2Uod29ya3NwYWNlSWQpOwogICAgaWYgKCF3b3Jrc3BhY2UpIHsKICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoYFdvcmtzcGFjZSB3aXRoIElEICR7d29ya3NwYWNlSWR9IG5vdCBmb3VuZGApOwogICAgICB0aHJvdyBuZXcgRXJyb3IoYFdvcmtzcGFjZSB3aXRoIElEICR7d29ya3NwYWNlSWR9IG5vdCBmb3VuZGApOwogICAgfQogICAgdGhpcy51cGRhdGVXb3Jrc3BhY2VWYXJpYWJsZSgpOwogICAgdGhpcy5zZXR1cFVwZGF0ZUxpc3RlbmVyRm9yU2lnbmFsKCJjbGllbnRfYWRkZWQiKTsKICAgIHRoaXMuc2V0dXBVcGRhdGVMaXN0ZW5lckZvclNpZ25hbCgiY2xpZW50X3JlbW92ZWQiKTsKICAgIHRoaXMuc2V0dXBVcGRhdGVMaXN0ZW5lckZvclNpZ25hbCgiY2xpZW50X21vdmVkIik7CiAgfQogIGdldENsaWVudHMoKSB7CiAgICByZXR1cm4gYmluZCh0aGlzLndvcmtzcGFjZVZhcmlhYmxlLmdldCgpLCAiY2xpZW50cyIpLmFzKChjbGllbnRzKSA9PiB7CiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKAogICAgICAgIGBDbGllbnRzIGZvciB3b3Jrc3BhY2UgJHt0aGlzLndvcmtzcGFjZUlkfTogJHtjbGllbnRzLm1hcCgoY2xpZW50KSA9PiBjbGllbnQuZ2V0X2NsYXNzKCkpLnRvU3RyaW5nKCl9YAogICAgICApOwogICAgICByZXR1cm4gY2xpZW50czsKICAgIH0pOwogIH0KICB1cGRhdGVXb3Jrc3BhY2VWYXJpYWJsZSgpIHsKICAgIHRoaXMud29ya3NwYWNlVmFyaWFibGUuc2V0KHRoaXMuaHlwcmxhbmQuZ2V0X3dvcmtzcGFjZSh0aGlzLndvcmtzcGFjZUlkKSk7CiAgICB0aGlzLmxvZ2dlci5kZWJ1ZygKICAgICAgYFVwZGF0ZWQgd29ya3NwYWNlIHZhcmlhYmxlIGZvciB3b3Jrc3BhY2UgJHt0aGlzLndvcmtzcGFjZUlkfWAKICAgICk7CiAgfQogIHNldHVwVXBkYXRlTGlzdGVuZXJGb3JTaWduYWwoc2lnbmFsTmFtZSkgewogICAgdGhpcy5oeXBybGFuZC5jb25uZWN0KHNpZ25hbE5hbWUsICgpID0+IHsKICAgICAgdGhpcy51cGRhdGVXb3Jrc3BhY2VWYXJpYWJsZSgpOwogICAgICB0aGlzLmxvZ2dlci5kZWJ1ZygKICAgICAgICBgV29ya3NwYWNlIHZhcmlhYmxlIHVwZGF0ZWQgZm9yIHdvcmtzcGFjZSAke3RoaXMud29ya3NwYWNlSWR9IG9uIHNpZ25hbCAke3NpZ25hbE5hbWV9YAogICAgICApOwogICAgfSk7CiAgfQp9OwoKLy8gc3JjL2h5cHJsYW5kL3dvcmtzcGFjZXMvSHlwcmxhbmRXb3Jrc3BhY2VzVmlld01vZGVsLnRzCnZhciBIeXBybGFuZFdvcmtzcGFjZXNWaWV3TW9kZWwgPSBjbGFzcyB7CiAgY29uc3RydWN0b3IoKSB7CiAgICB0aGlzLmh5cHJsYW5kID0gSHlwcmxhbmQyLmdldF9kZWZhdWx0KCk7CiAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIoIldvcmtzcGFjZVZpZXdNb2RlbCIpOwogICAgdGhpcy5sb2dnZXIgPSBuZXcgTG9nZ2VyKCJXb3Jrc3BhY2VWaWV3TW9kZWwiKTsKICAgIHRoaXMubG9nZ2VyLmRlYnVnKCJXb3Jrc3BhY2VWaWV3TW9kZWwgY3JlYXRlZCIpOwogIH0KICBnZXRXb3Jrc3BhY2VzKCkgewogICAgcmV0dXJuIGJpbmQodGhpcy5oeXBybGFuZCwgIndvcmtzcGFjZXMiKS5hcygoKSA9PiB7CiAgICAgIGNvbnN0IHdvcmtzcGFjZXMgPSB0aGlzLmh5cHJsYW5kLmdldF93b3Jrc3BhY2VzKCkuc29ydCgoYSwgYikgPT4gewogICAgICAgIHJldHVybiBhLmdldF9pZCgpIC0gYi5nZXRfaWQoKTsKICAgICAgfSk7CiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKAogICAgICAgICJIeXBybGFuZCB3b3Jrc3BhY2VzIHVwZGF0ZWQgdG86ICIsCiAgICAgICAgd29ya3NwYWNlcy5tYXAoKHdvcmtzcGFjZSkgPT4gewogICAgICAgICAgcmV0dXJuIHdvcmtzcGFjZS5nZXRfbmFtZSgpOwogICAgICAgIH0pLnRvU3RyaW5nKCkKICAgICAgKTsKICAgICAgaWYgKHdvcmtzcGFjZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy5sb2dnZXIud2FybigiTm8gd29ya3NwYWNlcyBmb3VuZCBpbiBIeXBybGFuZCIpOwogICAgICB9CiAgICAgIHJldHVybiB3b3Jrc3BhY2VzOwogICAgfSk7CiAgfQogIGdldEZvY3VzZWRXb3Jrc3BhY2UoKSB7CiAgICByZXR1cm4gYmluZCh0aGlzLmh5cHJsYW5kLCAiZm9jdXNlZF93b3Jrc3BhY2UiKTsKICB9CiAgc3dpdGNoVG9Xb3Jrc3BhY2Uod29ya3NwYWNlSWQpIHsKICAgIGlmICghd29ya3NwYWNlSWQpIHsKICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoIkludmFsaWQgd29ya3NwYWNlIElEIHByb3ZpZGVkIGZvciBzd2l0Y2hpbmciKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKHRoaXMuaHlwcmxhbmQuZ2V0X2ZvY3VzZWRfd29ya3NwYWNlKCkuZ2V0X2lkKCkgPT09IHdvcmtzcGFjZUlkKSB7CiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKAogICAgICAgIGBXb3Jrc3BhY2UgJHt3b3Jrc3BhY2VJZH0gaXMgYWxyZWFkeSBmb2N1c2VkLCBubyBhY3Rpb24gdGFrZW5gCiAgICAgICk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRoaXMubG9nZ2VyLmluZm8oYFN3aXRjaGluZyB0byB3b3Jrc3BhY2UgJHt3b3Jrc3BhY2VJZH1gKTsKICAgIHRoaXMuaHlwcmxhbmQuZ2V0X3dvcmtzcGFjZSh3b3Jrc3BhY2VJZCkuZm9jdXMoKTsKICB9CiAgZ2V0UGVyTW9uaXRvcldvcmtzcGFjZXMoZ2RrTW9uaXRvcikgewogICAgcmV0dXJuIHRoaXMuZ2V0V29ya3NwYWNlcygpLmFzKCh3b3Jrc3BhY2VzKSA9PiB7CiAgICAgIGNvbnN0IGh5cHJsYW5kTW9uaXRvcnMgPSB0aGlzLmh5cHJsYW5kLmdldF9tb25pdG9ycygpOwogICAgICBjb25zdCB0YXJnZXRIeXBybGFuZE1vbml0b3IgPSBoeXBybGFuZE1vbml0b3JzLmZpbmQoKG1vbml0b3IpID0+IHsKICAgICAgICBjb25zdCBnZGtEaXNwbGF5TmFtZSA9IGdka01vbml0b3IuZ2V0X2Rpc3BsYXkoKT8uZ2V0X25hbWUoKSB8fCAiIjsKICAgICAgICBjb25zdCBoeXBybGFuZERpc3BsYXlOYW1lID0gbW9uaXRvci5nZXRfbmFtZSgpIHx8ICIiOwogICAgICAgIGlmIChnZGtEaXNwbGF5TmFtZSAmJiBoeXBybGFuZERpc3BsYXlOYW1lICYmIGdka0Rpc3BsYXlOYW1lID09PSBoeXBybGFuZERpc3BsYXlOYW1lKSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG1vbml0b3IuZ2V0X21ha2UoKSA9PT0gZ2RrTW9uaXRvci5nZXRfbWFudWZhY3R1cmVyKCkgJiYgbW9uaXRvci5nZXRfbW9kZWwoKSA9PT0gZ2RrTW9uaXRvci5nZXRfbW9kZWwoKSAmJiBtb25pdG9yLmdldF94KCkgPT09IGdka01vbml0b3IuZ2V0X2dlb21ldHJ5KCkueCAmJiBtb25pdG9yLmdldF95KCkgPT09IGdka01vbml0b3IuZ2V0X2dlb21ldHJ5KCkueTsKICAgICAgfSk7CiAgICAgIGlmICghdGFyZ2V0SHlwcmxhbmRNb25pdG9yKSB7CiAgICAgICAgdGhpcy5sb2dnZXIud2FybigKICAgICAgICAgICJDb3VsZCBub3QgZmluZCBtYXRjaGluZyBIeXBybGFuZCBtb25pdG9yIGZvciBHREsgbW9uaXRvciIKICAgICAgICApOwogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgICByZXR1cm4gd29ya3NwYWNlcy5maWx0ZXIoCiAgICAgICAgKHdvcmtzcGFjZSkgPT4gd29ya3NwYWNlLmdldF9tb25pdG9yKCkuZ2V0X2lkKCkgPT09IHRhcmdldEh5cHJsYW5kTW9uaXRvci5nZXRfaWQoKQogICAgICApOwogICAgfSk7CiAgfQogIGdldFdvcmtzcGFjZVZpZXdNb2RlbEJ5SWQod29ya3NwYWNlSWQpIHsKICAgIHJldHVybiBuZXcgSHlwcmxhbmRXb3Jrc3BhY2VWaWV3TW9kZWwod29ya3NwYWNlSWQpOwogIH0KfTsKCi8vIHNyYy9oeXBybGFuZC93b3Jrc3BhY2VzL1dvcmtzcGFjZXNCYXIudHN4CnZhciB3b3Jrc3BhY2VzVmlld01vZGVsID0gbmV3IEh5cHJsYW5kV29ya3NwYWNlc1ZpZXdNb2RlbCgpOwp2YXIgbG9nZ2VyID0gbmV3IExvZ2dlcigiV29ya3NwYWNlc0JhciIpOwp2YXIgY2xpZW50SWNvblNpemUgPSAyNDsKdmFyIGdldEJ1dHRvbldpZHRoID0gKHdvcmtzcGFjZSkgPT4gewogIHJldHVybiB3b3Jrc3BhY2VzVmlld01vZGVsLmdldFdvcmtzcGFjZVZpZXdNb2RlbEJ5SWQod29ya3NwYWNlLmdldF9pZCgpKS5nZXRDbGllbnRzKCkuYXMoKGNsaWVudHMpID0+IHsKICAgIGNvbnN0IGNsaWVudENvdW50ID0gY2xpZW50cy5sZW5ndGg7CiAgICBjb25zdCBiYXNlV2lkdGggPSBjbGllbnRDb3VudCA9PT0gMCA/IGNsaWVudEljb25TaXplIDogY2xpZW50Q291bnQgKiBjbGllbnRJY29uU2l6ZSArIDg7CiAgICByZXR1cm4gYmFzZVdpZHRoOwogIH0pOwp9Owp2YXIgZ2V0V29ya3NwYWNlc0JhcldpZHRoID0gKGdka21vbml0b3IpID0+IHsKICByZXR1cm4gd29ya3NwYWNlc1ZpZXdNb2RlbC5nZXRQZXJNb25pdG9yV29ya3NwYWNlcyhnZGttb25pdG9yKS5hcygod29ya3NwYWNlcykgPT4gewogICAgY29uc3QgZm9jdXNlZFdvcmtzcGFjZSA9IHdvcmtzcGFjZXNWaWV3TW9kZWwuZ2V0Rm9jdXNlZFdvcmtzcGFjZSgpOwogICAgY29uc3Qgd2lkdGggPSB3b3Jrc3BhY2VzLnJlZHVjZSgoYWNjLCB3b3Jrc3BhY2UpID0+IHsKICAgICAgcmV0dXJuIGFjYyArIChnZXRCdXR0b25XaWR0aCh3b3Jrc3BhY2UpLmdldCgpICsgOSkgKyAod29ya3NwYWNlLmdldF9pZCgpID09PSBmb2N1c2VkV29ya3NwYWNlLmdldCgpLmdldF9pZCgpID8gMjAgOiAwKTsKICAgIH0sIDApOwogICAgbG9nZ2VyLmRlYnVnKAogICAgICBgQ2FsY3VsYXRlZCB3b3Jrc3BhY2VzIGJhciB3aWR0aCBmb3IgbW9uaXRvciAke2dka21vbml0b3IuZ2V0X21hbnVmYWN0dXJlcigpfTogJHt3aWR0aH1weGAKICAgICk7CiAgICByZXR1cm4gd2lkdGg7CiAgfSk7Cn07CnZhciBnZXRDbGllbnRJY29uTmFtZSA9IChjbGllbnQpID0+IHsKICBjb25zdCBjbGFzc05hbWUgPSBjbGllbnQuZ2V0X2NsYXNzKCkudG9Mb3dlckNhc2UoKTsKICBjb25zdCBqZXRicmFpbnNQcmVmaXggPSAiamV0YnJhaW5zLSI7CiAgaWYgKGNsYXNzTmFtZS5zdGFydHNXaXRoKGpldGJyYWluc1ByZWZpeCkpIHsKICAgIHJldHVybiBjbGFzc05hbWUucmVwbGFjZShqZXRicmFpbnNQcmVmaXgsICIiKTsKICB9CiAgcmV0dXJuIGNsYXNzTmFtZTsKfTsKdmFyIFdvcmtzcGFjZUJ1dHRvbkNvbnRlbnQgPSAod29ya3NwYWNlKSA9PiB7CiAgcmV0dXJuIHdvcmtzcGFjZXNWaWV3TW9kZWwuZ2V0V29ya3NwYWNlVmlld01vZGVsQnlJZCh3b3Jrc3BhY2UuZ2V0X2lkKCkpLmdldENsaWVudHMoKS5hcygoY2xpZW50cykgPT4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYm94IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAid29ya3NwYWNlX2J1dHRvbl9jb250ZW50IiwKICAgICAgY2hpbGQ6IGNsaWVudHMubGVuZ3RoID09PSAwID8gLyogQF9fUFVSRV9fICovIGpzeDIoImJveCIsIHt9KSA6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICJib3giLAogICAgICAgIHsKICAgICAgICAgIGhhbGlnbjogR3RrNC5BbGlnbi5DRU5URVIsCiAgICAgICAgICB2YWxpZ246IEd0azQuQWxpZ24uQ0VOVEVSLAogICAgICAgICAgY2xhc3NOYW1lOiAid29ya3NwYWNlX2J1dHRvbl9pY29uc19jb250YWluZXIiLAogICAgICAgICAgY2hpbGRyZW46IGNsaWVudHMubWFwKChjbGllbnQpID0+IC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgICAiaWNvbiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBpY29uOiBnZXRDbGllbnRJY29uTmFtZShjbGllbnQpLAogICAgICAgICAgICAgIGNsYXNzTmFtZTogIndvcmtzcGFjZV9idXR0b25faWNvbiIKICAgICAgICAgICAgfQogICAgICAgICAgKSkKICAgICAgICB9CiAgICAgICkKICAgIH0KICApKTsKfTsKdmFyIFdvcmtzcGFjZUJ1dHRvbiA9ICh3b3Jrc3BhY2UpID0+IHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYnV0dG9uIiwKICAgIHsKICAgICAgd2lkdGhSZXF1ZXN0OiBnZXRCdXR0b25XaWR0aCh3b3Jrc3BhY2UpLAogICAgICBjbGFzc05hbWU6IHdvcmtzcGFjZXNWaWV3TW9kZWwuZ2V0Rm9jdXNlZFdvcmtzcGFjZSgpLmFzKAogICAgICAgIChmb2N1c2VkV29ya3NwYWNlKSA9PiAid29ya3NwYWNlX2J1dHRvbiIgKyAoZm9jdXNlZFdvcmtzcGFjZS5nZXRfaWQoKSA9PT0gd29ya3NwYWNlLmdldF9pZCgpID8gIiBmb2N1c2VkIiA6ICIiKQogICAgICApLAogICAgICBjaGlsZDogV29ya3NwYWNlQnV0dG9uQ29udGVudCh3b3Jrc3BhY2UpLAogICAgICBvbkNsaWNrOiAoKSA9PiB7CiAgICAgICAgbG9nZ2VyLmRlYnVnKAogICAgICAgICAgYFByZXNzaW5nIGJ1dHRvbiBmb3Igd29ya3NwYWNlICR7d29ya3NwYWNlLmdldF9pZCgpfSwgc3dpdGNoaW5nIHRvIGl0YAogICAgICAgICk7CiAgICAgICAgd29ya3NwYWNlc1ZpZXdNb2RlbC5zd2l0Y2hUb1dvcmtzcGFjZSh3b3Jrc3BhY2UuZ2V0X2lkKCkpOwogICAgICB9CiAgICB9CiAgKTsKfTsKZnVuY3Rpb24gV29ya3NwYWNlc0Jhcihwcm9wcykgewogIGNvbnN0IGdka21vbml0b3IgPSBwcm9wcy5nZGttb25pdG9yOwogIGxvZ2dlci5kZWJ1ZygKICAgIGBXb3Jrc3BhY2VzQmFyIGNyZWF0ZWQgb24gbW9uaXRvciAke2dka21vbml0b3IuZ2V0X21hbnVmYWN0dXJlcigpfWAKICApOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJib3giLAogICAgewogICAgICBoYWxpZ246IEd0azQuQWxpZ24uU1RBUlQsCiAgICAgIHZhbGlnbjogR3RrNC5BbGlnbi5TVEFSVCwKICAgICAgY2xhc3NOYW1lOiAid29ya3NwYWNlc19iYXJfY29udGFpbmVyIiwKICAgICAgY3NzOiBnZXRXb3Jrc3BhY2VzQmFyV2lkdGgoZ2RrbW9uaXRvcikuYXMoCiAgICAgICAgKHdpZHRoKSA9PiBgbWluLXdpZHRoOiAke3dpZHRofXB4O2AKICAgICAgKSwKICAgICAgY2hpbGQ6IHdvcmtzcGFjZXNWaWV3TW9kZWwuZ2V0UGVyTW9uaXRvcldvcmtzcGFjZXMoZ2RrbW9uaXRvcikuYXMoKHdvcmtzcGFjZXMpID0+IC8qIEBfX1BVUkVfXyAqLyBqc3gyKCJib3giLCB7IGNoaWxkcmVuOiB3b3Jrc3BhY2VzLm1hcChXb3Jrc3BhY2VCdXR0b24pIH0pKQogICAgfQogICk7Cn0KCi8vIHNyYy90cmF5L1N5c3RlbVRyYXlWaWV3TW9kZWwudHMKaW1wb3J0IFRyYXkgZnJvbSAiZ2k6Ly9Bc3RhbFRyYXkiOwp2YXIgU3lzdGVtVHJheVZpZXdNb2RlbCA9IGNsYXNzIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHRoaXMudHJheSA9IFRyYXkuZ2V0X2RlZmF1bHQoKTsKICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcih0aGlzLmNvbnN0cnVjdG9yLm5hbWUpOwogICAgdGhpcy5mb2N1c2VkVHJheUl0ZW0gPSBuZXcgVmFyaWFibGUobnVsbCk7CiAgfQogIGdldFRyYXlJdGVtcygpIHsKICAgIHJldHVybiBiaW5kKHRoaXMudHJheSwgIml0ZW1zIik7CiAgfQogIGdldEZvY3VzZWRUcmF5SXRlbSgpIHsKICAgIHJldHVybiBiaW5kKHRoaXMuZm9jdXNlZFRyYXlJdGVtKTsKICB9CiAgc2V0Rm9jdXNlZFRyYXlJdGVtKGl0ZW0pIHsKICAgIGlmICghaXRlbSkgewogICAgICB0aGlzLmxvZ2dlci5kZWJ1ZygiQ2xlYXJpbmcgZm9jdXNlZCB0cmF5IGl0ZW0iKTsKICAgICAgdGhpcy5mb2N1c2VkVHJheUl0ZW0uc2V0KG51bGwpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5sb2dnZXIuZGVidWcoIkZvY3VzaW5nIHRyYXkgaXRlbSIsIGl0ZW0uZ2V0X3RpdGxlKCkpOwogICAgICB0aGlzLmZvY3VzZWRUcmF5SXRlbS5zZXQoaXRlbSk7CiAgICB9CiAgfQogIHJlZnJlc2hUcmF5SXRlbShpdGVtKSB7CiAgICB0aGlzLmxvZ2dlci5kZWJ1ZygKICAgICAgIlJlZnJlc2hpbmcgdHJheSBpdGVtIiwKICAgICAgaXRlbS5nZXRfdGl0bGUoKSwKICAgICAgaXRlbS5nZXRfdG9vbHRpcCgpPy5kZXNjcmlwdGlvbiwKICAgICAgaXRlbS5nZXRfaWNvbl9uYW1lKCkKICAgICk7CiAgICBpdGVtLmFib3V0X3RvX3Nob3coKTsKICB9Cn07CgovLyBzcmMvbGliL2V2ZW50cy9tb3VzZS50cwp2YXIgaXNQcmltYXJ5Q2xpY2sgPSAoZXZlbnQpID0+IGV2ZW50LmJ1dHRvbiA9PT0gR2RrLkJVVFRPTl9QUklNQVJZOwp2YXIgaXNTZWNvbmRhcnlDbGljayA9IChldmVudCkgPT4gZXZlbnQuYnV0dG9uID09PSBHZGsuQlVUVE9OX1NFQ09OREFSWTsKCi8vIHNyYy90cmF5L1RyYXlJdGVtTm90Y2gudHN4CnZhciBNZW51RW50cnkgPSAoeyBpdGVtIH0pID0+IHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYnV0dG9uIiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAic3lzdGVtX3RyYXlfYmFyX25vdGNoX2VudHJ5IiwKICAgICAgY3Vyc29yOiAicG9pbnRlciIsCiAgICAgIG9uQ2xpY2s6IChzZWxmLCBldmVudCkgPT4gewogICAgICAgIGlmIChpc1ByaW1hcnlDbGljayhldmVudCkpIHsKICAgICAgICAgIGl0ZW0uYWN0aXZhdGUoMCwgMCk7CiAgICAgICAgfQogICAgICAgIGlmIChpc1NlY29uZGFyeUNsaWNrKGV2ZW50KSkgewogICAgICAgICAgY29uc3QgbWVudU1vZGVsID0gaXRlbS5nZXRfbWVudV9tb2RlbCgpOwogICAgICAgICAgY29uc3QgYWN0aW9uR3JvdXAgPSBpdGVtLmdldF9hY3Rpb25fZ3JvdXAoKTsKICAgICAgICAgIGlmIChtZW51TW9kZWwgJiYgYWN0aW9uR3JvdXApIHsKICAgICAgICAgICAgY29uc3QgbWVudSA9IEd0azQuTWVudS5uZXdfZnJvbV9tb2RlbChtZW51TW9kZWwpOwogICAgICAgICAgICBtZW51Lmluc2VydF9hY3Rpb25fZ3JvdXAoImRidXNtZW51IiwgYWN0aW9uR3JvdXApOwogICAgICAgICAgICBtZW51LnBvcHVwX2F0X3dpZGdldCgKICAgICAgICAgICAgICBzZWxmLAogICAgICAgICAgICAgIEdkay5HcmF2aXR5Lk5PUlRIX1dFU1QsCiAgICAgICAgICAgICAgR2RrLkdyYXZpdHkuU09VVEhfV0VTVCwKICAgICAgICAgICAgICBudWxsCiAgICAgICAgICAgICk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgImJveCIsCiAgICAgICAgewogICAgICAgICAgY2xhc3NOYW1lOiAic3lzdGVtX3RyYXlfYmFyX25vdGNoX2NvbnRlbnQiLAogICAgICAgICAgdmVydGljYWw6IHRydWUsCiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAgICAgICAibGFiZWwiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGxhYmVsOiBiaW5kKGl0ZW0sICJ0aXRsZSIpLmFzKAogICAgICAgICAgICAgICAgICAodGl0bGUpID0+IHRpdGxlIHx8IGl0ZW0uZ2V0X3Rvb2x0aXAoKT8udGl0bGUgfHwgIiIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICksCiAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbGFiZWw6IGJpbmQoaXRlbSwgInRvb2x0aXAiKS5hcygKICAgICAgICAgICAgICAgICAgKHRvb2x0aXApID0+IHRvb2x0aXA/LmRlc2NyaXB0aW9uIHx8ICIiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICApCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICApCiAgICB9CiAgKTsKfTsKZnVuY3Rpb24gVHJheUl0ZW1Ob3RjaChwcm9wcykgewogIGNvbnN0IHsgc3lzdGVtVHJheVZpZXdNb2RlbDogc3lzdGVtVHJheVZpZXdNb2RlbDIgfSA9IHByb3BzOwogIGNvbnN0IGZvY3VzZWRJdGVtID0gc3lzdGVtVHJheVZpZXdNb2RlbDIuZ2V0Rm9jdXNlZFRyYXlJdGVtKCk7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIGNsYXNzTmFtZTogInN5c3RlbV90cmF5X2Jhcl9ub3RjaCBmb2N1c2VkIiwKICAgICAgdmVydGljYWw6IHRydWUsCiAgICAgIGNoaWxkOiBmb2N1c2VkSXRlbS5hcygoaXRlbSkgPT4gewogICAgICAgIGlmICghaXRlbSB8fCAhaXRlbS5nZXRfbWVudV9tb2RlbCgpKSB7CiAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoImJveCIsIHt9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKE1lbnVFbnRyeSwgeyBpdGVtIH0pOwogICAgICB9KQogICAgfQogICk7Cn0KCi8vIHNyYy90cmF5L1N5c3RlbVRyYXlJdGVtQnV0dG9uLnRzeAp2YXIgU1lTVEVNX1RSQVlfSVRFTV9USU1FT1VUID0gMWU0OwpmdW5jdGlvbiBnZXRUcmF5SXRlbUNsYXNzKHZpZXdNb2RlbCwgaXRlbSkgewogIGNvbnN0IGV4aXN0aW5nVHJheUl0ZW1zID0gdmlld01vZGVsLmdldFRyYXlJdGVtcygpLmdldCgpLmZpbHRlcigoaXRlbTIpID0+IGl0ZW0yLmdldF90aXRsZSgpKTsKICByZXR1cm4gdmlld01vZGVsLmdldEZvY3VzZWRUcmF5SXRlbSgpLmFzKChmb2N1c2VkKSA9PiB7CiAgICBsZXQgY2xhc3NlcyA9ICJzeXN0ZW1fdHJheV9pdGVtIjsKICAgIGlmIChmb2N1c2VkICYmIGZvY3VzZWQuZ2V0X3RpdGxlKCkgPT09IGl0ZW0uZ2V0X3RpdGxlKCkpIHsKICAgICAgY2xhc3NlcyArPSAiIGFjdGl2ZSI7CiAgICB9IGVsc2UgewogICAgICBjbGFzc2VzICs9ICIgbm90Y2giOwogICAgfQogICAgaWYgKGV4aXN0aW5nVHJheUl0ZW1zLmluZGV4T2YoaXRlbSkgPT09IDApIHsKICAgICAgY2xhc3NlcyArPSAiIGZpcnN0IjsKICAgIH0KICAgIGlmIChleGlzdGluZ1RyYXlJdGVtcy5pbmRleE9mKGl0ZW0pID09PSBleGlzdGluZ1RyYXlJdGVtcy5sZW5ndGggLSAxKSB7CiAgICAgIGNsYXNzZXMgKz0gIiBsYXN0IjsKICAgIH0KICAgIHJldHVybiBjbGFzc2VzOwogIH0pOwp9CnZhciBvblN5c3RlbVRyYXlJdGVtQ2xpY2tlZCA9IChzeXN0ZW1UcmF5Vmlld01vZGVsMiwgaXRlbSkgPT4gewogIGNvbnN0IGN1cnJlbnRseUZvY3VzZWQgPSBzeXN0ZW1UcmF5Vmlld01vZGVsMi5nZXRGb2N1c2VkVHJheUl0ZW0oKS5nZXQoKTsKICBpZiAoY3VycmVudGx5Rm9jdXNlZCAmJiBjdXJyZW50bHlGb2N1c2VkLmdldF90aXRsZSgpID09PSBpdGVtLmdldF90aXRsZSgpKSB7CiAgICBzeXN0ZW1UcmF5Vmlld01vZGVsMi5zZXRGb2N1c2VkVHJheUl0ZW0obnVsbCk7CiAgfSBlbHNlIHsKICAgIHN5c3RlbVRyYXlWaWV3TW9kZWwyLnNldEZvY3VzZWRUcmF5SXRlbShpdGVtKTsKICAgIHRpbWVvdXQoCiAgICAgIFNZU1RFTV9UUkFZX0lURU1fVElNRU9VVCwKICAgICAgKCkgPT4gc3lzdGVtVHJheVZpZXdNb2RlbDIuc2V0Rm9jdXNlZFRyYXlJdGVtKG51bGwpCiAgICApOwogIH0KfTsKZnVuY3Rpb24gU3lzdGVtVHJheUl0ZW1CdXR0b24ocHJvcHMpIHsKICBjb25zdCB7IHN5c3RlbVRyYXlWaWV3TW9kZWw6IHN5c3RlbVRyYXlWaWV3TW9kZWwyLCBpdGVtIH0gPSBwcm9wczsKICBjb25zdCB0cmF5SXRlbXNJZE5hbWVzTWFwID0ge307CiAgdHJheUl0ZW1zSWROYW1lc01hcFsiY2hyb21lX3N0YXR1c19pY29uXzEiXSA9IHsKICAgIGljb246ICJzbGFjayIKICB9OwogIHRyYXlJdGVtc0lkTmFtZXNNYXBbIm9wZW5yZ2IiXSA9IHsKICAgIGljb246ICJvcGVucmdiIgogIH07CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJ1dHRvbiIsCiAgICB7CiAgICAgIGN1cnNvcjogInBvaW50ZXIiLAogICAgICBoZXhwYW5kOiB0cnVlLAogICAgICBjbGFzc05hbWU6IGdldFRyYXlJdGVtQ2xhc3Moc3lzdGVtVHJheVZpZXdNb2RlbDIsIGl0ZW0pLAogICAgICBvbkJ1dHRvblByZXNzRXZlbnQ6ICgpID0+IG9uU3lzdGVtVHJheUl0ZW1DbGlja2VkKHN5c3RlbVRyYXlWaWV3TW9kZWwyLCBpdGVtKSwKICAgICAgb25Ib3ZlcjogKCkgPT4gc3lzdGVtVHJheVZpZXdNb2RlbDIucmVmcmVzaFRyYXlJdGVtKGl0ZW0pLAogICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgImljb24iLAogICAgICAgIHsKICAgICAgICAgIGljb246IGJpbmQoaXRlbSwgImljb25OYW1lIikuYXMoKGljb25OYW1lKSA9PiB7CiAgICAgICAgICAgIGlmICghaWNvbk5hbWUpIHsKICAgICAgICAgICAgICByZXR1cm4gdHJheUl0ZW1zSWROYW1lc01hcFtpdGVtLmdldF9pZCgpXT8uaWNvbiB8fCAidW5rbm93biI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGljb25OYW1lOwogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICkKICAgIH0KICApOwp9CgovLyBzcmMvbGliL21hdGVyaWFsL2FuaW1hdGlvbnMudHMKdmFyIGFuaW1hdGlvbnNfZGVmYXVsdCA9IHsKICBleHByZXNzaXZlOiB7CiAgICBmYXN0X3NwYXRpYWw6IHsKICAgICAgY3VydmU6ICJjdWJpYy1iZXppZXIoMC40MiwgMS42NywgMC4yMSwgMC45KSIsCiAgICAgIGR1cmF0aW9uOiAzNTAKICAgIH0sCiAgICBkZWZhdWx0X3NwYXRpYWw6IHsKICAgICAgY3VydmU6ICJjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSkiLAogICAgICBkdXJhdGlvbjogNTAwCiAgICB9LAogICAgc2xvd19zcGF0aWFsOiB7CiAgICAgIGN1cnZlOiAiY3ViaWMtYmV6aWVyKDAuMzksIDEuMjksIDAuMzUsIDAuOTgpIiwKICAgICAgZHVyYXRpb246IDY1MAogICAgfSwKICAgIGZhc3RfZWZmZWN0czogewogICAgICBjdXJ2ZTogImN1YmljLWJlemllcigwLjMxLCAwLjk0LCAwLjM0LCAxKSIsCiAgICAgIGR1cmF0aW9uOiAxNTAKICAgIH0sCiAgICBkZWZhdWx0X2VmZmVjdHM6IHsKICAgICAgY3VydmU6ICJjdWJpYy1iZXppZXIoMC4zNCwgMC44LCAwLjM0LCAxKSIsCiAgICAgIGR1cmF0aW9uOiAyMDAKICAgIH0sCiAgICBzbG93X2VmZmVjdHM6IHsKICAgICAgY3VydmU6ICJjdWJpYy1iZXppZXIoMC4zNCwgMC44OCwgMC4zNCwgMSkiLAogICAgICBkdXJhdGlvbjogMzAwCiAgICB9CiAgfQp9OwoKLy8gc3JjL3RyYXkvU3lzdGVtVHJheS50c3gKdmFyIGxvZ2dlcjIgPSBuZXcgTG9nZ2VyKCJUcmF5SXRlbU5vdGNoIik7CnZhciBzeXN0ZW1UcmF5Vmlld01vZGVsID0gbmV3IFN5c3RlbVRyYXlWaWV3TW9kZWwoKTsKZnVuY3Rpb24gU3lzdGVtVHJheSgpIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYm94IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiBiaW5kKHN5c3RlbVRyYXlWaWV3TW9kZWwuZ2V0Rm9jdXNlZFRyYXlJdGVtKCkpLmFzKAogICAgICAgIChmb2N1c2VkVHJheUl0ZW0pID0+IHsKICAgICAgICAgIHJldHVybiAic3lzdGVtX3RyYXlfY29uc3RhbnRfYmFja2dyb3VuZCIgKyAoZm9jdXNlZFRyYXlJdGVtID8gIiBmb2N1c2VkIiA6ICIiKTsKICAgICAgICB9CiAgICAgICksCiAgICAgIGNoaWxkOiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAiYm94IiwKICAgICAgICB7CiAgICAgICAgICBjbGFzc05hbWU6IGJpbmQoc3lzdGVtVHJheVZpZXdNb2RlbC5nZXRGb2N1c2VkVHJheUl0ZW0oKSkuYXMoCiAgICAgICAgICAgIChmb2N1c2VkVHJheUl0ZW0pID0+IHsKICAgICAgICAgICAgICByZXR1cm4gInN5c3RlbV90cmF5IiArIChmb2N1c2VkVHJheUl0ZW0gPyAiIGZvY3VzZWQiIDogIiIpOwogICAgICAgICAgICB9CiAgICAgICAgICApLAogICAgICAgICAgdmVydGljYWw6IHRydWUsCiAgICAgICAgICBoYWxpZ246IEd0azQuQWxpZ24uRU5ELAogICAgICAgICAgdmFsaWduOiBHdGs0LkFsaWduLlNUQVJULAogICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAgICAgImJveCIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAic3lzdGVtX3RyYXlfaXRlbXNfbGlzdCIsCiAgICAgICAgICAgICAgICBjaGlsZHJlbjogc3lzdGVtVHJheVZpZXdNb2RlbC5nZXRUcmF5SXRlbXMoKS5hcygKICAgICAgICAgICAgICAgICAgKGl0ZW1zKSA9PiBpdGVtcy5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0uZ2V0X3RpdGxlKCkgIT09IG51bGwpLm1hcCgoaXRlbSwgaW5kZXgpID0+IC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgICAgICAgICAgIFN5c3RlbVRyYXlJdGVtQnV0dG9uLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN5c3RlbVRyYXlWaWV3TW9kZWwsCiAgICAgICAgICAgICAgICAgICAgICBpdGVtCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICApKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAgICAgInJldmVhbGVyIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uVHlwZTogR3RrNC5SZXZlYWxlclRyYW5zaXRpb25UeXBlLlNMSURFX0RPV04sCiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IGFuaW1hdGlvbnNfZGVmYXVsdC5leHByZXNzaXZlLmZhc3RfZWZmZWN0cy5kdXJhdGlvbiwKICAgICAgICAgICAgICAgIHJldmVhbENoaWxkOiBzeXN0ZW1UcmF5Vmlld01vZGVsLmdldEZvY3VzZWRUcmF5SXRlbSgpLmFzKChmb2N1c2VkVHJheUl0ZW0pID0+IHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvY3VzZWRUcmF5SXRlbSAhPT0gbnVsbDsKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgY2hpbGQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKFRyYXlJdGVtTm90Y2gsIHsgc3lzdGVtVHJheVZpZXdNb2RlbCB9KQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgKQogICAgfQogICk7Cn0KCi8vIHNyYy9zeXN0ZW1fc3RhdHMvYmF0dGVyeS9CYXR0ZXJ5Vmlld01vZGVsLnRzCmltcG9ydCBCYXR0ZXJ5IGZyb20gImdpOi8vQXN0YWxCYXR0ZXJ5IjsKdmFyIEJhdHRlcnlWaWV3TW9kZWwgPSBjbGFzcyB7CiAgY29uc3RydWN0b3IoKSB7CiAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIodGhpcy5jb25zdHJ1Y3Rvci5uYW1lKTsKICAgIHRoaXMuYmF0dGVyeSA9IEJhdHRlcnkuZ2V0X2RlZmF1bHQoKTsKICB9CiAgZ2V0QmF0dGVyeVBlcmNlbnRhZ2UoKSB7CiAgICByZXR1cm4gYmluZCh0aGlzLmJhdHRlcnksICJwZXJjZW50YWdlIik7CiAgfQogIGdldEJhdHRlcnlTdGF0ZSgpIHsKICAgIHJldHVybiBiaW5kKHRoaXMuYmF0dGVyeSwgInN0YXRlIik7CiAgfQogIGdldEJhdHRlcnlJY29uKCkgewogICAgcmV0dXJuIGJpbmQodGhpcy5iYXR0ZXJ5LCAiaWNvbl9uYW1lIik7CiAgfQp9OwoKLy8gc3JjL3N5c3RlbV9zdGF0cy9iYXR0ZXJ5L1N5c3RlbURldGFpbHMudHN4CmZ1bmN0aW9uIEJhdHRlcnlMZXZlbENpcmN1bGFyUHJvZ3Jlc3MoKSB7CiAgY29uc3QgbG9nZ2VyMyA9IG5ldyBMb2dnZXIoIkJhdHRlcnlMZXZlbENpcmN1bGFyUHJvZ3Jlc3MiKTsKICBjb25zdCBiYXR0ZXJ5Vmlld01vZGVsID0gbmV3IEJhdHRlcnlWaWV3TW9kZWwoKTsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiY2lyY3VsYXJwcm9ncmVzcyIsCiAgICB7CiAgICAgIGNsYXNzTmFtZTogImJhdHRlcnlfbGV2ZWxfY2lyY3VsYXJfcHJvZ3Jlc3MiLAogICAgICByb3VuZGVkOiB0cnVlLAogICAgICB2YWx1ZTogYmF0dGVyeVZpZXdNb2RlbC5nZXRCYXR0ZXJ5UGVyY2VudGFnZSgpLmFzKChwZXJjZW50YWdlKSA9PiB7CiAgICAgICAgbG9nZ2VyMy5kZWJ1ZyhgQmF0dGVyeSBwZXJjZW50YWdlOiAke3BlcmNlbnRhZ2V9YCk7CiAgICAgICAgcmV0dXJuIHBlcmNlbnRhZ2U7CiAgICAgIH0pLAogICAgICBzdGFydEF0OiAwLAogICAgICBlbmRBdDogMSwKICAgICAgY2hpbGQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKCJpY29uIiwgeyBpY29uOiBiYXR0ZXJ5Vmlld01vZGVsLmdldEJhdHRlcnlJY29uKCkgfSkKICAgIH0KICApOwp9CmZ1bmN0aW9uIFN5c3RlbURldGFpbHNCYXJNb2R1bGUoKSB7CiAgY29uc3QgbG9nZ2VyMyA9IG5ldyBMb2dnZXIoIlN5c3RlbURldGFpbHMiKTsKICBjb25zdCBiYXR0ZXJ5Vmlld01vZGVsID0gbmV3IEJhdHRlcnlWaWV3TW9kZWwoKTsKICBsb2dnZXIzLmRlYnVnKCJTeXN0ZW1EZXRhaWxzIGNvbXBvbmVudCBjcmVhdGVkIik7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIHZhbGlnbjogR3RrNC5BbGlnbi5TVEFSVCwKICAgICAgaGFsaWduOiBHdGs0LkFsaWduLkVORCwKICAgICAgY2xhc3NOYW1lOiAic3lzdGVtX2RldGFpbHNfY29udGFpbmVyIiwKICAgICAgY2hpbGRyZW46IFsvKiBAX19QVVJFX18gKi8ganN4MihCYXR0ZXJ5TGV2ZWxDaXJjdWxhclByb2dyZXNzLCB7fSldCiAgICB9CiAgKTsKfQoKLy8gc3JjL25vdGlmaWNhdGlvbi9OZXdOb3RpZmljYXRpb25Qb3B1cC50c3gKaW1wb3J0IEd0azYgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj0zLjAiOwoKLy8gc3JjL25vdGlmaWNhdGlvbi9Ob05ld05vdGlmaWNhdGlvblBvcHVwLnRzeAppbXBvcnQgR3RrNSBmcm9tICJnaTovL0d0az92ZXJzaW9uPTMuMCI7CgovLyBzcmMvbm90aWZpY2F0aW9uL05vdGlmaWNhdGlvblZpZXdNb2RlbC50cwppbXBvcnQgTm90aWZkIGZyb20gImdpOi8vQXN0YWxOb3RpZmQiOwp2YXIgTm90aWZpY2F0aW9uVmlld01vZGVsID0gY2xhc3MgewogIGNvbnN0cnVjdG9yKCkgewogICAgdGhpcy5ub3RpZmlkID0gTm90aWZkLmdldF9kZWZhdWx0KCk7CiAgICB0aGlzLmhhc05ld05vdGlmaWNhdGlvbiA9IFZhcmlhYmxlKGZhbHNlKTsKICAgIHRoaXMudHJhbnNpdGlvblRpbWVyID0gbnVsbDsKICAgIHRoaXMubm90aWZpZC5jb25uZWN0KCJub3RpZmllZCIsICgpID0+IHsKICAgICAgdGhpcy5oYW5kbGVOZXdOb3RpZmljYXRpb24oKTsKICAgIH0pOwogIH0KICBoYW5kbGVOZXdOb3RpZmljYXRpb24oKSB7CiAgICBpZiAodGhpcy50cmFuc2l0aW9uVGltZXIpIHsKICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudHJhbnNpdGlvblRpbWVyKTsKICAgIH0KICAgIHRoaXMuaGFzTmV3Tm90aWZpY2F0aW9uLnNldCh0cnVlKTsKICB9CiAgZ2V0Tm90aWZpY2F0aW9ucyhzb3J0ID0gdHJ1ZSkgewogICAgcmV0dXJuIGJpbmQodGhpcy5ub3RpZmlkLCAibm90aWZpY2F0aW9ucyIpLmFzKChub3RpZmljYXRpb25zKSA9PiB7CiAgICAgIGlmIChzb3J0KSB7CiAgICAgICAgbm90aWZpY2F0aW9ucyA9IG5vdGlmaWNhdGlvbnMuc29ydCgoYSwgYikgPT4gewogICAgICAgICAgcmV0dXJuIGIuZ2V0X3RpbWUoKSAtIGEuZ2V0X3RpbWUoKTsKICAgICAgICB9KTsKICAgICAgfQogICAgICByZXR1cm4gbm90aWZpY2F0aW9uczsKICAgIH0pOwogIH0KICBjb25uZWN0TmV3Tm90aWZpY2F0aW9uQ2FsbGJhY2soY2FsbGJhY2spIHsKICAgIHRoaXMubm90aWZpZC5jb25uZWN0KCJub3RpZmllZCIsIChzZWxmLCBpZCkgPT4gewogICAgICBjYWxsYmFjayhzZWxmLCBpZCk7CiAgICB9KTsKICB9CiAgZ2V0Tm90aWZpY2F0aW9uQnlJZChpZCkgewogICAgcmV0dXJuIHRoaXMubm90aWZpZC5nZXRfbm90aWZpY2F0aW9uKGlkKTsKICB9CiAgZ2V0SXNEb05vdERpc3R1cmIoKSB7CiAgICByZXR1cm4gYmluZCh0aGlzLm5vdGlmaWQsICJkb250RGlzdHVyYiIpOwogIH0KICBzZXREb05vdERpc3R1cmIodmFsdWUpIHsKICAgIHRoaXMubm90aWZpZC5zZXRfZG9udF9kaXN0dXJiKHZhbHVlKTsKICB9Cn07CgovLyBzcmMvbm90aWZpY2F0aW9uL05vTmV3Tm90aWZpY2F0aW9uUG9wdXAudHN4CnZhciBOT1RJRklDQVRJT05TX1JFQURfRE5EX0lDT04gPSAiaW5kaWNhdG9yLW5vdGlmaWNhdGlvbi1yZWFkLWRuZCI7CnZhciBOT1RJRklDQVRJT05TX1VOUkVBRF9ETkRfSUNPTiA9ICJpbmRpY2F0b3Itbm90aWZpY2F0aW9uLXVucmVhZC1kbmQiOwp2YXIgTk9USUZJQ0FUSU9OU19SRUFEX0lDT04gPSAiaW5kaWNhdG9yLW5vdGlmaWNhdGlvbi1yZWFkIjsKdmFyIE5PVElGSUNBVElPTlNfVU5SRUFEX0lDT04gPSAiaW5kaWNhdG9yLW5vdGlmaWNhdGlvbi11bnJlYWQiOwp2YXIgbm90aWZpY2F0aW9uVmlld01vZGVsID0gbmV3IE5vdGlmaWNhdGlvblZpZXdNb2RlbCgpOwpmdW5jdGlvbiBOb05ld05vdGlmaWNhdGlvblBvcHVwKCkgewogIGNvbnN0IGxvZ2dlcjMgPSBuZXcgTG9nZ2VyKCJOb05ld05vdGlmaWNhdGlvblBvcHVwIik7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIGNsYXNzTmFtZTogIm5vX25vdGlmaWNhdGlvbiIsCiAgICAgIHZleHBhbmQ6IHRydWUsCiAgICAgIGhhbGlnbjogR3RrNS5BbGlnbi5DRU5URVIsCiAgICAgIHZhbGlnbjogR3RrNS5BbGlnbi5DRU5URVIsCiAgICAgIGNoaWxkOiBub3RpZmljYXRpb25WaWV3TW9kZWwuZ2V0SXNEb05vdERpc3R1cmIoKS5hcygoaXNEb05vdERpc3R1cmIpID0+IHsKICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgIHsKICAgICAgICAgICAgY3Vyc29yOiAicG9pbnRlciIsCiAgICAgICAgICAgIGNsYXNzTmFtZTogImljb25fYnV0dG9uIHhzbWFsbCAiLAogICAgICAgICAgICBvbkJ1dHRvblByZXNzRXZlbnQ6ICgpID0+IHsKICAgICAgICAgICAgICBjb25zdCBpc0RvTm90RGlzdHVyYjIgPSBub3RpZmljYXRpb25WaWV3TW9kZWwuZ2V0SXNEb05vdERpc3R1cmIoKS5nZXQoKTsKICAgICAgICAgICAgICBsb2dnZXIzLmRlYnVnKGBUb2dnbGluZyBEbyBOb3QgRGlzdHVyYiBtb2RlOiAkeyFpc0RvTm90RGlzdHVyYjJ9YCk7CiAgICAgICAgICAgICAgbm90aWZpY2F0aW9uVmlld01vZGVsLnNldERvTm90RGlzdHVyYighaXNEb05vdERpc3R1cmIyKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY2hpbGQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgICAgICAgICAgICJpY29uIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBub3RpZmljYXRpb25WaWV3TW9kZWwuZ2V0SXNEb05vdERpc3R1cmIoKS5hcygoaXNEb05vdERpc3R1cmIyKSA9PiB7CiAgICAgICAgICAgICAgICAgIGNvbnN0IG5vdGlmaWNhdGlvbnNDb3VudCA9IG5vdGlmaWNhdGlvblZpZXdNb2RlbC5nZXROb3RpZmljYXRpb25zKCkuZ2V0KCkubGVuZ3RoOwogICAgICAgICAgICAgICAgICBpZiAoaXNEb05vdERpc3R1cmIyKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vdGlmaWNhdGlvbnNDb3VudCA+IDAgPyBOT1RJRklDQVRJT05TX1VOUkVBRF9ETkRfSUNPTiA6IE5PVElGSUNBVElPTlNfUkVBRF9ETkRfSUNPTjsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm90aWZpY2F0aW9uc0NvdW50ID4gMCA/IE5PVElGSUNBVElPTlNfVU5SRUFEX0lDT04gOiBOT1RJRklDQVRJT05TX1JFQURfSUNPTjsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkKICAgICAgICAgIH0KICAgICAgICApOwogICAgICB9KQogICAgfQogICk7Cn0KCi8vIHNyYy9ub3RpZmljYXRpb24vTmV3Tm90aWZpY2F0aW9uUG9wdXAudHN4CnZhciBOb3RpZmljYXRpb25JbWFnZSA9IChub3RpZmljYXRpb24pID0+IHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoImljb24iLCB7IGljb246IG5vdGlmaWNhdGlvbi5nZXRfaW1hZ2UoKSwgY2xhc3NOYW1lOiAibm90aWZpY2F0aW9uX2FwcF9pY29uIiB9KTsKfTsKZnVuY3Rpb24gTmV3Tm90aWZpY2F0aW9uUG9wdXAocHJvcHMpIHsKICBjb25zdCBub3RpZmljYXRpb24gPSBwcm9wcy5ub3RpZmljYXRpb247CiAgaWYgKCFub3RpZmljYXRpb24pIHsKICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MihOb05ld05vdGlmaWNhdGlvblBvcHVwLCB7fSk7CiAgfQogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJib3giLAogICAgewogICAgICBjbGFzc05hbWU6ICJuZXdfbm90aWZpY2F0aW9uX2NhcmRfcHJldmlldyIsCiAgICAgIHZleHBhbmQ6IHRydWUsCiAgICAgIGhhbGlnbjogR3RrNi5BbGlnbi5DRU5URVIsCiAgICAgIHZhbGlnbjogR3RrNi5BbGlnbi5DRU5URVIsCiAgICAgIGNoaWxkOiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICAgICAiYm94IiwKICAgICAgICB7CiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICBub3RpZmljYXRpb24uZ2V0X2ltYWdlKCkgPyAoCiAgICAgICAgICAgICAgLy8gPGljb24gaWNvbj17bm90aWZpY2F0aW9uLmdldF9hcHBfaWNvbigpfSAvPgogICAgICAgICAgICAgIE5vdGlmaWNhdGlvbkltYWdlKG5vdGlmaWNhdGlvbikKICAgICAgICAgICAgKSA6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKCJpY29uIiwgeyBpY29uOiAibm90aWZpY2F0aW9uIiB9KSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoImxhYmVsIiwgeyBsYWJlbDogbm90aWZpY2F0aW9uLmdldF9zdW1tYXJ5KCkgfSkKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgICkKICAgIH0KICApOwp9CgovLyBzcmMvbm90aWZpY2F0aW9uL05ld05vdGlmaWNhdGlvblZpZXdNb2RlbC50c3gKdmFyIE5ld05vdGlmaWNhdGlvblZpZXdNb2RlbCA9IGNsYXNzIF9OZXdOb3RpZmljYXRpb25WaWV3TW9kZWwgewogIGNvbnN0cnVjdG9yKCkgewogICAgdGhpcy5ub3RpZmljYXRpb25WaWV3TW9kZWwgPSBuZXcgTm90aWZpY2F0aW9uVmlld01vZGVsKCk7CiAgICB0aGlzLnJlc3VsdGluZ1dpZGdldFZhcmlhYmxlID0gbmV3IFZhcmlhYmxlKG51bGwpOwogICAgdGhpcy5oYXNOZXdOb3RpZmljYXRpb25WYXJpYWJsZSA9IG5ldyBWYXJpYWJsZShmYWxzZSk7CiAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIodGhpcy5jb25zdHJ1Y3Rvci5uYW1lKTsKICAgIHRoaXMucmVzdWx0aW5nV2lkZ2V0VmFyaWFibGUuc2V0KC8qIEBfX1BVUkVfXyAqLyBqc3gyKE5vTmV3Tm90aWZpY2F0aW9uUG9wdXAsIHt9KSk7CiAgICB0aGlzLnNldHVwTmV3Tm90aWZpY2F0aW9uTGlzdGVuZXIoKTsKICB9CiAgc3RhdGljIHsKICAgIHRoaXMuREVGQVVMVF9OT1RJRklDQVRJT05fVElNRU9VVCA9IDVlMzsKICB9CiAgc2V0dXBOZXdOb3RpZmljYXRpb25MaXN0ZW5lcigpIHsKICAgIHRoaXMubm90aWZpY2F0aW9uVmlld01vZGVsLmNvbm5lY3ROZXdOb3RpZmljYXRpb25DYWxsYmFjaygKICAgICAgKG5vdGlmaWNhdGlvbkNsaWVudCwgbm90aWZpY2F0aW9uSWQpID0+IHsKICAgICAgICBjb25zdCBub3RpZmljYXRpb24gPSB0aGlzLm5vdGlmaWNhdGlvblZpZXdNb2RlbC5nZXROb3RpZmljYXRpb25CeUlkKG5vdGlmaWNhdGlvbklkKTsKICAgICAgICB0aGlzLnJlc3VsdGluZ1dpZGdldFZhcmlhYmxlLnNldCgKICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKE5ld05vdGlmaWNhdGlvblBvcHVwLCB7IG5vdGlmaWNhdGlvbiB9KQogICAgICAgICk7CiAgICAgICAgdGhpcy5oYXNOZXdOb3RpZmljYXRpb25WYXJpYWJsZS5zZXQodHJ1ZSk7CiAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9uVGltZW91dCA9IG5vdGlmaWNhdGlvbi5nZXRfZXhwaXJlX3RpbWVvdXQoKSA+IDAgPyBub3RpZmljYXRpb24uZ2V0X2V4cGlyZV90aW1lb3V0KCkgOiBfTmV3Tm90aWZpY2F0aW9uVmlld01vZGVsLkRFRkFVTFRfTk9USUZJQ0FUSU9OX1RJTUVPVVQ7CiAgICAgICAgdGhpcy5sb2dnZXIuZGVidWcoCiAgICAgICAgICBgTmV3IG5vdGlmaWNhdGlvbiByZWNlaXZlZDogJHtub3RpZmljYXRpb24uZ2V0X2FwcF9uYW1lKCl9IHdpdGggdGltZW91dCAke25vdGlmaWNhdGlvblRpbWVvdXR9YAogICAgICAgICk7CiAgICAgICAgdGltZW91dChub3RpZmljYXRpb25UaW1lb3V0LCAoKSA9PiB7CiAgICAgICAgICB0aGlzLnJlc3VsdGluZ1dpZGdldFZhcmlhYmxlLnNldCgvKiBAX19QVVJFX18gKi8ganN4MihOb05ld05vdGlmaWNhdGlvblBvcHVwLCB7fSkpOwogICAgICAgICAgdGhpcy5oYXNOZXdOb3RpZmljYXRpb25WYXJpYWJsZS5zZXQoZmFsc2UpOwogICAgICAgIH0pOwogICAgICB9CiAgICApOwogIH0KICBnZXRSZXN1bHRpbmdXaWRnZXQoKSB7CiAgICByZXR1cm4gYmluZCh0aGlzLnJlc3VsdGluZ1dpZGdldFZhcmlhYmxlKTsKICB9CiAgZ2V0SGFzTmV3Tm90aWZpY2F0aW9uKCkgewogICAgcmV0dXJuIGJpbmQodGhpcy5oYXNOZXdOb3RpZmljYXRpb25WYXJpYWJsZSk7CiAgfQp9OwoKLy8gc3JjL25vdGlmaWNhdGlvbi9Ob3RpZmljYXRpb24udHN4CmZ1bmN0aW9uIE5vdGlmaWNhdGlvbnNQb3B1cCgpIHsKICBjb25zdCBuZXdOb3RpZmljYXRpb25WaWV3TW9kZWwgPSBuZXcgTmV3Tm90aWZpY2F0aW9uVmlld01vZGVsKCk7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3gyKAogICAgImJveCIsCiAgICB7CiAgICAgIGNsYXNzTmFtZTogbmV3Tm90aWZpY2F0aW9uVmlld01vZGVsLmdldEhhc05ld05vdGlmaWNhdGlvbigpLmFzKChoYXNOZXdOb3RpZmljYXRpb24pID0+IHsKICAgICAgICBsZXQgY2xhc3NOYW1lID0gIm5vdGlmaWNhdGlvbl9iYXIiOwogICAgICAgIGlmIChoYXNOZXdOb3RpZmljYXRpb24pIHsKICAgICAgICAgIGNsYXNzTmFtZSArPSAiIGhhc19uZXdfbm90aWZpY2F0aW9uIjsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGNsYXNzTmFtZTsKICAgICAgfSksCiAgICAgIHZleHBhbmQ6IHRydWUsCiAgICAgIGhleHBhbmQ6IHRydWUsCiAgICAgIGhhbGlnbjogR3RrNC5BbGlnbi5FTkQsCiAgICAgIHZhbGlnbjogR3RrNC5BbGlnbi5TVEFSVCwKICAgICAgY2hpbGQ6IG5ld05vdGlmaWNhdGlvblZpZXdNb2RlbC5nZXRSZXN1bHRpbmdXaWRnZXQoKQogICAgfQogICk7Cn0KCi8vIHNyYy92aWV3L2Jhci9CYXIudHN4CmZ1bmN0aW9uIFJpZ2h0U2lkZUJhcigpIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAiYm94IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAiaHlwcm5vdGNoX2Jhcl9zaWRlIiwKICAgICAgdmVydGljYWw6IGZhbHNlLAogICAgICBoZXhwYW5kOiB0cnVlLAogICAgICBoYWxpZ246IEd0azQuQWxpZ24uRU5ELAogICAgICBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3gyKFN5c3RlbURldGFpbHNCYXJNb2R1bGUsIHt9KSwKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4MihTeXN0ZW1UcmF5LCB7fSksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeDIoTm90aWZpY2F0aW9uc1BvcHVwLCB7fSkKICAgICAgXQogICAgfQogICk7Cn0KZnVuY3Rpb24gTGVmdFNpZGVCYXIoeyBnZGttb25pdG9yIH0pIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoImJveCIsIHsgdmV4cGFuZDogdHJ1ZSwgY2hpbGQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKFdvcmtzcGFjZXNCYXIsIHsgZ2RrbW9uaXRvciB9KSB9KTsKfQpmdW5jdGlvbiBCYXIoZ2RrbW9uaXRvcikgewogIGNvbnN0IGxvZ2dlcjMgPSBuZXcgTG9nZ2VyKCJCYXIiKTsKICBsb2dnZXIzLmRlYnVnKCJCYXIgd2luZG93IGNyZWF0ZWQiKTsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAid2luZG93IiwKICAgIHsKICAgICAgY2xhc3NOYW1lOiAiaHlwcm5vdGNoX2JhciIsCiAgICAgIG5hbWVzcGFjZTogImh5cHJub3RjaCIsCiAgICAgIGdka21vbml0b3IsCiAgICAgIGFuY2hvcjogQXN0YWw3LldpbmRvd0FuY2hvci5UT1AgfCBBc3RhbDcuV2luZG93QW5jaG9yLkxFRlQgfCBBc3RhbDcuV2luZG93QW5jaG9yLlJJR0hULAogICAgICBleGNsdXNpdml0eTogQXN0YWw3LkV4Y2x1c2l2aXR5LklHTk9SRSwKICAgICAgYXBwbGljYXRpb246IGFwcF9kZWZhdWx0LAogICAgICBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeDIoCiAgICAgICAgImNlbnRlcmJveCIsCiAgICAgICAgewogICAgICAgICAgY2xhc3NOYW1lOiAiaHlwcm5vdGNoX2Jhcl9jb250YWluZXIiLAogICAgICAgICAgc3RhcnRXaWRnZXQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKExlZnRTaWRlQmFyLCB7IGdka21vbml0b3IgfSksCiAgICAgICAgICBjZW50ZXJXaWRnZXQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKCJib3giLCB7fSksCiAgICAgICAgICBlbmRXaWRnZXQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKFJpZ2h0U2lkZUJhciwgeyBnZGttb25pdG9yIH0pCiAgICAgICAgfQogICAgICApCiAgICB9CiAgKTsKfQoKLy8gc3JjL3ZpZXcvYmFyL0JhckNvbnRhaW5lckJhY2tncm91bmQudHN4CmZ1bmN0aW9uIEJhckNvbnRhaW5lckJhY2tncm91bmQoZ2RrbW9uaXRvcikgewogIGNvbnN0IGxvZ2dlcjMgPSBuZXcgTG9nZ2VyKCJCYXJDb250YWluZXJCYWNrZ3JvdW5kIik7CiAgbG9nZ2VyMy5kZWJ1ZygiQmFyQ29udGFpbmVyQmFja2dyb3VuZCB3aW5kb3cgY3JlYXRlZCIpOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MigKICAgICJ3aW5kb3ciLAogICAgewogICAgICBjbGFzc05hbWU6ICJoeXBybm90Y2giLAogICAgICBuYW1lc3BhY2U6ICJoeXBybm90Y2giLAogICAgICBhbmNob3I6IEFzdGFsNy5XaW5kb3dBbmNob3IuVE9QIHwgQXN0YWw3LldpbmRvd0FuY2hvci5MRUZUIHwgQXN0YWw3LldpbmRvd0FuY2hvci5SSUdIVCwKICAgICAgZXhjbHVzaXZpdHk6IEFzdGFsNy5FeGNsdXNpdml0eS5FWENMVVNJVkUsCiAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgZ2RrbW9uaXRvciwKICAgICAgY2hpbGQ6IC8qIEBfX1BVUkVfXyAqLyBqc3gyKCJib3giLCB7IGNsYXNzTmFtZTogImh5cHJub3RjaF9iYXJfY29udGFpbmVyX2JhY2tncm91bmQiIH0pCiAgICB9CiAgKTsKfQoKLy8gc2FzczovaG9tZS9jY3JldHUvUHJvamVjdHMvaHlwcm5vdGNoL3N0eWxlL21haW4uc2Nzcwp2YXIgbWFpbl9kZWZhdWx0ID0gIi8qIFByaW1hcnkgUGFsZXR0ZSAqL1xuLyogU2Vjb25kYXJ5IFBhbGV0dGUgKi9cbi8qIFRlcnRpYXJ5IFBhbGV0dGUgKi9cbi8qIFN1cmZhY2UgJiBCYWNrZ3JvdW5kICovXG4vKiBFcnJvciBQYWxldHRlICovXG4vKiBNaXNjICovXG4vKiBPcHRpb25hbDogQ3VzdG9tIGZvbnQgKi9cbi8qIEFuaW1hdGlvbiBDdXJ2ZXMgKi9cbi8qIEV4cHJlc3NpdmUgKi9cbi8qIFN0YW5kYXJkICovXG4uaWNvbl9idXR0b24ge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLCBib3JkZXItcmFkaXVzIDAuMnMgZWFzZSwgYm94LXNoYWRvdyAwLjJzIGVhc2U7XG4gIG1pbi13aWR0aDogNDBweDtcbiAgbWluLWhlaWdodDogNDBweDtcbiAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xufVxuLmljb25fYnV0dG9uIGxhYmVsLFxuLmljb25fYnV0dG9uIGltYWdlIHtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbi5pY29uX2J1dHRvbiBpbWFnZSB7XG4gIG1pbi13aWR0aDogMjRweDtcbiAgbWluLWhlaWdodDogMjRweDtcbn1cbi5pY29uX2J1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IDJweCBzb2xpZCAjYmNjYmIwO1xuICBvdXRsaW5lLW9mZnNldDogMnB4O1xufVxuLmljb25fYnV0dG9uOmRpc2FibGVkLCAuZGlzYWJsZWQuaWNvbl9idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTYuMTUsIDE2LjE1LCAxNi4xNSk7XG4gIGNvbG9yOiByZ2IoOTcuNjYsIDk3LjY2LCA5Ny42Nik7XG4gIG9wYWNpdHk6IDAuMzg7XG59XG4uaWNvbl9idXR0b246ZGlzYWJsZWQ6aG92ZXIsIC5pY29uX2J1dHRvbjpkaXNhYmxlZDphY3RpdmUsIC5kaXNhYmxlZC5pY29uX2J1dHRvbjpob3ZlciwgLmRpc2FibGVkLmljb25fYnV0dG9uOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNi4xNSwgMTYuMTUsIDE2LjE1KTtcbiAgY29sb3I6IHJnYig5Ny42NiwgOTcuNjYsIDk3LjY2KTtcbiAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xufVxuXG4uaWNvbl9idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWFkNjgwO1xuICBjb2xvcjogIzBjMzkwMDtcbn1cbi5pY29uX2J1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNjQuMSwgMjE4LjEsIDE0MC43KTtcbn1cbi5pY29uX2J1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc0LjIsIDIyMi4yLCAxNTMuNCk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cblxuLmljb25fYnV0dG9uLnhzbWFsbCB7XG4gIG1pbi13aWR0aDogMzJweDtcbiAgbWluLWhlaWdodDogMzJweDtcbn1cbi5pY29uX2J1dHRvbi54c21hbGwgaW1hZ2Uge1xuICBtaW4td2lkdGg6IDIwcHg7XG4gIG1pbi1oZWlnaHQ6IDIwcHg7XG59XG4uaWNvbl9idXR0b24ubWVkaXVtIHtcbiAgbWluLXdpZHRoOiA0OHB4O1xuICBtaW4taGVpZ2h0OiA0OHB4O1xufVxuLmljb25fYnV0dG9uLmxhcmdlIHtcbiAgbWluLXdpZHRoOiA1NnB4O1xuICBtaW4taGVpZ2h0OiA1NnB4O1xufVxuLmljb25fYnV0dG9uLmxhcmdlIGltYWdlIHtcbiAgbWluLXdpZHRoOiAyOHB4O1xuICBtaW4taGVpZ2h0OiAyOHB4O1xufVxuLmljb25fYnV0dG9uLnhsYXJnZSB7XG4gIG1pbi13aWR0aDogNjRweDtcbiAgbWluLWhlaWdodDogNjRweDtcbn1cbi5pY29uX2J1dHRvbi54bGFyZ2UgaW1hZ2Uge1xuICBtaW4td2lkdGg6IDI4cHg7XG4gIG1pbi1oZWlnaHQ6IDI4cHg7XG59XG4uaWNvbl9idXR0b24ubmFycm93IHtcbiAgcGFkZGluZzogNHB4O1xufVxuLmljb25fYnV0dG9uLndpZGUge1xuICBwYWRkaW5nOiAxNHB4O1xufVxuXG4uaWNvbl9idXR0b24uc3F1YXJlIHtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbn1cbi5pY29uX2J1dHRvbi5zcXVhcmU6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE3NC4yLCAyMjIuMiwgMTUzLjQpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uaWNvbl9idXR0b24uc3F1YXJlLnRvZ2dsZS5jaGVja2VkIHtcbiAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xufVxuXG4uaWNvbl9idXR0b24uZmlsbGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzlhZDY4MDtcbiAgY29sb3I6ICMwYzM5MDA7XG59XG4uaWNvbl9idXR0b24udG9uYWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Q0YjM2O1xuICBjb2xvcjogI2Q4ZTdjYjtcbn1cbi5pY29uX2J1dHRvbi50b25hbDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig4MC40LCA5MywgNzQuMSk7XG59XG4uaWNvbl9idXR0b24udG9uYWw6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDk5LjgsIDExMSwgOTQuMik7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5pY29uX2J1dHRvbi5vdXRsaW5lZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogIzlhZDY4MDtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICM5YWQ2ODA7XG59XG4uaWNvbl9idXR0b24ub3V0bGluZWQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ5Ljk1LCAyNTIuOTUsIDI0OC42NSk7XG59XG4uaWNvbl9idXR0b24ub3V0bGluZWQ6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NC45LCAyNTAuOSwgMjQyLjMpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uaWNvbl9idXR0b24ub3V0bGluZWQ6aG92ZXIge1xuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggIzlhZDY4MDtcbn1cbi5pY29uX2J1dHRvbi5vdXRsaW5lZDphY3RpdmUge1xuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggIzlhZDY4MDtcbn1cbi5pY29uX2J1dHRvbi5zdGFuZGFyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogI2M2YzZjNjtcbn1cbi5pY29uX2J1dHRvbi5zdGFuZGFyZDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTIuMTUsIDI1Mi4xNSwgMjUyLjE1KTtcbn1cbi5pY29uX2J1dHRvbi5zdGFuZGFyZDphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ5LjMsIDI0OS4zLCAyNDkuMyk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cblxuLmljb25fYnV0dG9uLnRvZ2dsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZjFmMWY7XG4gIGNvbG9yOiAjYzZjNmM2O1xufVxuLmljb25fYnV0dG9uLnRvZ2dsZS5jaGVja2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzlhZDY4MDtcbiAgY29sb3I6ICMwYzM5MDA7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG59XG4uaWNvbl9idXR0b24udG9nZ2xlLnNxdWFyZS5jaGVja2VkIHtcbiAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xufVxuXG4uaWNvbl9idXR0b25fZ3JvdXAgLmljb25fYnV0dG9uIHtcbiAgbWFyZ2luOiAwcHggMnB4O1xufVxuLmljb25fYnV0dG9uX2dyb3VwIC5pY29uX2J1dHRvbjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG4uaWNvbl9idXR0b25fZ3JvdXAgLmljb25fYnV0dG9uOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDBweDtcbn1cblxuc2NhbGUge1xuICBtaW4td2lkdGg6IDIwcHg7XG4gIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICBtYXJnaW46IDBweDtcbn1cbnNjYWxlIHRyb3VnaCB7XG4gIG1pbi13aWR0aDogMjBweDtcbiAgbWluLWhlaWdodDogMTAwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkOGU3Y2I7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbnNjYWxlIGhpZ2hsaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5YWQ2ODA7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG59XG5zY2FsZSBzbGlkZXIge1xuICBtaW4td2lkdGg6IDIycHg7XG4gIG1pbi1oZWlnaHQ6IDJweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWFkNjgwO1xuICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgbWFyZ2luOiAtM3B4IC0xM3B4O1xufVxuc2NhbGU6aG92ZXIgc2xpZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JjY2JiMDtcbiAgYm9yZGVyLWNvbG9yOiAjMjczNDIxO1xufVxuc2NhbGU6YWN0aXZlIHNsaWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhMGNmZDA7XG59XG5zY2FsZSBjb250ZW50cyB0aHJvdWdoIHtcbiAgbWluLXdpZHRoOiAzMHB4O1xufVxuXG5jaXJjdWxhcnByb2dyZXNzIHtcbiAgY29sb3I6ICM5YWQ2ODA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDRiMzY7XG4gIGZvbnQtc2l6ZTogNnB4O1xuICBtaW4td2lkdGg6IDMycHg7XG59XG5cbi5oeXBybm90Y2gtYnV0dG9uLWFyZWEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTMxMzEzO1xuICBjb2xvcjogI2UyZTJlMjtcbiAgdHJhbnNpdGlvbjogbWluLXdpZHRoIDM1MG1zIGN1YmljLWJlemllcigwLjQyLCAxLjY3LCAwLjIxLCAwLjkpLCBtaW4taGVpZ2h0IDM1MG1zIGN1YmljLWJlemllcigwLjQyLCAxLjY3LCAwLjIxLCAwLjkpLCBwYWRkaW5nIDM1MG1zIGN1YmljLWJlemllcigwLjQyLCAxLjY3LCAwLjIxLCAwLjkpO1xuICBib3JkZXItcmFkaXVzOiAwcHggMHB4IDEycHggMTJweDtcbn1cblxuLmh5cHJub3RjaC1idXR0b24tYXJlYSB7XG4gIHBhZGRpbmc6IDBweDtcbiAgbWFyZ2luOiAwcHg7XG4gIGJvcmRlcjogMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogOHB4O1xuICBtaW4td2lkdGg6IDMwMHB4O1xuICBtaW4taGVpZ2h0OiAzMnB4O1xufVxuLmh5cHJub3RjaC1idXR0b24tYXJlYS5leHBhbmRlZCB7XG4gIHBhZGRpbmc6IDBweCAyNHB4IDEycHggMjRweDtcbiAgYm9yZGVyLXJhZGl1czogMHB4IDBweCAyOHB4IDI4cHg7XG59XG4uaHlwcm5vdGNoLWJ1dHRvbi1hcmVhLnNvdW5kX3NldHRpbmdzIHtcbiAgcGFkZGluZzogMHB4IDI0cHggMTJweCAyNHB4O1xuICBib3JkZXItcmFkaXVzOiAwcHggMHB4IDI4cHggMjhweDtcbiAgbWluLXdpZHRoOiA2MDBweDtcbiAgbWluLWhlaWdodDogMjAwcHg7XG59XG5cbi53b3Jrc3BhY2VzX2Jhcl9jb250YWluZXIge1xuICB0cmFuc2l0aW9uOiBtaW4td2lkdGggMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSksIG1pbi1oZWlnaHQgMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSksIHBhZGRpbmcgMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMzEzMTM7XG4gIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMTZweCAwcHg7XG59XG5cbi53b3Jrc3BhY2VzX2JhciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMzEzMTM7XG4gIGJvcmRlci1yYWRpdXM6IDk5OTlweDtcbiAgdHJhbnNpdGlvbjogNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzgsIDEuMjEsIDAuMjIsIDEpO1xufVxuXG4ud29ya3NwYWNlX2J1dHRvbiB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIG1pbi1oZWlnaHQgNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzgsIDEuMjEsIDAuMjIsIDEpLCBwYWRkaW5nIDUwMG1zIGN1YmljLWJlemllcigwLjM4LCAxLjIxLCAwLjIyLCAxKTtcbiAgdHJhbnNpdGlvbjogcGFkZGluZyA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIGJhY2tncm91bmQtY29sb3IgMjAwbXMgY3ViaWMtYmV6aWVyKDAuMzQsIDAuOCwgMC4zNCwgMSk7XG4gIGJvcmRlci1yYWRpdXM6IDk5OTlweDtcbiAgbWFyZ2luOiA0cHg7XG4gIHBhZGRpbmc6IDBweCA0cHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzlhZDY4MDtcbiAgY29sb3I6ICMwYzM5MDA7XG59XG4ud29ya3NwYWNlX2J1dHRvbjpob3ZlciB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIG1pbi1oZWlnaHQgNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzgsIDEuMjEsIDAuMjIsIDEpLCBwYWRkaW5nIDUwMG1zIGN1YmljLWJlemllcigwLjM4LCAxLjIxLCAwLjIyLCAxKTtcbiAgdHJhbnNpdGlvbjogcGFkZGluZyA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIGJhY2tncm91bmQtY29sb3IgMjAwbXMgY3ViaWMtYmV6aWVyKDAuMzQsIDAuOCwgMC4zNCwgMSk7XG4gIHBhZGRpbmc6IDBweCAxMnB4O1xufVxuLndvcmtzcGFjZV9idXR0b24uZm9jdXNlZCB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIG1pbi1oZWlnaHQgNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzgsIDEuMjEsIDAuMjIsIDEpLCBwYWRkaW5nIDUwMG1zIGN1YmljLWJlemllcigwLjM4LCAxLjIxLCAwLjIyLCAxKTtcbiAgdHJhbnNpdGlvbjogcGFkZGluZyA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIGJhY2tncm91bmQtY29sb3IgMjAwbXMgY3ViaWMtYmV6aWVyKDAuMzQsIDAuOCwgMC4zNCwgMSk7XG4gIHBhZGRpbmc6IDBweCAxMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmNjYmIwO1xufVxuLndvcmtzcGFjZV9idXR0b24gbGFiZWwge1xuICBmb250LXNpemU6IDE2cHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbi53b3Jrc3BhY2VfYnV0dG9uIGljb24ge1xuICBmb250LXNpemU6IDIwcHg7XG4gIHBhZGRpbmc6IDBweCAycHg7XG59XG5cbi5zeXN0ZW1fdHJheV9jb25zdGFudF9iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzMTMxMztcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xufVxuLnN5c3RlbV90cmF5X2NvbnN0YW50X2JhY2tncm91bmQuZm9jdXNlZCB7XG4gIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMjhweCAyOHB4O1xufVxuXG4uc3lzdGVtX3RyYXlfaXRlbSB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIG1pbi1oZWlnaHQgNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzgsIDEuMjEsIDAuMjIsIDEpLCBwYWRkaW5nIDUwMG1zIGN1YmljLWJlemllcigwLjM4LCAxLjIxLCAwLjIyLCAxKTtcbiAgcGFkZGluZzogMCA0cHg7XG4gIG1hcmdpbjogMCAxcHg7XG4gIG1pbi1oZWlnaHQ6IDMwcHg7XG59XG4uc3lzdGVtX3RyYXlfaXRlbSBpY29uIHtcbiAgZm9udC1zaXplOiAyMnB4O1xufVxuLnN5c3RlbV90cmF5X2l0ZW06aG92ZXIsIC5hY3RpdmUuc3lzdGVtX3RyYXlfaXRlbSB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCA1MDBtcyBjdWJpYy1iZXppZXIoMC4zOCwgMS4yMSwgMC4yMiwgMSksIG1pbi1oZWlnaHQgNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzgsIDEuMjEsIDAuMjIsIDEpLCBwYWRkaW5nIDUwMG1zIGN1YmljLWJlemllcigwLjM4LCAxLjIxLCAwLjIyLCAxKTtcbiAgbWluLXdpZHRoOiA0MHB4O1xufVxuXG4uc3lzdGVtX3RyYXlfaXRlbSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5YWQ2ODA7XG4gIGNvbG9yOiAjMGMzOTAwO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uc3lzdGVtX3RyYXlfaXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiY2NiYjA7XG4gIGNvbG9yOiAjMjczNDIxO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xufVxuLnN5c3RlbV90cmF5X2l0ZW0uYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzMTMxMztcbiAgY29sb3I6ICM5YWQ2ODA7XG4gIGJvcmRlci1yYWRpdXM6IDI4cHggMjhweCAwcHggMHB4O1xufVxuLnN5c3RlbV90cmF5X2l0ZW0uZmlyc3Qge1xuICBib3JkZXItcmFkaXVzOiAxNnB4IDhweCA4cHggMTZweDtcbn1cbi5zeXN0ZW1fdHJheV9pdGVtLmZpcnN0OmhvdmVyLCAuc3lzdGVtX3RyYXlfaXRlbS5maXJzdC5hY3RpdmUge1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTMxMzEzO1xufVxuLnN5c3RlbV90cmF5X2l0ZW0ubGFzdCB7XG4gIGJvcmRlci1yYWRpdXM6IDhweCAxNnB4IDE2cHggOHB4O1xufVxuLnN5c3RlbV90cmF5X2l0ZW0ubGFzdDpob3ZlciwgLnN5c3RlbV90cmF5X2l0ZW0ubGFzdC5hY3RpdmUge1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTMxMzEzO1xufVxuXG4uc3lzdGVtX3RyYXkge1xuICB0cmFuc2l0aW9uOiBtaW4td2lkdGggMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSksIG1pbi1oZWlnaHQgMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSksIHBhZGRpbmcgMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMzEzMTM7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAwcHg7XG4gIG1pbi1oZWlnaHQ6IDMycHg7XG59XG4uc3lzdGVtX3RyYXkuZm9jdXNlZCB7XG4gIGJvcmRlci1yYWRpdXM6IDI4cHg7XG59XG5cbi5zeXN0ZW1fdHJheV9iYXJfbm90Y2gge1xuICB0cmFuc2l0aW9uOiBtaW4td2lkdGggMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSksIG1pbi1oZWlnaHQgMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSksIHBhZGRpbmcgMzUwbXMgY3ViaWMtYmV6aWVyKDAuNDIsIDEuNjcsIDAuMjEsIDAuOSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBtaW4taGVpZ2h0OiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBvcGFjaXR5OiAwO1xufVxuLnN5c3RlbV90cmF5X2Jhcl9ub3RjaC5mb2N1c2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzMTMxMztcbiAgbWluLWhlaWdodDogNDBweDtcbiAgYm9yZGVyLXJhZGl1czogMjhweDtcbiAgcGFkZGluZzogMnB4O1xuICBvcGFjaXR5OiAxO1xufVxuXG4uc3lzdGVtX3RyYXlfYmFyX25vdGNoX2VudHJ5IHtcbiAgdHJhbnNpdGlvbjogbWluLXdpZHRoIDM1MG1zIGN1YmljLWJlemllcigwLjQyLCAxLjY3LCAwLjIxLCAwLjkpLCBtaW4taGVpZ2h0IDM1MG1zIGN1YmljLWJlemllcigwLjQyLCAxLjY3LCAwLjIxLCAwLjkpLCBwYWRkaW5nIDM1MG1zIGN1YmljLWJlemllcigwLjQyLCAxLjY3LCAwLjIxLCAwLjkpO1xuICBwYWRkaW5nOiAwcHggNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICM5YWQ2ODA7XG4gIG9wYWNpdHk6IDA7XG59XG4uc3lzdGVtX3RyYXlfYmFyX25vdGNoLmZvY3VzZWQgLnN5c3RlbV90cmF5X2Jhcl9ub3RjaF9lbnRyeSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5zeXN0ZW1fdHJheV9iYXJfbm90Y2hfY29udGVudCB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCAzNTBtcyBjdWJpYy1iZXppZXIoMC40MiwgMS42NywgMC4yMSwgMC45KSwgbWluLWhlaWdodCAzNTBtcyBjdWJpYy1iZXppZXIoMC40MiwgMS42NywgMC4yMSwgMC45KSwgcGFkZGluZyAzNTBtcyBjdWJpYy1iZXppZXIoMC40MiwgMS42NywgMC4yMSwgMC45KTtcbn1cblxuLm5vdGlmaWNhdGlvbl9iYXIge1xuICBtaW4taGVpZ2h0OiAzNnB4O1xuICBtaW4td2lkdGg6IDM2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMzEzMTM7XG4gIGNvbG9yOiAjOWFkNjgwO1xuICB0cmFuc2l0aW9uOiBtaW4td2lkdGggNjUwbXMgY3ViaWMtYmV6aWVyKDAuMzksIDEuMjksIDAuMzUsIDAuOTgpLCBtaW4taGVpZ2h0IDY1MG1zIGN1YmljLWJlemllcigwLjM5LCAxLjI5LCAwLjM1LCAwLjk4KSwgcGFkZGluZyA2NTBtcyBjdWJpYy1iZXppZXIoMC4zOSwgMS4yOSwgMC4zNSwgMC45OCk7XG59XG4ubm90aWZpY2F0aW9uX2Jhci5oYXNfbmV3X25vdGlmaWNhdGlvbiB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCA2NTBtcyBjdWJpYy1iZXppZXIoMC4zOSwgMS4yOSwgMC4zNSwgMC45OCksIG1pbi1oZWlnaHQgNjUwbXMgY3ViaWMtYmV6aWVyKDAuMzksIDEuMjksIDAuMzUsIDAuOTgpLCBwYWRkaW5nIDY1MG1zIGN1YmljLWJlemllcigwLjM5LCAxLjI5LCAwLjM1LCAwLjk4KTtcbiAgbWluLXdpZHRoOiAyMDBweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzMDBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCBjb2xvciAzMDBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCBtaW4taGVpZ2h0IDMwMG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIG1pbi13aWR0aCAzMDBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTBjZmQwO1xuICBjb2xvcjogIzAwMzczODtcbn1cblxuLm5ld19ub3RpZmljYXRpb25fY2FyZF9wcmV2aWV3IGljb24ge1xuICBmb250LXNpemU6IDM2cHg7XG59XG5cbi5ub19ub3RpZmljYXRpb24ge1xuICBjb2xvcjogIzI3MzQyMTtcbn1cbi5ub19ub3RpZmljYXRpb24gaWNvbiB7XG4gIGZvbnQtc2l6ZTogMzJweDtcbn1cblxuLmJhdHRlcnlfbGV2ZWxfY2lyY3VsYXJfcHJvZ3Jlc3Mge1xuICBtaW4taGVpZ2h0OiAxNnB4O1xufVxuLmJhdHRlcnlfbGV2ZWxfY2lyY3VsYXJfcHJvZ3Jlc3MgaWNvbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5iYXR0ZXJ5X2xldmVsX2NpcmN1bGFyX3Byb2dyZXNzLmxvdy1iYXR0ZXJ5IHtcbiAgY29sb3I6ICNmZmI0YWI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig0Mi42LCAzNS4xLCAzNC4yKTtcbn1cblxuLnN5c3RlbV9kZXRhaWxzX2NvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzMTMxMztcbiAgYm9yZGVyLXJhZGl1czogMHB4IDBweCAwcHggMTZweDtcbn1cblxuLmJsdWV0b290aF9zZXR0aW5nc19tZW51X2NvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5cbi5ibHVldG9vdGhfc2V0dGluZ3NfbWVudSB7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDRiMzY7XG4gIG1pbi13aWR0aDogMTAwcHg7XG4gIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uYmx1ZXRvb3RoX2RldmljZV9iYXR0ZXJ5X2xldmVsIHtcbiAgbWluLXdpZHRoOiA0OHB4O1xuICBtaW4taGVpZ2h0OiA0OHB4O1xuICBjb2xvcjogI2Q4ZTdjYjtcbn1cbi5ibHVldG9vdGhfZGV2aWNlX2JhdHRlcnlfbGV2ZWwgY2lyY3VsYXJwcm9ncmVzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiY2NiYjA7XG4gIGNvbG9yOiAjZDhlN2NiO1xufVxuLmJsdWV0b290aF9kZXZpY2VfYmF0dGVyeV9sZXZlbCBpY29uIHtcbiAgcGFkZGluZzogMTBweDtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5vdXRwdXRfZGV2aWNlc19zY3JvbGxhYmxlIHtcbiAgbWluLXdpZHRoOiAzMDBweDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgYm9yZGVyOiAwcHg7XG59XG5cbi5vdXRwdXRfZGV2aWNlX2J1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5YWQ2ODA7XG4gIGNvbG9yOiAjMGMzOTAwO1xuICBwYWRkaW5nOiA4cHg7XG59XG4ub3V0cHV0X2RldmljZV9idXR0b24uc2VsZWN0ZWQge1xuICBib3JkZXItcmFkaXVzOiAyOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTBjZmQwO1xuICBjb2xvcjogIzAwMzczODtcbn1cblxuLmh5cHJub3RjaF9iYXJfc2lkZSB7XG4gIHRyYW5zaXRpb246IG1pbi13aWR0aCA2NTBtcyBjdWJpYy1iZXppZXIoMC4zOSwgMS4yOSwgMC4zNSwgMC45OCksIG1pbi1oZWlnaHQgNjUwbXMgY3ViaWMtYmV6aWVyKDAuMzksIDEuMjksIDAuMzUsIDAuOTgpLCBwYWRkaW5nIDY1MG1zIGN1YmljLWJlemllcigwLjM5LCAxLjI5LCAwLjM1LCAwLjk4KTtcbn1cblxud2luZG93LkJhciB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtaW4taGVpZ2h0OiAzMHB4O1xuICBib3JkZXItcmFkaXVzOiAyNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG53aW5kb3cuQmFyID4gY2VudGVyYm94IHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMjRweCAyNHB4O1xufVxuXG4uaHlwcm5vdGNoX2Jhcl9jb250YWluZXJfYmFja2dyb3VuZCB7XG4gIG1pbi1oZWlnaHQ6IDM0cHg7XG59IjsKCi8vIGFwcC50c3gKaW1wb3J0IEh5cHJsYW5kMyBmcm9tICJnaTovL0FzdGFsSHlwcmxhbmQiOwp2YXIgaHlwcmxhbmQgPSBIeXBybGFuZDMuZ2V0X2RlZmF1bHQoKTsKYXBwX2RlZmF1bHQuc3RhcnQoewogIGNzczogbWFpbl9kZWZhdWx0LAogIG1haW4oKSB7CiAgICBhcHBfZGVmYXVsdC5nZXRfbW9uaXRvcnMoKS5tYXAoKG1vbml0b3IpID0+IHsKICAgICAgQmFyQ29udGFpbmVyQmFja2dyb3VuZChtb25pdG9yKTsKICAgICAgQmFyKG1vbml0b3IpOwogICAgICBIeXBybm90Y2goeyBnZGttb25pdG9yOiBtb25pdG9yIH0pOwogICAgfSk7CiAgfQp9KTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxld29nSUNKMlpYSnphVzl1SWpvZ015d0tJQ0FpYzI5MWNtTmxjeUk2SUZzaUxpNHZMaTR2TGk0dkxpNHZibWw0TDNOMGIzSmxMemhqYkRVNGFYQXlibUZ6WnpaeVpIbHFOVGxqZDJjeVpqQnhZbWw0Y3pJNExXRnpkR0ZzTFdkcWN5OXphR0Z5WlM5aGMzUmhiQzluYW5NdlozUnJNeTlwYm1SbGVDNTBjeUlzSUNJdUxpOHVMaTh1TGk4dUxpOXVhWGd2YzNSdmNtVXZPR05zTlRocGNESnVZWE5uTm5Ka2VXbzFPV04zWnpKbU1IRmlhWGh6TWpndFlYTjBZV3d0WjJwekwzTm9ZWEpsTDJGemRHRnNMMmRxY3k5MllYSnBZV0pzWlM1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk5dWFYZ3ZjM1J2Y21Vdk9HTnNOVGhwY0RKdVlYTm5ObkprZVdvMU9XTjNaekptTUhGaWFYaHpNamd0WVhOMFlXd3RaMnB6TDNOb1lYSmxMMkZ6ZEdGc0wyZHFjeTlpYVc1a2FXNW5MblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMMjVwZUM5emRHOXlaUzg0WTJ3MU9HbHdNbTVoYzJjMmNtUjVhalU1WTNkbk1tWXdjV0pwZUhNeU9DMWhjM1JoYkMxbmFuTXZjMmhoY21VdllYTjBZV3d2WjJwekwzUnBiV1V1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2Ym1sNEwzTjBiM0psTHpoamJEVTRhWEF5Ym1Gelp6WnlaSGxxTlRsamQyY3laakJ4WW1sNGN6STRMV0Z6ZEdGc0xXZHFjeTl6YUdGeVpTOWhjM1JoYkM5bmFuTXZjSEp2WTJWemN5NTBjeUlzSUNJdUxpOHVMaTh1TGk4dUxpOXVhWGd2YzNSdmNtVXZPR05zTlRocGNESnVZWE5uTm5Ka2VXbzFPV04zWnpKbU1IRmlhWGh6TWpndFlYTjBZV3d0WjJwekwzTm9ZWEpsTDJGemRHRnNMMmRxY3k5ZllYTjBZV3d1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2Ym1sNEwzTjBiM0psTHpoamJEVTRhWEF5Ym1Gelp6WnlaSGxxTlRsamQyY3laakJ4WW1sNGN6STRMV0Z6ZEdGc0xXZHFjeTl6YUdGeVpTOWhjM1JoYkM5bmFuTXZaM1JyTXk5aGMzUmhiR2xtZVM1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk5dWFYZ3ZjM1J2Y21Vdk9HTnNOVGhwY0RKdVlYTm5ObkprZVdvMU9XTjNaekptTUhGaWFYaHpNamd0WVhOMFlXd3RaMnB6TDNOb1lYSmxMMkZ6ZEdGc0wyZHFjeTluZEdzekwyRndjQzUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTl1YVhndmMzUnZjbVV2T0dOc05UaHBjREp1WVhObk5uSmtlV28xT1dOM1p6Sm1NSEZpYVhoek1qZ3RZWE4wWVd3dFoycHpMM05vWVhKbEwyRnpkR0ZzTDJkcWN5OXZkbVZ5Y21sa1pYTXVkSE1pTENBaUxpNHZMaTR2TGk0dkxpNHZibWw0TDNOMGIzSmxMemhqYkRVNGFYQXlibUZ6WnpaeVpIbHFOVGxqZDJjeVpqQnhZbWw0Y3pJNExXRnpkR0ZzTFdkcWN5OXphR0Z5WlM5aGMzUmhiQzluYW5NdlgyRndjQzUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTl1YVhndmMzUnZjbVV2T0dOc05UaHBjREp1WVhObk5uSmtlV28xT1dOM1p6Sm1NSEZpYVhoek1qZ3RZWE4wWVd3dFoycHpMM05vWVhKbEwyRnpkR0ZzTDJkcWN5OW5kR3N6TDNkcFpHZGxkQzUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTl1YVhndmMzUnZjbVV2T0dOc05UaHBjREp1WVhObk5uSmtlV28xT1dOM1p6Sm1NSEZpYVhoek1qZ3RZWE4wWVd3dFoycHpMM05vWVhKbEwyRnpkR0ZzTDJkcWN5OXBibVJsZUM1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk5dWFYZ3ZjM1J2Y21Vdk9HTnNOVGhwY0RKdVlYTm5ObkprZVdvMU9XTjNaekptTUhGaWFYaHpNamd0WVhOMFlXd3RaMnB6TDNOb1lYSmxMMkZ6ZEdGc0wyZHFjeTltYVd4bExuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwyNXBlQzl6ZEc5eVpTODRZMncxT0dsd01tNWhjMmMyY21SNWFqVTVZM2RuTW1Zd2NXSnBlSE15T0MxaGMzUmhiQzFuYW5NdmMyaGhjbVV2WVhOMFlXd3ZaMnB6TDJkdlltcGxZM1F1ZEhNaUxDQWljM0pqTDNScGJXVXZWR2x0WlZObGNuWnBZMlV1ZEhNaUxDQWljM0pqTDNOdmRXNWtMMWRwY21WUWJIVnRZbVZ5Vm1sbGQwMXZaR1ZzTG5Seklpd2dJbk55WXk5c2IyZG5aWEl2VEc5bloyVnlMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMMjVwZUM5emRHOXlaUzg0WTJ3MU9HbHdNbTVoYzJjMmNtUjVhalU1WTNkbk1tWXdjV0pwZUhNeU9DMWhjM1JoYkMxbmFuTXZjMmhoY21VdllYTjBZV3d2WjJwekwyZDBhek12YW5ONExYSjFiblJwYldVdWRITWlMQ0FpYzNKakwzWnBaWGN2Ym05MFkyZ3ZaWGh3WVc1a1pXUXZVMlYwZEdsdVozTk5aVzUxTG5SemVDSXNJQ0p6Y21NdmRtbGxkeTl1YjNSamFDOWxlSEJoYm1SbFpDOUZlSEJoYm1SbFpFNXZkR05vTG5SemVDSXNJQ0p6Y21NdmJXVmthV0V2VFdWa2FXRldhV1YzVFc5a1pXd3VkSE1pTENBaWMzSmpMM1pwWlhjdmJtOTBZMmd2Ym05eWJXRnNMMDV2Y20xaGJFNXZkR05vTG5SemVDSXNJQ0p6Y21NdmJtOTBZMmd2YzNSaGRHVXZUbTkwWTJoVGRHRjBaVlpwWlhkTmIyUmxiQzUwY3lJc0lDSnpjbU12YzI5MWJtUXZjM0JsWVd0bGNsOTJiMngxYldVdlUyOTFibVJOZFhSbFFuVjBkRzl1VUhKdmNITXVkSE40SWl3Z0luTnlZeTl6YjNWdVpDOXpjR1ZoYTJWeVgzWnZiSFZ0WlM5VGIzVnVaRk5zYVdSbGNpNTBjM2dpTENBaWMzSmpMMnhwWWk5cFkyOXVjeTl1WlhKa1ptOXVkSE11ZEhNaUxDQWljM0pqTDNOdmRXNWtMMkpzZFdWMGIyOTBhQzlDYkhWbGRHOXZkR2hXYVdWM1RXOWtaV3d1ZEhNaUxDQWljM0pqTDNOdmRXNWtMMkpzZFdWMGIyOTBhQzlDYkhWbGRHOXZkR2hUWlhSMGFXNW5jMDFsYm5VdWRITjRJaXdnSW5OeVl5OXpiM1Z1WkM5aWJIVmxkRzl2ZEdndlQzVjBjSFYwUkdWMmFXTmxVMlZzWldOMGIzSXVkSE40SWl3Z0luTnlZeTl6YjNWdVpDOVRiM1Z1WkZObGRIUnBibWR6VG05MFkyZ3VkSE40SWl3Z0luTnlZeTkyYVdWM0wwaDVjSEp1YjNSamFDNTBjM2dpTENBaWMzSmpMMmg1Y0hKc1lXNWtMM2R2Y210emNHRmpaWE12U0hsd2NteGhibVJYYjNKcmMzQmhZMlZ6Vm1sbGQwMXZaR1ZzTG5Seklpd2dJbk55WXk5b2VYQnliR0Z1WkM5M2IzSnJjM0JoWTJWekwwaDVjSEpzWVc1a1YyOXlhM053WVdObFZtbGxkMDF2WkdWc0xuUnpJaXdnSW5OeVl5OW9lWEJ5YkdGdVpDOTNiM0pyYzNCaFkyVnpMMWR2Y210emNHRmpaWE5DWVhJdWRITjRJaXdnSW5OeVl5OTBjbUY1TDFONWMzUmxiVlJ5WVhsV2FXVjNUVzlrWld3dWRITWlMQ0FpYzNKakwyeHBZaTlsZG1WdWRITXZiVzkxYzJVdWRITWlMQ0FpYzNKakwzUnlZWGt2VkhKaGVVbDBaVzFPYjNSamFDNTBjM2dpTENBaWMzSmpMM1J5WVhrdlUzbHpkR1Z0VkhKaGVVbDBaVzFDZFhSMGIyNHVkSE40SWl3Z0luTnlZeTlzYVdJdmJXRjBaWEpwWVd3dllXNXBiV0YwYVc5dWN5NTBjeUlzSUNKemNtTXZkSEpoZVM5VGVYTjBaVzFVY21GNUxuUnplQ0lzSUNKemNtTXZjM2x6ZEdWdFgzTjBZWFJ6TDJKaGRIUmxjbmt2UW1GMGRHVnllVlpwWlhkTmIyUmxiQzUwY3lJc0lDSnpjbU12YzNsemRHVnRYM04wWVhSekwySmhkSFJsY25rdlUzbHpkR1Z0UkdWMFlXbHNjeTUwYzNnaUxDQWljM0pqTDI1dmRHbG1hV05oZEdsdmJpOU9aWGRPYjNScFptbGpZWFJwYjI1UWIzQjFjQzUwYzNnaUxDQWljM0pqTDI1dmRHbG1hV05oZEdsdmJpOU9iMDVsZDA1dmRHbG1hV05oZEdsdmJsQnZjSFZ3TG5SemVDSXNJQ0p6Y21NdmJtOTBhV1pwWTJGMGFXOXVMMDV2ZEdsbWFXTmhkR2x2YmxacFpYZE5iMlJsYkM1MGN5SXNJQ0p6Y21NdmJtOTBhV1pwWTJGMGFXOXVMMDVsZDA1dmRHbG1hV05oZEdsdmJsWnBaWGROYjJSbGJDNTBjM2dpTENBaWMzSmpMMjV2ZEdsbWFXTmhkR2x2Ymk5T2IzUnBabWxqWVhScGIyNHVkSE40SWl3Z0luTnlZeTkyYVdWM0wySmhjaTlDWVhJdWRITjRJaXdnSW5OeVl5OTJhV1YzTDJKaGNpOUNZWEpEYjI1MFlXbHVaWEpDWVdOclozSnZkVzVrTG5SemVDSXNJQ0p6WVhOek9pOW9iMjFsTDJOamNtVjBkUzlRY205cVpXTjBjeTlvZVhCeWJtOTBZMmd2YzNSNWJHVXZiV0ZwYmk1elkzTnpJaXdnSW1Gd2NDNTBjM2dpWFN3S0lDQWljMjkxY21ObGMwTnZiblJsYm5RaU9pQmJJbWx0Y0c5eWRDQkJjM1JoYkNCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkQ5MlpYSnphVzl1UFRNdU1Gd2lYRzVwYlhCdmNuUWdSM1JySUdaeWIyMGdYQ0puYVRvdkwwZDBhejkyWlhKemFXOXVQVE11TUZ3aVhHNXBiWEJ2Y25RZ1IyUnJJR1p5YjIwZ1hDSm5hVG92TDBka2F6OTJaWEp6YVc5dVBUTXVNRndpWEc1cGJYQnZjblFnWVhOMFlXeHBabmtzSUhzZ2RIbHdaU0JEYjI1emRISjFZM1JRY205d2N5d2dkSGx3WlNCQ2FXNWtZV0pzWlZCeWIzQnpJSDBnWm5KdmJTQmNJaTR2WVhOMFlXeHBabmt1YW5OY0lseHVYRzVsZUhCdmNuUWdleUJCYzNSaGJDd2dSM1JyTENCSFpHc2dmVnh1Wlhod2IzSjBJSHNnWkdWbVlYVnNkQ0JoY3lCQmNIQWdmU0JtY205dElGd2lMaTloY0hBdWFuTmNJbHh1Wlhod2IzSjBJSHNnWVhOMFlXeHBabmtzSUVOdmJuTjBjblZqZEZCeWIzQnpMQ0JDYVc1a1lXSnNaVkJ5YjNCeklIMWNibVY0Y0c5eWRDQXFJR0Z6SUZkcFpHZGxkQ0JtY205dElGd2lMaTkzYVdSblpYUXVhbk5jSWx4dVpYaHdiM0owSUhzZ2FHOXZheUI5SUdaeWIyMGdYQ0l1TGk5ZllYTjBZV3hjSWx4dUlpd2dJbWx0Y0c5eWRDQkJjM1JoYkNCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkVsUFhDSmNibWx0Y0c5eWRDQkNhVzVrYVc1bkxDQjdJSFI1Y0dVZ1EyOXVibVZqZEdGaWJHVXNJSFI1Y0dVZ1UzVmljMk55YVdKaFlteGxJSDBnWm5KdmJTQmNJaTR2WW1sdVpHbHVaeTVxYzF3aVhHNXBiWEJ2Y25RZ2V5QnBiblJsY25aaGJDQjlJR1p5YjIwZ1hDSXVMM1JwYldVdWFuTmNJbHh1YVcxd2IzSjBJSHNnWlhobFkwRnplVzVqTENCemRXSndjbTlqWlhOeklIMGdabkp2YlNCY0lpNHZjSEp2WTJWemN5NXFjMXdpWEc1Y2JtTnNZWE56SUZaaGNtbGhZbXhsVjNKaGNIQmxjanhVUGlCbGVIUmxibVJ6SUVaMWJtTjBhVzl1SUh0Y2JpQWdJQ0J3Y21sMllYUmxJSFpoY21saFlteGxJVG9nUVhOMFlXd3VWbUZ5YVdGaWJHVkNZWE5sWEc0Z0lDQWdjSEpwZG1GMFpTQmxjbkpJWVc1a2JHVnlQeUE5SUdOdmJuTnZiR1V1WlhKeWIzSmNibHh1SUNBZ0lIQnlhWFpoZEdVZ1gzWmhiSFZsT2lCVVhHNGdJQ0FnY0hKcGRtRjBaU0JmY0c5c2JEODZJRUZ6ZEdGc0xsUnBiV1ZjYmlBZ0lDQndjbWwyWVhSbElGOTNZWFJqYUQ4NklFRnpkR0ZzTGxCeWIyTmxjM05jYmx4dUlDQWdJSEJ5YVhaaGRHVWdjRzlzYkVsdWRHVnlkbUZzSUQwZ01UQXdNRnh1SUNBZ0lIQnlhWFpoZEdVZ2NHOXNiRVY0WldNL09pQnpkSEpwYm1kYlhTQjhJSE4wY21sdVoxeHVJQ0FnSUhCeWFYWmhkR1VnY0c5c2JGUnlZVzV6Wm05eWJUODZJQ2h6ZEdSdmRYUTZJSE4wY21sdVp5d2djSEpsZGpvZ1ZDa2dQVDRnVkZ4dUlDQWdJSEJ5YVhaaGRHVWdjRzlzYkVadVB6b2dLSEJ5WlhZNklGUXBJRDArSUZRZ2ZDQlFjbTl0YVhObFBGUStYRzVjYmlBZ0lDQndjbWwyWVhSbElIZGhkR05vVkhKaGJuTm1iM0p0UHpvZ0tITjBaRzkxZERvZ2MzUnlhVzVuTENCd2NtVjJPaUJVS1NBOVBpQlVYRzRnSUNBZ2NISnBkbUYwWlNCM1lYUmphRVY0WldNL09pQnpkSEpwYm1kYlhTQjhJSE4wY21sdVoxeHVYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9hVzVwZERvZ1ZDa2dlMXh1SUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BYRzRnSUNBZ0lDQWdJSFJvYVhNdVgzWmhiSFZsSUQwZ2FXNXBkRnh1SUNBZ0lDQWdJQ0IwYUdsekxuWmhjbWxoWW14bElEMGdibVYzSUVGemRHRnNMbFpoY21saFlteGxRbUZ6WlNncFhHNGdJQ0FnSUNBZ0lIUm9hWE11ZG1GeWFXRmliR1V1WTI5dWJtVmpkQ2hjSW1SeWIzQndaV1JjSWl3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emRHOXdWMkYwWTJnb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpkRzl3VUc5c2JDZ3BYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVkbUZ5YVdGaWJHVXVZMjl1Ym1WamRDaGNJbVZ5Y205eVhDSXNJQ2hmTENCbGNuSXBJRDArSUhSb2FYTXVaWEp5U0dGdVpHeGxjajh1S0dWeWNpa3BYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVUhKdmVIa29kR2hwY3l3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWVhCd2JIazZJQ2gwWVhKblpYUXNJRjhzSUdGeVozTXBJRDArSUhSaGNtZGxkQzVmWTJGc2JDaGhjbWR6V3pCZEtTeGNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQndjbWwyWVhSbElGOWpZV3hzUEZJZ1BTQlVQaWgwY21GdWMyWnZjbTAvT2lBb2RtRnNkV1U2SUZRcElEMCtJRklwT2lCQ2FXNWthVzVuUEZJK0lIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1lpQTlJRUpwYm1ScGJtY3VZbWx1WkNoMGFHbHpLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEpoYm5ObWIzSnRJRDhnWWk1aGN5aDBjbUZ1YzJadmNtMHBJRG9nWWlCaGN5QjFibXR1YjNkdUlHRnpJRUpwYm1ScGJtYzhVajVjYmlBZ0lDQjlYRzVjYmlBZ0lDQjBiMU4wY21sdVp5Z3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRk4wY21sdVp5aGdWbUZ5YVdGaWJHVThKSHQwYUdsekxtZGxkQ2dwZlQ1Z0tWeHVJQ0FnSUgxY2JseHVJQ0FnSUdkbGRDZ3BPaUJVSUhzZ2NtVjBkWEp1SUhSb2FYTXVYM1poYkhWbElIMWNiaUFnSUNCelpYUW9kbUZzZFdVNklGUXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIWmhiSFZsSUNFOVBTQjBhR2x6TGw5MllXeDFaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmRtRnNkV1VnUFNCMllXeDFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyWVhKcFlXSnNaUzVsYldsMEtGd2lZMmhoYm1kbFpGd2lLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1JoY25SUWIyeHNLQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmNHOXNiQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymx4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuQnZiR3hHYmlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZjRzlzYkNBOUlHbHVkR1Z5ZG1Gc0tIUm9hWE11Y0c5c2JFbHVkR1Z5ZG1Gc0xDQW9LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZGlBOUlIUm9hWE11Y0c5c2JFWnVJU2gwYUdsekxtZGxkQ2dwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDJJR2x1YzNSaGJtTmxiMllnVUhKdmJXbHpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJMblJvWlc0b2RpQTlQaUIwYUdsekxuTmxkQ2gyS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1allYUmphQ2hsY25JZ1BUNGdkR2hwY3k1MllYSnBZV0pzWlM1bGJXbDBLRndpWlhKeWIzSmNJaXdnWlhKeUtTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTmxkQ2gyS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2RHaHBjeTV3YjJ4c1JYaGxZeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmNHOXNiQ0E5SUdsdWRHVnlkbUZzS0hSb2FYTXVjRzlzYkVsdWRHVnlkbUZzTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlhobFkwRnplVzVqS0hSb2FYTXVjRzlzYkVWNFpXTWhLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdWRHaGxiaWgySUQwK0lIUm9hWE11YzJWMEtIUm9hWE11Y0c5c2JGUnlZVzV6Wm05eWJTRW9kaXdnZEdocGN5NW5aWFFvS1NrcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1WTJGMFkyZ29aWEp5SUQwK0lIUm9hWE11ZG1GeWFXRmliR1V1WlcxcGRDaGNJbVZ5Y205eVhDSXNJR1Z5Y2lrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYzNSaGNuUlhZWFJqYUNncElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVYM2RoZEdOb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NWZkMkYwWTJnZ1BTQnpkV0p3Y205alpYTnpLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnRaRG9nZEdocGN5NTNZWFJqYUVWNFpXTWhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBPaUJ2ZFhRZ1BUNGdkR2hwY3k1elpYUW9kR2hwY3k1M1lYUmphRlJ5WVc1elptOXliU0VvYjNWMExDQjBhR2x6TG1kbGRDZ3BLU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmxjbkk2SUdWeWNpQTlQaUIwYUdsekxuWmhjbWxoWW14bExtVnRhWFFvWENKbGNuSnZjbHdpTENCbGNuSXBMRnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJSDFjYmx4dUlDQWdJSE4wYjNCUWIyeHNLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDl3YjJ4c1B5NWpZVzVqWld3b0tWeHVJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RHaHBjeTVmY0c5c2JGeHVJQ0FnSUgxY2JseHVJQ0FnSUhOMGIzQlhZWFJqYUNncElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmQyRjBZMmcvTG10cGJHd29LVnh1SUNBZ0lDQWdJQ0JrWld4bGRHVWdkR2hwY3k1ZmQyRjBZMmhjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBjMUJ2Ykd4cGJtY29LU0I3SUhKbGRIVnliaUFoSVhSb2FYTXVYM0J2Ykd3Z2ZWeHVJQ0FnSUdselYyRjBZMmhwYm1jb0tTQjdJSEpsZEhWeWJpQWhJWFJvYVhNdVgzZGhkR05vSUgxY2JseHVJQ0FnSUdSeWIzQW9LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkbUZ5YVdGaWJHVXVaVzFwZENoY0ltUnliM0J3WldSY0lpbGNiaUFnSUNCOVhHNWNiaUFnSUNCdmJrUnliM0J3WldRb1kyRnNiR0poWTJzNklDZ3BJRDArSUhadmFXUXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NTJZWEpwWVdKc1pTNWpiMjV1WldOMEtGd2laSEp2Y0hCbFpGd2lMQ0JqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNZ1lYTWdkVzVyYm05M2JpQmhjeUJXWVhKcFlXSnNaVHhVUGx4dUlDQWdJSDFjYmx4dUlDQWdJRzl1UlhKeWIzSW9ZMkZzYkdKaFkyczZJQ2hsY25JNklITjBjbWx1WnlrZ1BUNGdkbTlwWkNrZ2UxeHVJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RHaHBjeTVsY25KSVlXNWtiR1Z5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkbUZ5YVdGaWJHVXVZMjl1Ym1WamRDaGNJbVZ5Y205eVhDSXNJQ2hmTENCbGNuSXBJRDArSUdOaGJHeGlZV05yS0dWeWNpa3BYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6SUdGeklIVnVhMjV2ZDI0Z1lYTWdWbUZ5YVdGaWJHVThWRDVjYmlBZ0lDQjlYRzVjYmlBZ0lDQnpkV0p6WTNKcFltVW9ZMkZzYkdKaFkyczZJQ2gyWVd4MVpUb2dWQ2tnUFQ0Z2RtOXBaQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwWkNBOUlIUm9hWE11ZG1GeWFXRmliR1V1WTI5dWJtVmpkQ2hjSW1Ob1lXNW5aV1JjSWl3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZzYkdKaFkyc29kR2hwY3k1blpYUW9LU2xjYmlBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJSFJvYVhNdWRtRnlhV0ZpYkdVdVpHbHpZMjl1Ym1WamRDaHBaQ2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQndiMnhzS0Z4dUlDQWdJQ0FnSUNCcGJuUmxjblpoYkRvZ2JuVnRZbVZ5TEZ4dUlDQWdJQ0FnSUNCbGVHVmpPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU3hjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0UHpvZ0tITjBaRzkxZERvZ2MzUnlhVzVuTENCd2NtVjJPaUJVS1NBOVBpQlVYRzRnSUNBZ0tUb2dWbUZ5YVdGaWJHVThWRDVjYmx4dUlDQWdJSEJ2Ykd3b1hHNGdJQ0FnSUNBZ0lHbHVkR1Z5ZG1Gc09pQnVkVzFpWlhJc1hHNGdJQ0FnSUNBZ0lHTmhiR3hpWVdOck9pQW9jSEpsZGpvZ1ZDa2dQVDRnVkNCOElGQnliMjFwYzJVOFZENWNiaUFnSUNBcE9pQldZWEpwWVdKc1pUeFVQbHh1WEc0Z0lDQWdjRzlzYkNoY2JpQWdJQ0FnSUNBZ2FXNTBaWEoyWVd3NklHNTFiV0psY2l4Y2JpQWdJQ0FnSUNBZ1pYaGxZem9nYzNSeWFXNW5JSHdnYzNSeWFXNW5XMTBnZkNBb0tIQnlaWFk2SUZRcElEMCtJRlFnZkNCUWNtOXRhWE5sUEZRK0tTeGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUFvYzNSa2IzVjBPaUJ6ZEhKcGJtY3NJSEJ5WlhZNklGUXBJRDArSUZRZ1BTQnZkWFFnUFQ0Z2IzVjBJR0Z6SUZRc1hHNGdJQ0FnS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YzNSdmNGQnZiR3dvS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ2Ykd4SmJuUmxjblpoYkNBOUlHbHVkR1Z5ZG1Gc1hHNGdJQ0FnSUNBZ0lIUm9hWE11Y0c5c2JGUnlZVzV6Wm05eWJTQTlJSFJ5WVc1elptOXliVnh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdWNFpXTWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3YjJ4c1JtNGdQU0JsZUdWalhHNGdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdkR2hwY3k1d2IyeHNSWGhsWTF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2IyeHNSWGhsWXlBOUlHVjRaV05jYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCMGFHbHpMbkJ2Ykd4R2JseHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMzUmhjblJRYjJ4c0tDbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE1nWVhNZ2RXNXJibTkzYmlCaGN5QldZWEpwWVdKc1pUeFVQbHh1SUNBZ0lIMWNibHh1SUNBZ0lIZGhkR05vS0Z4dUlDQWdJQ0FnSUNCbGVHVmpPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU3hjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lBb2MzUmtiM1YwT2lCemRISnBibWNzSUhCeVpYWTZJRlFwSUQwK0lGUWdQU0J2ZFhRZ1BUNGdiM1YwSUdGeklGUXNYRzRnSUNBZ0tTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWMzUnZjRmRoZEdOb0tDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1M1lYUmphRVY0WldNZ1BTQmxlR1ZqWEc0Z0lDQWdJQ0FnSUhSb2FYTXVkMkYwWTJoVWNtRnVjMlp2Y20wZ1BTQjBjbUZ1YzJadmNtMWNiaUFnSUNBZ0lDQWdkR2hwY3k1emRHRnlkRmRoZEdOb0tDbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE1nWVhNZ2RXNXJibTkzYmlCaGN5QldZWEpwWVdKc1pUeFVQbHh1SUNBZ0lIMWNibHh1SUNBZ0lHOWljMlZ5ZG1Vb1hHNGdJQ0FnSUNBZ0lHOWlhbk02SUVGeWNtRjVQRnR2WW1vNklFTnZibTVsWTNSaFlteGxMQ0J6YVdkdVlXdzZJSE4wY21sdVoxMCtMRnh1SUNBZ0lDQWdJQ0JqWVd4c1ltRmphem9nS0M0dUxtRnlaM002SUdGdWVWdGRLU0E5UGlCVUxGeHVJQ0FnSUNrNklGWmhjbWxoWW14bFBGUStYRzVjYmlBZ0lDQnZZbk5sY25abEtGeHVJQ0FnSUNBZ0lDQnZZbW82SUVOdmJtNWxZM1JoWW14bExGeHVJQ0FnSUNBZ0lDQnphV2R1WVd3NklITjBjbWx1Wnl4Y2JpQWdJQ0FnSUNBZ1kyRnNiR0poWTJzNklDZ3VMaTVoY21kek9pQmhibmxiWFNrZ1BUNGdWQ3hjYmlBZ0lDQXBPaUJXWVhKcFlXSnNaVHhVUGx4dVhHNGdJQ0FnYjJKelpYSjJaU2hjYmlBZ0lDQWdJQ0FnYjJKcWN6b2dRMjl1Ym1WamRHRmliR1VnZkNCQmNuSmhlVHhiYjJKcU9pQkRiMjV1WldOMFlXSnNaU3dnYzJsbmJtRnNPaUJ6ZEhKcGJtZGRQaXhjYmlBZ0lDQWdJQ0FnYzJsblQzSkdiam9nYzNSeWFXNW5JSHdnS0NodlltbzZJRU52Ym01bFkzUmhZbXhsTENBdUxpNWhjbWR6T2lCaGJubGJYU2tnUFQ0Z1ZDa3NYRzRnSUNBZ0lDQWdJR05oYkd4aVlXTnJQem9nS0c5aWFqb2dRMjl1Ym1WamRHRmliR1VzSUM0dUxtRnlaM002SUdGdWVWdGRLU0E5UGlCVUxGeHVJQ0FnSUNrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCbUlEMGdkSGx3Wlc5bUlITnBaMDl5Um00Z1BUMDlJRndpWm5WdVkzUnBiMjVjSWlBL0lITnBaMDl5Um00Z09pQmpZV3hzWW1GamF5QS9QeUFvS0NrZ1BUNGdkR2hwY3k1blpYUW9LU2xjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjMlYwSUQwZ0tHOWlham9nUTI5dWJtVmpkR0ZpYkdVc0lDNHVMbUZ5WjNNNklHRnVlVnRkS1NBOVBpQjBhR2x6TG5ObGRDaG1LRzlpYWl3Z0xpNHVZWEpuY3lrcFhHNWNiaUFnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29iMkpxY3lrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ2IySnFJRzltSUc5aWFuTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmJieXdnYzEwZ1BTQnZZbXBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnBaQ0E5SUc4dVkyOXVibVZqZENoekxDQnpaWFFwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXZia1J5YjNCd1pXUW9LQ2tnUFQ0Z2J5NWthWE5qYjI1dVpXTjBLR2xrS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdjMmxuVDNKR2JpQTlQVDBnWENKemRISnBibWRjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdsa0lEMGdiMkpxY3k1amIyNXVaV04wS0hOcFowOXlSbTRzSUhObGRDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG05dVJISnZjSEJsWkNnb0tTQTlQaUJ2WW1wekxtUnBjMk52Ym01bFkzUW9hV1FwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTWdZWE1nZFc1cmJtOTNiaUJoY3lCV1lYSnBZV0pzWlR4VVBseHVJQ0FnSUgxY2JseHVJQ0FnSUhOMFlYUnBZeUJrWlhKcGRtVThYRzRnSUNBZ0lDQWdJR052Ym5OMElFUmxjSE1nWlhoMFpXNWtjeUJCY25KaGVUeFRkV0p6WTNKcFltRmliR1U4WVc1NVBqNHNYRzRnSUNBZ0lDQWdJRUZ5WjNNZ1pYaDBaVzVrY3lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JiU3lCcGJpQnJaWGx2WmlCRVpYQnpYVG9nUkdWd2MxdExYU0JsZUhSbGJtUnpJRk4xWW5OamNtbGlZV0pzWlR4cGJtWmxjaUJVUGlBL0lGUWdPaUJ1WlhabGNseHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0JXSUQwZ1FYSm5jeXhjYmlBZ0lDQStLR1JsY0hNNklFUmxjSE1zSUdadU9pQW9MaTR1WVhKbmN6b2dRWEpuY3lrZ1BUNGdWaUE5SUNndUxpNWhjbWR6S1NBOVBpQmhjbWR6SUdGeklIVnVhMjV2ZDI0Z1lYTWdWaWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0IxY0dSaGRHVWdQU0FvS1NBOVBpQm1iaWd1TGk1a1pYQnpMbTFoY0Noa0lEMCtJR1F1WjJWMEtDa3BJR0Z6SUVGeVozTXBYRzRnSUNBZ0lDQWdJR052Ym5OMElHUmxjbWwyWldRZ1BTQnVaWGNnVm1GeWFXRmliR1VvZFhCa1lYUmxLQ2twWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSFZ1YzNWaWN5QTlJR1JsY0hNdWJXRndLR1JsY0NBOVBpQmtaWEF1YzNWaWMyTnlhV0psS0NncElEMCtJR1JsY21sMlpXUXVjMlYwS0hWd1pHRjBaU2dwS1NrcFhHNGdJQ0FnSUNBZ0lHUmxjbWwyWldRdWIyNUVjbTl3Y0dWa0tDZ3BJRDArSUhWdWMzVmljeTV0WVhBb2RXNXpkV0lnUFQ0Z2RXNXpkV0lvS1NrcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1pYSnBkbVZrWEc0Z0lDQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ2FXNTBaWEptWVdObElGWmhjbWxoWW14bFBGUStJR1Y0ZEdWdVpITWdUMjFwZER4V1lYSnBZV0pzWlZkeVlYQndaWEk4VkQ0c0lGd2lZbWx1WkZ3aVBpQjdYRzRnSUNBZ1BGSStLSFJ5WVc1elptOXliVG9nS0haaGJIVmxPaUJVS1NBOVBpQlNLVG9nUW1sdVpHbHVaenhTUGx4dUlDQWdJQ2dwT2lCQ2FXNWthVzVuUEZRK1hHNTlYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQldZWEpwWVdKc1pTQTlJRzVsZHlCUWNtOTRlU2hXWVhKcFlXSnNaVmR5WVhCd1pYSWdZWE1nWVc1NUxDQjdYRzRnSUNBZ1lYQndiSGs2SUNoZmRDd2dYMkVzSUdGeVozTXBJRDArSUc1bGR5QldZWEpwWVdKc1pWZHlZWEJ3WlhJb1lYSm5jMXN3WFNrc1hHNTlLU0JoY3lCN1hHNGdJQ0FnWkdWeWFYWmxPaUIwZVhCbGIyWWdWbUZ5YVdGaWJHVlhjbUZ3Y0dWeVcxd2laR1Z5YVhabFhDSmRYRzRnSUNBZ1BGUStLR2x1YVhRNklGUXBPaUJXWVhKcFlXSnNaVHhVUGx4dUlDQWdJRzVsZHp4VVBpaHBibWwwT2lCVUtUb2dWbUZ5YVdGaWJHVThWRDVjYm4xY2JseHVaWGh3YjNKMElHTnZibk4wSUhzZ1pHVnlhWFpsSUgwZ1BTQldZWEpwWVdKc1pWeHVaWGh3YjNKMElHUmxabUYxYkhRZ1ZtRnlhV0ZpYkdWY2JpSXNJQ0psZUhCdmNuUWdZMjl1YzNRZ2MyNWhhMlZwWm5rZ1BTQW9jM1J5T2lCemRISnBibWNwSUQwK0lITjBjbHh1SUNBZ0lDNXlaWEJzWVdObEtDOG9XMkV0ZWwwcEtGdEJMVnBkS1M5bkxDQmNJaVF4WHlReVhDSXBYRzRnSUNBZ0xuSmxjR3hoWTJWQmJHd29YQ0l0WENJc0lGd2lYMXdpS1Z4dUlDQWdJQzUwYjB4dmQyVnlRMkZ6WlNncFhHNWNibVY0Y0c5eWRDQmpiMjV6ZENCclpXSmhZbWxtZVNBOUlDaHpkSEk2SUhOMGNtbHVaeWtnUFQ0Z2MzUnlYRzRnSUNBZ0xuSmxjR3hoWTJVb0x5aGJZUzE2WFNrb1cwRXRXbDBwTDJjc0lGd2lKREV0SkRKY0lpbGNiaUFnSUNBdWNtVndiR0ZqWlVGc2JDaGNJbDljSWl3Z1hDSXRYQ0lwWEc0Z0lDQWdMblJ2VEc5M1pYSkRZWE5sS0NsY2JseHVaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQlRkV0p6WTNKcFltRmliR1U4VkNBOUlIVnVhMjV2ZDI0K0lIdGNiaUFnSUNCemRXSnpZM0pwWW1Vb1kyRnNiR0poWTJzNklDaDJZV3gxWlRvZ1ZDa2dQVDRnZG05cFpDazZJQ2dwSUQwK0lIWnZhV1JjYmlBZ0lDQm5aWFFvS1RvZ1ZGeHVJQ0FnSUZ0clpYazZJSE4wY21sdVoxMDZJR0Z1ZVZ4dWZWeHVYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRU52Ym01bFkzUmhZbXhsSUh0Y2JpQWdJQ0JqYjI1dVpXTjBLSE5wWjI1aGJEb2djM1J5YVc1bkxDQmpZV3hzWW1GamF6b2dLQzR1TG1GeVozTTZJR0Z1ZVZ0ZEtTQTlQaUIxYm10dWIzZHVLVG9nYm5WdFltVnlYRzRnSUNBZ1pHbHpZMjl1Ym1WamRDaHBaRG9nYm5WdFltVnlLVG9nZG05cFpGeHVJQ0FnSUZ0clpYazZJSE4wY21sdVoxMDZJR0Z1ZVZ4dWZWeHVYRzVsZUhCdmNuUWdZMnhoYzNNZ1FtbHVaR2x1Wnp4V1lXeDFaVDRnZTF4dUlDQWdJSEJ5YVhaaGRHVWdkSEpoYm5ObWIzSnRSbTRnUFNBb2Rqb2dZVzU1S1NBOVBpQjJYRzVjYmlBZ0lDQWpaVzFwZEhSbGNqb2dVM1ZpYzJOeWFXSmhZbXhsUEZaaGJIVmxQaUI4SUVOdmJtNWxZM1JoWW14bFhHNGdJQ0FnSTNCeWIzQS9PaUJ6ZEhKcGJtZGNibHh1SUNBZ0lITjBZWFJwWXlCaWFXNWtQRnh1SUNBZ0lDQWdJQ0JVSUdWNGRHVnVaSE1nUTI5dWJtVmpkR0ZpYkdVc1hHNGdJQ0FnSUNBZ0lGQWdaWGgwWlc1a2N5QnJaWGx2WmlCVUxGeHVJQ0FnSUQ0b2IySnFaV04wT2lCVUxDQndjbTl3WlhKMGVUb2dVQ2s2SUVKcGJtUnBibWM4VkZ0UVhUNWNibHh1SUNBZ0lITjBZWFJwWXlCaWFXNWtQRlErS0c5aWFtVmpkRG9nVTNWaWMyTnlhV0poWW14bFBGUStLVG9nUW1sdVpHbHVaenhVUGx4dVhHNGdJQ0FnYzNSaGRHbGpJR0pwYm1Rb1pXMXBkSFJsY2pvZ1EyOXVibVZqZEdGaWJHVWdmQ0JUZFdKelkzSnBZbUZpYkdVc0lIQnliM0EvT2lCemRISnBibWNwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkNhVzVrYVc1bktHVnRhWFIwWlhJc0lIQnliM0FwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSEpwZG1GMFpTQmpiMjV6ZEhKMVkzUnZjaWhsYldsMGRHVnlPaUJEYjI1dVpXTjBZV0pzWlNCOElGTjFZbk5qY21saVlXSnNaVHhXWVd4MVpUNHNJSEJ5YjNBL09pQnpkSEpwYm1jcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k0alpXMXBkSFJsY2lBOUlHVnRhWFIwWlhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTRqY0hKdmNDQTlJSEJ5YjNBZ0ppWWdhMlZpWVdKcFpua29jSEp2Y0NsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYjFOMGNtbHVaeWdwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdCQ2FXNWthVzVuUENSN2RHaHBjeTRqWlcxcGRIUmxjbjBrZTNSb2FYTXVJM0J5YjNBZ1B5QmdMQ0JjSWlSN2RHaHBjeTRqY0hKdmNIMWNJbUFnT2lCY0lsd2lmVDVnWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZWE04VkQ0b1ptNDZJQ2gyT2lCV1lXeDFaU2tnUFQ0Z1ZDazZJRUpwYm1ScGJtYzhWRDRnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JpYVc1a0lEMGdibVYzSUVKcGJtUnBibWNvZEdocGN5NGpaVzFwZEhSbGNpd2dkR2hwY3k0amNISnZjQ2xjYmlBZ0lDQWdJQ0FnWW1sdVpDNTBjbUZ1YzJadmNtMUdiaUE5SUNoMk9pQldZV3gxWlNrZ1BUNGdabTRvZEdocGN5NTBjbUZ1YzJadmNtMUdiaWgyS1NsY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdKcGJtUWdZWE1nZFc1cmJtOTNiaUJoY3lCQ2FXNWthVzVuUEZRK1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWjJWMEtDazZJRlpoYkhWbElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUIwYUdsekxpTmxiV2wwZEdWeUxtZGxkQ0E5UFQwZ1hDSm1kVzVqZEdsdmJsd2lLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkSEpoYm5ObWIzSnRSbTRvZEdocGN5NGpaVzFwZEhSbGNpNW5aWFFvS1NsY2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JSFJvYVhNdUkzQnliM0FnUFQwOUlGd2ljM1J5YVc1blhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdkbGRIUmxjaUE5SUdCblpYUmZKSHR6Ym1GclpXbG1lU2gwYUdsekxpTndjbTl3S1gxZ1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhSb2FYTXVJMlZ0YVhSMFpYSmJaMlYwZEdWeVhTQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJ5WVc1elptOXliVVp1S0hSb2FYTXVJMlZ0YVhSMFpYSmJaMlYwZEdWeVhTZ3BLVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwY21GdWMyWnZjbTFHYmloMGFHbHpMaU5sYldsMGRHVnlXM1JvYVhNdUkzQnliM0JkS1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdkR2h5YjNjZ1JYSnliM0lvWENKallXNGdibTkwSUdkbGRDQjJZV3gxWlNCdlppQmlhVzVrYVc1blhDSXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2MzVmljMk55YVdKbEtHTmhiR3hpWVdOck9pQW9kbUZzZFdVNklGWmhiSFZsS1NBOVBpQjJiMmxrS1RvZ0tDa2dQVDRnZG05cFpDQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnZEdocGN5NGpaVzFwZEhSbGNpNXpkV0p6WTNKcFltVWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVJMlZ0YVhSMFpYSXVjM1ZpYzJOeWFXSmxLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZV3hzWW1GamF5aDBhR2x6TG1kbGRDZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2gwZVhCbGIyWWdkR2hwY3k0alpXMXBkSFJsY2k1amIyNXVaV04wSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElITnBaMjVoYkNBOUlHQnViM1JwWm5rNk9pUjdkR2hwY3k0amNISnZjSDFnWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcFpDQTlJSFJvYVhNdUkyVnRhWFIwWlhJdVkyOXVibVZqZENoemFXZHVZV3dzSUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVd4c1ltRmpheWgwYUdsekxtZGxkQ2dwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS0hSb2FYTXVJMlZ0YVhSMFpYSXVaR2x6WTI5dWJtVmpkQ0JoY3lCRGIyNXVaV04wWVdKc1pWdGNJbVJwYzJOdmJtNWxZM1JjSWwwcEtHbGtLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSFJvY205M0lFVnljbTl5S0dBa2UzUm9hWE11STJWdGFYUjBaWEo5SUdseklHNXZkQ0JpYVc1a1lXSnNaV0FwWEc0Z0lDQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnZXlCaWFXNWtJSDBnUFNCQ2FXNWthVzVuWEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JDYVc1a2FXNW5YRzRpTENBaWFXMXdiM0owSUVGemRHRnNJR1p5YjIwZ1hDSm5hVG92TDBGemRHRnNTVTljSWx4dVhHNWxlSEJ2Y25RZ2RIbHdaU0JVYVcxbElEMGdRWE4wWVd3dVZHbHRaVnh1Wlhod2IzSjBJR052Ym5OMElGUnBiV1VnUFNCQmMzUmhiQzVVYVcxbFhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnBiblJsY25aaGJDaHBiblJsY25aaGJEb2diblZ0WW1WeUxDQmpZV3hzWW1GamF6ODZJQ2dwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdRWE4wWVd3dVZHbHRaUzVwYm5SbGNuWmhiQ2hwYm5SbGNuWmhiQ3dnS0NrZ1BUNGdkbTlwWkNCallXeHNZbUZqYXo4dUtDa3BYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCMGFXMWxiM1YwS0hScGJXVnZkWFE2SUc1MWJXSmxjaXdnWTJGc2JHSmhZMnMvT2lBb0tTQTlQaUIyYjJsa0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUVGemRHRnNMbFJwYldVdWRHbHRaVzkxZENoMGFXMWxiM1YwTENBb0tTQTlQaUIyYjJsa0lHTmhiR3hpWVdOclB5NG9LU2xjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHbGtiR1VvWTJGc2JHSmhZMnMvT2lBb0tTQTlQaUIyYjJsa0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUVGemRHRnNMbFJwYldVdWFXUnNaU2dvS1NBOVBpQjJiMmxrSUdOaGJHeGlZV05yUHk0b0tTbGNibjFjYmlJc0lDSnBiWEJ2Y25RZ1FYTjBZV3dnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hKVDF3aVhHNWNiblI1Y0dVZ1FYSm5jeUE5SUh0Y2JpQWdJQ0JqYldRNklITjBjbWx1WnlCOElITjBjbWx1WjF0ZFhHNGdJQ0FnYjNWMFB6b2dLSE4wWkc5MWREb2djM1J5YVc1bktTQTlQaUIyYjJsa1hHNGdJQ0FnWlhKeVB6b2dLSE4wWkdWeWNqb2djM1J5YVc1bktTQTlQaUIyYjJsa1hHNTlYRzVjYm1WNGNHOXlkQ0IwZVhCbElGQnliMk5sYzNNZ1BTQkJjM1JoYkM1UWNtOWpaWE56WEc1bGVIQnZjblFnWTI5dWMzUWdVSEp2WTJWemN5QTlJRUZ6ZEdGc0xsQnliMk5sYzNOY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlITjFZbkJ5YjJObGMzTW9ZWEpuY3pvZ1FYSm5jeWs2SUVGemRHRnNMbEJ5YjJObGMzTmNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE4xWW5CeWIyTmxjM01vWEc0Z0lDQWdZMjFrT2lCemRISnBibWNnZkNCemRISnBibWRiWFN4Y2JpQWdJQ0J2Yms5MWREODZJQ2h6ZEdSdmRYUTZJSE4wY21sdVp5a2dQVDRnZG05cFpDeGNiaUFnSUNCdmJrVnljajg2SUNoemRHUmxjbkk2SUhOMGNtbHVaeWtnUFQ0Z2RtOXBaQ3hjYmlrNklFRnpkR0ZzTGxCeWIyTmxjM05jYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhOMVluQnliMk5sYzNNb1hHNGdJQ0FnWVhKbmMwOXlRMjFrT2lCQmNtZHpJSHdnYzNSeWFXNW5JSHdnYzNSeWFXNW5XMTBzWEc0Z0lDQWdiMjVQZFhRNklDaHpkR1J2ZFhRNklITjBjbWx1WnlrZ1BUNGdkbTlwWkNBOUlIQnlhVzUwTEZ4dUlDQWdJRzl1UlhKeU9pQW9jM1JrWlhKeU9pQnpkSEpwYm1jcElEMCtJSFp2YVdRZ1BTQndjbWx1ZEdWeWNpeGNiaWtnZTF4dUlDQWdJR052Ym5OMElHRnlaM01nUFNCQmNuSmhlUzVwYzBGeWNtRjVLR0Z5WjNOUGNrTnRaQ2tnZkh3Z2RIbHdaVzltSUdGeVozTlBja050WkNBOVBUMGdYQ0p6ZEhKcGJtZGNJbHh1SUNBZ0lHTnZibk4wSUhzZ1kyMWtMQ0JsY25Jc0lHOTFkQ0I5SUQwZ2UxeHVJQ0FnSUNBZ0lDQmpiV1E2SUdGeVozTWdQeUJoY21kelQzSkRiV1FnT2lCaGNtZHpUM0pEYldRdVkyMWtMRnh1SUNBZ0lDQWdJQ0JsY25JNklHRnlaM01nUHlCdmJrVnljaUE2SUdGeVozTlBja050WkM1bGNuSWdmSHdnYjI1RmNuSXNYRzRnSUNBZ0lDQWdJRzkxZERvZ1lYSm5jeUEvSUc5dVQzVjBJRG9nWVhKbmMwOXlRMjFrTG05MWRDQjhmQ0J2Yms5MWRDeGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0J3Y205aklEMGdRWEp5WVhrdWFYTkJjbkpoZVNoamJXUXBYRzRnSUNBZ0lDQWdJRDhnUVhOMFlXd3VVSEp2WTJWemN5NXpkV0p3Y205alpYTnpkaWhqYldRcFhHNGdJQ0FnSUNBZ0lEb2dRWE4wWVd3dVVISnZZMlZ6Y3k1emRXSndjbTlqWlhOektHTnRaQ2xjYmx4dUlDQWdJSEJ5YjJNdVkyOXVibVZqZENoY0luTjBaRzkxZEZ3aUxDQW9YeXdnYzNSa2IzVjBPaUJ6ZEhKcGJtY3BJRDArSUc5MWRDaHpkR1J2ZFhRcEtWeHVJQ0FnSUhCeWIyTXVZMjl1Ym1WamRDaGNJbk4wWkdWeWNsd2lMQ0FvWHl3Z2MzUmtaWEp5T2lCemRISnBibWNwSUQwK0lHVnljaWh6ZEdSbGNuSXBLVnh1SUNBZ0lISmxkSFZ5YmlCd2NtOWpYRzU5WEc1Y2JpOHFLaUJBZEdoeWIzZHpJSHRIVEdsaUxrVnljbTl5ZlNCVWFISnZkM01nYzNSa1pYSnlJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWlhobFl5aGpiV1E2SUhOMGNtbHVaeUI4SUhOMGNtbHVaMXRkS1NCN1hHNGdJQ0FnY21WMGRYSnVJRUZ5Y21GNUxtbHpRWEp5WVhrb1kyMWtLVnh1SUNBZ0lDQWdJQ0EvSUVGemRHRnNMbEJ5YjJObGMzTXVaWGhsWTNZb1kyMWtLVnh1SUNBZ0lDQWdJQ0E2SUVGemRHRnNMbEJ5YjJObGMzTXVaWGhsWXloamJXUXBYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCbGVHVmpRWE41Ym1Nb1kyMWtPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU2s2SUZCeWIyMXBjMlU4YzNSeWFXNW5QaUI3WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1kyMWtLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdRWE4wWVd3dVVISnZZMlZ6Y3k1bGVHVmpYMkZ6ZVc1amRpaGpiV1FzSUNoZkxDQnlaWE1wSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWE52YkhabEtFRnpkR0ZzTGxCeWIyTmxjM011WlhobFkxOWhjM2x1WTNaZlptbHVhWE5vS0hKbGN5a3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JqWVhSamFDQW9aWEp5YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WcVpXTjBLR1Z5Y205eUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JCYzNSaGJDNVFjbTlqWlhOekxtVjRaV05mWVhONWJtTW9ZMjFrTENBb1h5d2djbVZ6S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6YjJ4MlpTaEJjM1JoYkM1UWNtOWpaWE56TG1WNFpXTmZabWx1YVhOb0tISmxjeWtwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvWlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnFaV04wS0dWeWNtOXlLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlLVnh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQldZWEpwWVdKc1pTQm1jbTl0SUZ3aUxpOTJZWEpwWVdKc1pTNXFjMXdpWEc1cGJYQnZjblFnZXlCbGVHVmpRWE41Ym1NZ2ZTQm1jbTl0SUZ3aUxpOXdjbTlqWlhOekxtcHpYQ0pjYm1sdGNHOXlkQ0JDYVc1a2FXNW5MQ0I3SUVOdmJtNWxZM1JoWW14bExDQnJaV0poWW1sbWVTd2djMjVoYTJWcFpua3NJRk4xWW5OamNtbGlZV0pzWlNCOUlHWnliMjBnWENJdUwySnBibVJwYm1jdWFuTmNJbHh1WEc1bGVIQnZjblFnWTI5dWMzUWdibTlKYlhCc2FXTnBkRVJsYzNSeWIza2dQU0JUZVcxaWIyd29YQ0p1YnlCdWJ5QnBiWEJzYVdOcGRDQmtaWE4wY205NVhDSXBYRzVsZUhCdmNuUWdZMjl1YzNRZ2MyVjBRMmhwYkdSeVpXNGdQU0JUZVcxaWIyd29YQ0pqYUdsc1pISmxiaUJ6WlhSMFpYSWdiV1YwYUc5a1hDSXBYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ0WlhKblpVSnBibVJwYm1kektHRnljbUY1T2lCaGJubGJYU2tnZTF4dUlDQWdJR1oxYm1OMGFXOXVJR2RsZEZaaGJIVmxjeWd1TGk1aGNtZHpPaUJoYm5sYlhTa2dlMXh1SUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJREJjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR0Z5Y21GNUxtMWhjQ2gyWVd4MVpTQTlQaUIyWVd4MVpTQnBibk4wWVc1alpXOW1JRUpwYm1ScGJtZGNiaUFnSUNBZ0lDQWdJQ0FnSUQ4Z1lYSm5jMXRwS3l0ZFhHNGdJQ0FnSUNBZ0lDQWdJQ0E2SUhaaGJIVmxMRnh1SUNBZ0lDQWdJQ0FwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ1ltbHVaR2x1WjNNZ1BTQmhjbkpoZVM1bWFXeDBaWElvYVNBOVBpQnBJR2x1YzNSaGJtTmxiMllnUW1sdVpHbHVaeWxjYmx4dUlDQWdJR2xtSUNoaWFXNWthVzVuY3k1c1pXNW5kR2dnUFQwOUlEQXBYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmhjbkpoZVZ4dVhHNGdJQ0FnYVdZZ0tHSnBibVJwYm1kekxteGxibWQwYUNBOVBUMGdNU2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR0pwYm1ScGJtZHpXekJkTG1GektHZGxkRlpoYkhWbGN5bGNibHh1SUNBZ0lISmxkSFZ5YmlCV1lYSnBZV0pzWlM1a1pYSnBkbVVvWW1sdVpHbHVaM01zSUdkbGRGWmhiSFZsY3lrb0tWeHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYzJWMFVISnZjQ2h2WW1vNklHRnVlU3dnY0hKdmNEb2djM1J5YVc1bkxDQjJZV3gxWlRvZ1lXNTVLU0I3WEc0Z0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWMGRHVnlJRDBnWUhObGRGOGtlM051WVd0bGFXWjVLSEJ5YjNBcGZXQmNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJ2WW1wYmMyVjBkR1Z5WFNBOVBUMGdYQ0ptZFc1amRHbHZibHdpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHOWlhbHR6WlhSMFpYSmRLSFpoYkhWbEtWeHVYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQW9iMkpxVzNCeWIzQmRJRDBnZG1Gc2RXVXBYRzRnSUNBZ2ZTQmpZWFJqYUNBb1pYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWhnWTI5MWJHUWdibTkwSUhObGRDQndjbTl3WlhKMGVTQmNJaVI3Y0hKdmNIMWNJaUJ2YmlBa2UyOWlhbjA2WUN3Z1pYSnliM0lwWEc0Z0lDQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ2RIbHdaU0JDYVc1a1lXSnNaVkJ5YjNCelBGUStJRDBnZTF4dUlDQWdJRnRMSUdsdUlHdGxlVzltSUZSZE9pQkNhVzVrYVc1blBGUmJTMTArSUh3Z1ZGdExYVHRjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHaHZiMnM4VjJsa1oyVjBJR1Y0ZEdWdVpITWdRMjl1Ym1WamRHRmliR1UrS0Z4dUlDQWdJSGRwWkdkbGREb2dWMmxrWjJWMExGeHVJQ0FnSUc5aWFtVmpkRG9nUTI5dWJtVmpkR0ZpYkdVZ2ZDQlRkV0p6WTNKcFltRmliR1VzWEc0Z0lDQWdjMmxuYm1Gc1QzSkRZV3hzWW1GamF6b2djM1J5YVc1bklId2dLQ2h6Wld4bU9pQlhhV1JuWlhRc0lDNHVMbUZ5WjNNNklHRnVlVnRkS1NBOVBpQjJiMmxrS1N4Y2JpQWdJQ0JqWVd4c1ltRmphejg2SUNoelpXeG1PaUJYYVdSblpYUXNJQzR1TG1GeVozTTZJR0Z1ZVZ0ZEtTQTlQaUIyYjJsa0xGeHVLU0I3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJ2WW1wbFkzUXVZMjl1Ym1WamRDQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUlDWW1JR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR2xrSUQwZ2IySnFaV04wTG1OdmJtNWxZM1FvYzJsbmJtRnNUM0pEWVd4c1ltRmpheXdnS0Y4NklHRnVlU3dnTGk0dVlYSm5jem9nZFc1cmJtOTNibHRkS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTJGc2JHSmhZMnNvZDJsa1oyVjBMQ0F1TGk1aGNtZHpLVnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCM2FXUm5aWFF1WTI5dWJtVmpkQ2hjSW1SbGMzUnliM2xjSWl3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdLRzlpYW1WamRDNWthWE5qYjI1dVpXTjBJR0Z6SUVOdmJtNWxZM1JoWW14bFcxd2laR2x6WTI5dWJtVmpkRndpWFNrb2FXUXBYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdmU0JsYkhObElHbG1JQ2gwZVhCbGIyWWdiMkpxWldOMExuTjFZbk5qY21saVpTQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUlDWW1JSFI1Y0dWdlppQnphV2R1WVd4UGNrTmhiR3hpWVdOcklEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2RXNXpkV0lnUFNCdlltcGxZM1F1YzNWaWMyTnlhV0psS0NndUxpNWhjbWR6T2lCMWJtdHViM2R1VzEwcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITnBaMjVoYkU5eVEyRnNiR0poWTJzb2QybGtaMlYwTENBdUxpNWhjbWR6S1Z4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQjNhV1JuWlhRdVkyOXVibVZqZENoY0ltUmxjM1J5YjNsY0lpd2dkVzV6ZFdJcFhHNGdJQ0FnZlZ4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZMjl1YzNSeWRXTjBQRmRwWkdkbGRDQmxlSFJsYm1SeklFTnZibTVsWTNSaFlteGxJQ1lnZXlCYmMyVjBRMmhwYkdSeVpXNWRPaUFvWTJocGJHUnlaVzQ2SUdGdWVWdGRLU0E5UGlCMmIybGtJSDArS0hkcFpHZGxkRG9nVjJsa1oyVjBMQ0JqYjI1bWFXYzZJR0Z1ZVNrZ2UxeHVJQ0FnSUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCd2NtVm1aWEl0WTI5dWMzUmNiaUFnSUNCc1pYUWdleUJ6WlhSMWNDd2dZMmhwYkdRc0lHTm9hV3hrY21WdUlEMGdXMTBzSUM0dUxuQnliM0J6SUgwZ1BTQmpiMjVtYVdkY2JseHVJQ0FnSUdsbUlDaGphR2xzWkhKbGJpQnBibk4wWVc1alpXOW1JRUpwYm1ScGJtY3BJSHRjYmlBZ0lDQWdJQ0FnWTJocGJHUnlaVzRnUFNCYlkyaHBiR1J5Wlc1ZFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHTm9hV3hrS1NCN1hHNGdJQ0FnSUNBZ0lHTm9hV3hrY21WdUxuVnVjMmhwWm5Rb1kyaHBiR1FwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnY21WdGIzWmxJSFZ1WkdWbWFXNWxaQ0IyWVd4MVpYTmNiaUFnSUNCbWIzSWdLR052Ym5OMElGdHJaWGtzSUhaaGJIVmxYU0J2WmlCUFltcGxZM1F1Wlc1MGNtbGxjeWh3Y205d2N5a3BJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIWmhiSFZsSUQwOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCd2NtOXdjMXRyWlhsZFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QmpiMnhzWldOMElHSnBibVJwYm1kelhHNGdJQ0FnWTI5dWMzUWdZbWx1WkdsdVozTTZJRUZ5Y21GNVBGdHpkSEpwYm1jc0lFSnBibVJwYm1jOFlXNTVQbDArSUQwZ1QySnFaV04wWEc0Z0lDQWdJQ0FnSUM1clpYbHpLSEJ5YjNCektWeHVJQ0FnSUNBZ0lDQXVjbVZrZFdObEtDaGhZMk02SUdGdWVTd2djSEp2Y0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEJ5YjNCelczQnliM0JkSUdsdWMzUmhibU5sYjJZZ1FtbHVaR2x1WnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdKcGJtUnBibWNnUFNCd2NtOXdjMXR3Y205d1hWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCd2NtOXdjMXR3Y205d1hWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCYkxpNHVZV05qTENCYmNISnZjQ3dnWW1sdVpHbHVaMTFkWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVdOalhHNGdJQ0FnSUNBZ0lIMHNJRnRkS1Z4dVhHNGdJQ0FnTHk4Z1kyOXNiR1ZqZENCemFXZHVZV3dnYUdGdVpHeGxjbk5jYmlBZ0lDQmpiMjV6ZENCdmJraGhibVJzWlhKek9pQkJjbkpoZVR4YmMzUnlhVzVuTENCemRISnBibWNnZkNBb0tDa2dQVDRnZFc1cmJtOTNiaWxkUGlBOUlFOWlhbVZqZEZ4dUlDQWdJQ0FnSUNBdWEyVjVjeWh3Y205d2N5bGNiaUFnSUNBZ0lDQWdMbkpsWkhWalpTZ29ZV05qT2lCaGJua3NJR3RsZVNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3RsZVM1emRHRnlkSE5YYVhSb0tGd2liMjVjSWlrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCemFXY2dQU0JyWldKaFltbG1lU2hyWlhrcExuTndiR2wwS0Z3aUxWd2lLUzV6YkdsalpTZ3hLUzVxYjJsdUtGd2lMVndpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR2hoYm1Sc1pYSWdQU0J3Y205d2MxdHJaWGxkWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJSEJ5YjNCelcydGxlVjFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXeTR1TG1Gall5d2dXM05wWnl3Z2FHRnVaR3hsY2wxZFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lXTmpYRzRnSUNBZ0lDQWdJSDBzSUZ0ZEtWeHVYRzRnSUNBZ0x5OGdjMlYwSUdOb2FXeGtjbVZ1WEc0Z0lDQWdZMjl1YzNRZ2JXVnlaMlZrUTJocGJHUnlaVzRnUFNCdFpYSm5aVUpwYm1ScGJtZHpLR05vYVd4a2NtVnVMbVpzWVhRb1NXNW1hVzVwZEhrcEtWeHVJQ0FnSUdsbUlDaHRaWEpuWldSRGFHbHNaSEpsYmlCcGJuTjBZVzVqWlc5bUlFSnBibVJwYm1jcElIdGNiaUFnSUNBZ0lDQWdkMmxrWjJWMFczTmxkRU5vYVd4a2NtVnVYU2h0WlhKblpXUkRhR2xzWkhKbGJpNW5aWFFvS1NsY2JpQWdJQ0FnSUNBZ2QybGtaMlYwTG1OdmJtNWxZM1FvWENKa1pYTjBjbTk1WENJc0lHMWxjbWRsWkVOb2FXeGtjbVZ1TG5OMVluTmpjbWxpWlNnb2Rpa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrWjJWMFczTmxkRU5vYVd4a2NtVnVYU2gyS1Z4dUlDQWdJQ0FnSUNCOUtTbGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCcFppQW9iV1Z5WjJWa1EyaHBiR1J5Wlc0dWJHVnVaM1JvSUQ0Z01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtaMlYwVzNObGRFTm9hV3hrY21WdVhTaHRaWEpuWldSRGFHbHNaSEpsYmlsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklITmxkSFZ3SUhOcFoyNWhiQ0JvWVc1a2JHVnljMXh1SUNBZ0lHWnZjaUFvWTI5dWMzUWdXM05wWjI1aGJDd2dZMkZzYkdKaFkydGRJRzltSUc5dVNHRnVaR3hsY25NcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MybG5JRDBnYzJsbmJtRnNMbk4wWVhKMGMxZHBkR2dvWENKdWIzUnBabmxjSWlsY2JpQWdJQ0FnSUNBZ0lDQWdJRDhnYzJsbmJtRnNMbkpsY0d4aFkyVW9YQ0l0WENJc0lGd2lPanBjSWlsY2JpQWdJQ0FnSUNBZ0lDQWdJRG9nYzJsbmJtRnNYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCallXeHNZbUZqYXlBOVBUMGdYQ0ptZFc1amRHbHZibHdpS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSblpYUXVZMjl1Ym1WamRDaHphV2NzSUdOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrWjJWMExtTnZibTVsWTNRb2MybG5MQ0FvS1NBOVBpQmxlR1ZqUVhONWJtTW9ZMkZzYkdKaFkyc3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMblJvWlc0b2NISnBiblFwTG1OaGRHTm9LR052Ym5OdmJHVXVaWEp5YjNJcEtWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdjMlYwZFhBZ1ltbHVaR2x1WjNNZ2FHRnVaR3hsY25OY2JpQWdJQ0JtYjNJZ0tHTnZibk4wSUZ0d2NtOXdMQ0JpYVc1a2FXNW5YU0J2WmlCaWFXNWthVzVuY3lrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvY0hKdmNDQTlQVDBnWENKamFHbHNaRndpSUh4OElIQnliM0FnUFQwOUlGd2lZMmhwYkdSeVpXNWNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrWjJWMExtTnZibTVsWTNRb1hDSmtaWE4wY205NVhDSXNJR0pwYm1ScGJtY3VjM1ZpYzJOeWFXSmxLQ2gyT2lCaGJua3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FXUm5aWFJiYzJWMFEyaHBiR1J5Wlc1ZEtIWXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtTbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0IzYVdSblpYUXVZMjl1Ym1WamRDaGNJbVJsYzNSeWIzbGNJaXdnWW1sdVpHbHVaeTV6ZFdKelkzSnBZbVVvS0hZNklHRnVlU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFVISnZjQ2gzYVdSblpYUXNJSEJ5YjNBc0lIWXBYRzRnSUNBZ0lDQWdJSDBwS1Z4dUlDQWdJQ0FnSUNCelpYUlFjbTl3S0hkcFpHZGxkQ3dnY0hKdmNDd2dZbWx1WkdsdVp5NW5aWFFvS1NsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCbWFXeDBaWElnZFc1a1pXWnBibVZrSUhaaGJIVmxjMXh1SUNBZ0lHWnZjaUFvWTI5dWMzUWdXMnRsZVN3Z2RtRnNkV1ZkSUc5bUlFOWlhbVZqZEM1bGJuUnlhV1Z6S0hCeWIzQnpLU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ1BUMDlJSFZ1WkdWbWFXNWxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElIQnliM0J6VzJ0bGVWMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvZDJsa1oyVjBMQ0J3Y205d2N5bGNiaUFnSUNCelpYUjFjRDh1S0hkcFpHZGxkQ2xjYmlBZ0lDQnlaWFIxY200Z2QybGtaMlYwWEc1OVhHNWNibVoxYm1OMGFXOXVJR2x6UVhKeWIzZEdkVzVqZEdsdmJpaG1kVzVqT2lCaGJua3BPaUJtZFc1aklHbHpJQ2hoY21kek9pQmhibmtwSUQwK0lHRnVlU0I3WEc0Z0lDQWdjbVYwZFhKdUlDRlBZbXBsWTNRdWFHRnpUM2R1S0daMWJtTXNJRndpY0hKdmRHOTBlWEJsWENJcFhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJxYzNnb1hHNGdJQ0FnWTNSdmNuTTZJRkpsWTI5eVpEeHpkSEpwYm1jc0lIc2dibVYzS0hCeWIzQnpPaUJoYm5rcE9pQmhibmtnZlNCOElDZ29jSEp2Y0hNNklHRnVlU2tnUFQ0Z1lXNTVLVDRzWEc0Z0lDQWdZM1J2Y2pvZ2MzUnlhVzVuSUh3Z0tDaHdjbTl3Y3pvZ1lXNTVLU0E5UGlCaGJua3BJSHdnZXlCdVpYY29jSEp2Y0hNNklHRnVlU2s2SUdGdWVTQjlMRnh1SUNBZ0lIc2dZMmhwYkdSeVpXNHNJQzR1TG5CeWIzQnpJSDA2SUdGdWVTeGNiaWtnZTF4dUlDQWdJR05vYVd4a2NtVnVJRDgvUFNCYlhWeHVYRzRnSUNBZ2FXWWdLQ0ZCY25KaGVTNXBjMEZ5Y21GNUtHTm9hV3hrY21WdUtTbGNiaUFnSUNBZ0lDQWdZMmhwYkdSeVpXNGdQU0JiWTJocGJHUnlaVzVkWEc1Y2JpQWdJQ0JqYUdsc1pISmxiaUE5SUdOb2FXeGtjbVZ1TG1acGJIUmxjaWhDYjI5c1pXRnVLVnh1WEc0Z0lDQWdhV1lnS0dOb2FXeGtjbVZ1TG14bGJtZDBhQ0E5UFQwZ01TbGNiaUFnSUNBZ0lDQWdjSEp2Y0hNdVkyaHBiR1FnUFNCamFHbHNaSEpsYmxzd1hWeHVJQ0FnSUdWc2MyVWdhV1lnS0dOb2FXeGtjbVZ1TG14bGJtZDBhQ0ErSURFcFhHNGdJQ0FnSUNBZ0lIQnliM0J6TG1Ob2FXeGtjbVZ1SUQwZ1kyaHBiR1J5Wlc1Y2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ1kzUnZjaUE5UFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2FYTkJjbkp2ZDBaMWJtTjBhVzl1S0dOMGIzSnpXMk4wYjNKZEtTbGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqZEc5eWMxdGpkRzl5WFNod2NtOXdjeWxjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHTjBiM0p6VzJOMGIzSmRLSEJ5YjNCektWeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaHBjMEZ5Y205M1JuVnVZM1JwYjI0b1kzUnZjaWtwWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJqZEc5eUtIQnliM0J6S1Z4dVhHNGdJQ0FnY21WMGRYSnVJRzVsZHlCamRHOXlLSEJ5YjNCektWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCN0lHaHZiMnNzSUc1dlNXMXdiR2xqYVhSRVpYTjBjbTk1TENCelpYUkRhR2xzWkhKbGJpd2diV1Z5WjJWQ2FXNWthVzVuY3l3Z2RIbHdaU0JDYVc1a1lXSnNaVkJ5YjNCekxDQmpiMjV6ZEhKMVkzUWdmU0JtY205dElGd2lMaTR2WDJGemRHRnNMbXB6WENKY2JtbHRjRzl5ZENCQmMzUmhiQ0JtY205dElGd2laMms2THk5QmMzUmhiRDkyWlhKemFXOXVQVE11TUZ3aVhHNXBiWEJ2Y25RZ1IzUnJJR1p5YjIwZ1hDSm5hVG92TDBkMGF6OTJaWEp6YVc5dVBUTXVNRndpWEc1cGJYQnZjblFnUjJScklHWnliMjBnWENKbmFUb3ZMMGRrYXo5MlpYSnphVzl1UFRNdU1Gd2lYRzVwYlhCdmNuUWdSMDlpYW1WamRDQm1jbTl0SUZ3aVoyazZMeTlIVDJKcVpXTjBYQ0pjYm1sdGNHOXlkQ0JIYVc4Z1puSnZiU0JjSW1kcE9pOHZSMmx2UDNabGNuTnBiMjQ5TWk0d1hDSmNibWx0Y0c5eWRDQkNhVzVrYVc1bkxDQjdJSFI1Y0dVZ1EyOXVibVZqZEdGaWJHVXNJSFI1Y0dVZ1UzVmljMk55YVdKaFlteGxJSDBnWm5KdmJTQmNJaTR1TDJKcGJtUnBibWN1YW5OY0lseHVYRzVsZUhCdmNuUWdleUJDYVc1a1lXSnNaVkJ5YjNCekxDQnRaWEpuWlVKcGJtUnBibWR6SUgxY2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1lYTjBZV3hwWm5rOFhHNGdJQ0FnUXlCbGVIUmxibVJ6SUhzZ2JtVjNLQzR1TG1GeVozTTZJR0Z1ZVZ0ZEtUb2dSM1JyTGxkcFpHZGxkQ0I5TEZ4dVBpaGpiSE02SUVNc0lHTnNjMDVoYldVZ1BTQmpiSE11Ym1GdFpTa2dlMXh1SUNBZ0lHTnNZWE56SUZkcFpHZGxkQ0JsZUhSbGJtUnpJR05zY3lCN1hHNGdJQ0FnSUNBZ0lHZGxkQ0JqYzNNb0tUb2djM1J5YVc1bklIc2djbVYwZFhKdUlFRnpkR0ZzTG5kcFpHZGxkRjluWlhSZlkzTnpLSFJvYVhNcElIMWNiaUFnSUNBZ0lDQWdjMlYwSUdOemN5aGpjM002SUhOMGNtbHVaeWtnZXlCQmMzUmhiQzUzYVdSblpYUmZjMlYwWDJOemN5aDBhR2x6TENCamMzTXBJSDFjYmlBZ0lDQWdJQ0FnWjJWMFgyTnpjeWdwT2lCemRISnBibWNnZXlCeVpYUjFjbTRnZEdocGN5NWpjM01nZlZ4dUlDQWdJQ0FnSUNCelpYUmZZM056S0dOemN6b2djM1J5YVc1bktTQjdJSFJvYVhNdVkzTnpJRDBnWTNOeklIMWNibHh1SUNBZ0lDQWdJQ0JuWlhRZ1kyeGhjM05PWVcxbEtDazZJSE4wY21sdVp5QjdJSEpsZEhWeWJpQkJjM1JoYkM1M2FXUm5aWFJmWjJWMFgyTnNZWE56WDI1aGJXVnpLSFJvYVhNcExtcHZhVzRvWENJZ1hDSXBJSDFjYmlBZ0lDQWdJQ0FnYzJWMElHTnNZWE56VG1GdFpTaGpiR0Z6YzA1aGJXVTZJSE4wY21sdVp5a2dleUJCYzNSaGJDNTNhV1JuWlhSZmMyVjBYMk5zWVhOelgyNWhiV1Z6S0hSb2FYTXNJR05zWVhOelRtRnRaUzV6Y0d4cGRDZ3ZYRnh6S3k4cEtTQjlYRzRnSUNBZ0lDQWdJR2RsZEY5amJHRnpjMTl1WVcxbEtDazZJSE4wY21sdVp5QjdJSEpsZEhWeWJpQjBhR2x6TG1Oc1lYTnpUbUZ0WlNCOVhHNGdJQ0FnSUNBZ0lITmxkRjlqYkdGemMxOXVZVzFsS0dOc1lYTnpUbUZ0WlRvZ2MzUnlhVzVuS1NCN0lIUm9hWE11WTJ4aGMzTk9ZVzFsSUQwZ1kyeGhjM05PWVcxbElIMWNibHh1SUNBZ0lDQWdJQ0JuWlhRZ1kzVnljMjl5S0NrNklFTjFjbk52Y2lCN0lISmxkSFZ5YmlCQmMzUmhiQzUzYVdSblpYUmZaMlYwWDJOMWNuTnZjaWgwYUdsektTQmhjeUJEZFhKemIzSWdmVnh1SUNBZ0lDQWdJQ0J6WlhRZ1kzVnljMjl5S0dOMWNuTnZjam9nUTNWeWMyOXlLU0I3SUVGemRHRnNMbmRwWkdkbGRGOXpaWFJmWTNWeWMyOXlLSFJvYVhNc0lHTjFjbk52Y2lrZ2ZWeHVJQ0FnSUNBZ0lDQm5aWFJmWTNWeWMyOXlLQ2s2SUVOMWNuTnZjaUI3SUhKbGRIVnliaUIwYUdsekxtTjFjbk52Y2lCOVhHNGdJQ0FnSUNBZ0lITmxkRjlqZFhKemIzSW9ZM1Z5YzI5eU9pQkRkWEp6YjNJcElIc2dkR2hwY3k1amRYSnpiM0lnUFNCamRYSnpiM0lnZlZ4dVhHNGdJQ0FnSUNBZ0lHZGxkQ0JqYkdsamExUm9jbTkxWjJnb0tUb2dZbTl2YkdWaGJpQjdJSEpsZEhWeWJpQkJjM1JoYkM1M2FXUm5aWFJmWjJWMFgyTnNhV05yWDNSb2NtOTFaMmdvZEdocGN5a2dmVnh1SUNBZ0lDQWdJQ0J6WlhRZ1kyeHBZMnRVYUhKdmRXZG9LR05zYVdOclZHaHliM1ZuYURvZ1ltOXZiR1ZoYmlrZ2V5QkJjM1JoYkM1M2FXUm5aWFJmYzJWMFgyTnNhV05yWDNSb2NtOTFaMmdvZEdocGN5d2dZMnhwWTJ0VWFISnZkV2RvS1NCOVhHNGdJQ0FnSUNBZ0lHZGxkRjlqYkdsamExOTBhSEp2ZFdkb0tDazZJR0p2YjJ4bFlXNGdleUJ5WlhSMWNtNGdkR2hwY3k1amJHbGphMVJvY205MVoyZ2dmVnh1SUNBZ0lDQWdJQ0J6WlhSZlkyeHBZMnRmZEdoeWIzVm5hQ2hqYkdsamExUm9jbTkxWjJnNklHSnZiMnhsWVc0cElIc2dkR2hwY3k1amJHbGphMVJvY205MVoyZ2dQU0JqYkdsamExUm9jbTkxWjJnZ2ZWeHVYRzRnSUNBZ0lDQWdJR1JsWTJ4aGNtVWdjSEpwZG1GMFpTQmJibTlKYlhCc2FXTnBkRVJsYzNSeWIzbGRPaUJpYjI5c1pXRnVYRzRnSUNBZ0lDQWdJR2RsZENCdWIwbHRjR3hwWTJsMFJHVnpkSEp2ZVNncE9pQmliMjlzWldGdUlIc2djbVYwZFhKdUlIUm9hWE5iYm05SmJYQnNhV05wZEVSbGMzUnliM2xkSUgxY2JpQWdJQ0FnSUNBZ2MyVjBJRzV2U1cxd2JHbGphWFJFWlhOMGNtOTVLSFpoYkhWbE9pQmliMjlzWldGdUtTQjdJSFJvYVhOYmJtOUpiWEJzYVdOcGRFUmxjM1J5YjNsZElEMGdkbUZzZFdVZ2ZWeHVYRzRnSUNBZ0lDQWdJSE5sZENCaFkzUnBiMjVIY205MWNDaGJjSEpsWm1sNExDQm5jbTkxY0YwNklFRmpkR2x2YmtkeWIzVndLU0I3SUhSb2FYTXVhVzV6WlhKMFgyRmpkR2x2Ymw5bmNtOTFjQ2h3Y21WbWFYZ3NJR2R5YjNWd0tTQjlYRzRnSUNBZ0lDQWdJSE5sZEY5aFkzUnBiMjVmWjNKdmRYQW9ZV04wYVc5dVIzSnZkWEE2SUVGamRHbHZia2R5YjNWd0tTQjdJSFJvYVhNdVlXTjBhVzl1UjNKdmRYQWdQU0JoWTNScGIyNUhjbTkxY0NCOVhHNWNiaUFnSUNBZ0lDQWdjSEp2ZEdWamRHVmtJR2RsZEVOb2FXeGtjbVZ1S0NrNklFRnljbUY1UEVkMGF5NVhhV1JuWlhRK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6SUdsdWMzUmhibU5sYjJZZ1IzUnJMa0pwYmlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEY5amFHbHNaQ2dwSUQ4Z1czUm9hWE11WjJWMFgyTm9hV3hrS0NraFhTQTZJRnRkWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSFJvYVhNZ2FXNXpkR0Z1WTJWdlppQkhkR3N1UTI5dWRHRnBibVZ5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwWDJOb2FXeGtjbVZ1S0NsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCYlhWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnY0hKdmRHVmpkR1ZrSUhObGRFTm9hV3hrY21WdUtHTm9hV3hrY21WdU9pQmhibmxiWFNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUnlaVzRnUFNCamFHbHNaSEpsYmk1bWJHRjBLRWx1Wm1sdWFYUjVLUzV0WVhBb1kyZ2dQVDRnWTJnZ2FXNXpkR0Z1WTJWdlppQkhkR3N1VjJsa1oyVjBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQeUJqYUZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURvZ2JtVjNJRWQwYXk1TVlXSmxiQ2g3SUhacGMybGliR1U2SUhSeWRXVXNJR3hoWW1Wc09pQlRkSEpwYm1jb1kyZ3BJSDBwS1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeUJwYm5OMFlXNWpaVzltSUVkMGF5NURiMjUwWVdsdVpYSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUdOb0lHOW1JR05vYVd4a2NtVnVLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZrWkNoamFDbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdoeWIzY2dSWEp5YjNJb1lHTmhiaUJ1YjNRZ1lXUmtJR05vYVd4a2NtVnVJSFJ2SUNSN2RHaHBjeTVqYjI1emRISjFZM1J2Y2k1dVlXMWxmV0FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCYmMyVjBRMmhwYkdSeVpXNWRLR05vYVd4a2NtVnVPaUJoYm5sYlhTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdjbVZ0YjNabFhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeUJwYm5OMFlXNWpaVzltSUVkMGF5NURiMjUwWVdsdVpYSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUdOb0lHOW1JSFJvYVhNdVoyVjBRMmhwYkdSeVpXNG9LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJXOTJaU2hqYUNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGamFHbHNaSEpsYmk1cGJtTnNkV1JsY3loamFDa2dKaVlnSVhSb2FYTXVibTlKYlhCc2FXTnBkRVJsYzNSeWIza3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmphRDh1WkdWemRISnZlU2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJoY0hCbGJtUmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMlYwUTJocGJHUnlaVzRvWTJocGJHUnlaVzRwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjBiMmRuYkdWRGJHRnpjMDVoYldVb1kyNDZJSE4wY21sdVp5d2dZMjl1WkNBOUlIUnlkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRUZ6ZEdGc0xuZHBaR2RsZEY5MGIyZG5iR1ZmWTJ4aGMzTmZibUZ0WlNoMGFHbHpMQ0JqYml3Z1kyOXVaQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHaHZiMnNvWEc0Z0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklFTnZibTVsWTNSaFlteGxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2MybG5ibUZzT2lCemRISnBibWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpZV3hzWW1GamF6b2dLSE5sYkdZNklIUm9hWE1zSUM0dUxtRnlaM002SUdGdWVWdGRLU0E5UGlCMmIybGtMRnh1SUNBZ0lDQWdJQ0FwT2lCMGFHbHpYRzRnSUNBZ0lDQWdJR2h2YjJzb1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUTZJRk4xWW5OamNtbGlZV0pzWlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR05oYkd4aVlXTnJPaUFvYzJWc1pqb2dkR2hwY3l3Z0xpNHVZWEpuY3pvZ1lXNTVXMTBwSUQwK0lIWnZhV1FzWEc0Z0lDQWdJQ0FnSUNrNklIUm9hWE5jYmlBZ0lDQWdJQ0FnYUc5dmF5aGNiaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nUTI5dWJtVmpkR0ZpYkdVZ2ZDQlRkV0p6WTNKcFltRmliR1VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnphV2R1WVd4UGNrTmhiR3hpWVdOck9pQnpkSEpwYm1jZ2ZDQW9LSE5sYkdZNklIUm9hWE1zSUM0dUxtRnlaM002SUdGdWVWdGRLU0E5UGlCMmIybGtLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhiR3hpWVdOclB6b2dLSE5sYkdZNklIUm9hWE1zSUM0dUxtRnlaM002SUdGdWVWdGRLU0E5UGlCMmIybGtMRnh1SUNBZ0lDQWdJQ0FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2h2YjJzb2RHaHBjeXdnYjJKcVpXTjBMQ0J6YVdkdVlXeFBja05oYkd4aVlXTnJMQ0JqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCamIyNXpkSEoxWTNSdmNpZ3VMaTV3WVhKaGJYTTZJR0Z1ZVZ0ZEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRYQmxjaWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXdjeUE5SUhCaGNtRnRjMXN3WFNCOGZDQjdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZjSE11ZG1semFXSnNaU0EvUHowZ2RISjFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1J5ZFdOMEtIUm9hWE1zSUhCeWIzQnpLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdSMDlpYW1WamRDNXlaV2RwYzNSbGNrTnNZWE56S0h0Y2JpQWdJQ0FnSUNBZ1IxUjVjR1ZPWVcxbE9pQmdRWE4wWVd4ZkpIdGpiSE5PWVcxbGZXQXNYRzRnSUNBZ0lDQWdJRkJ5YjNCbGNuUnBaWE02SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRndpWTJ4aGMzTXRibUZ0WlZ3aU9pQkhUMkpxWldOMExsQmhjbUZ0VTNCbFl5NXpkSEpwYm1jb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSmpiR0Z6Y3kxdVlXMWxYQ0lzSUZ3aVhDSXNJRndpWENJc0lFZFBZbXBsWTNRdVVHRnlZVzFHYkdGbmN5NVNSVUZFVjFKSlZFVXNJRndpWENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdYQ0pqYzNOY0lqb2dSMDlpYW1WamRDNVFZWEpoYlZOd1pXTXVjM1J5YVc1bktGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lZM056WENJc0lGd2lYQ0lzSUZ3aVhDSXNJRWRQWW1wbFkzUXVVR0Z5WVcxR2JHRm5jeTVTUlVGRVYxSkpWRVVzSUZ3aVhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnWENKamRYSnpiM0pjSWpvZ1IwOWlhbVZqZEM1UVlYSmhiVk53WldNdWMzUnlhVzVuS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVkzVnljMjl5WENJc0lGd2lYQ0lzSUZ3aVhDSXNJRWRQWW1wbFkzUXVVR0Z5WVcxR2JHRm5jeTVTUlVGRVYxSkpWRVVzSUZ3aVpHVm1ZWFZzZEZ3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJRndpWTJ4cFkyc3RkR2h5YjNWbmFGd2lPaUJIVDJKcVpXTjBMbEJoY21GdFUzQmxZeTVpYjI5c1pXRnVLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpWTJ4cFkyc3RkR2h5YjNWbmFGd2lMQ0JjSWx3aUxDQmNJbHdpTENCSFQySnFaV04wTGxCaGNtRnRSbXhoWjNNdVVrVkJSRmRTU1ZSRkxDQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmNJbTV2TFdsdGNHeHBZMmwwTFdSbGMzUnliM2xjSWpvZ1IwOWlhbVZqZEM1UVlYSmhiVk53WldNdVltOXZiR1ZoYmloY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0ltNXZMV2x0Y0d4cFkybDBMV1JsYzNSeWIzbGNJaXdnWENKY0lpd2dYQ0pjSWl3Z1IwOWlhbVZqZEM1UVlYSmhiVVpzWVdkekxsSkZRVVJYVWtsVVJTd2dabUZzYzJVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FwTEZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUgwc0lGZHBaR2RsZENsY2JseHVJQ0FnSUhKbGRIVnliaUJYYVdSblpYUmNibjFjYmx4dWRIbHdaU0JUYVdkSVlXNWtiR1Z5UEZ4dUlDQWdJRmNnWlhoMFpXNWtjeUJKYm5OMFlXNWpaVlI1Y0dVOGRIbHdaVzltSUVkMGF5NVhhV1JuWlhRK0xGeHVJQ0FnSUVGeVozTWdaWGgwWlc1a2N5QkJjbkpoZVR4MWJtdHViM2R1UGl4Y2JqNGdQU0FvS0hObGJHWTZJRmNzSUM0dUxtRnlaM002SUVGeVozTXBJRDArSUhWdWEyNXZkMjRwSUh3Z2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzExY2JseHVaWGh3YjNKMElIUjVjR1VnUW1sdVpHRmliR1ZEYUdsc1pDQTlJRWQwYXk1WGFXUm5aWFFnZkNCQ2FXNWthVzVuUEVkMGF5NVhhV1JuWlhRK1hHNWNibVY0Y0c5eWRDQjBlWEJsSUVOdmJuTjBjblZqZEZCeWIzQnpQRnh1SUNBZ0lGTmxiR1lnWlhoMFpXNWtjeUJKYm5OMFlXNWpaVlI1Y0dVOGRIbHdaVzltSUVkMGF5NVhhV1JuWlhRK0xGeHVJQ0FnSUZCeWIzQnpJR1Y0ZEdWdVpITWdSM1JyTGxkcFpHZGxkQzVEYjI1emRISjFZM1J2Y2xCeWIzQnpMRnh1SUNBZ0lGTnBaMjVoYkhNZ1pYaDBaVzVrY3lCU1pXTnZjbVE4WUc5dUpIdHpkSEpwYm1kOVlDd2dRWEp5WVhrOGRXNXJibTkzYmo0K0lEMGdVbVZqYjNKa1BHQnZiaVI3YzNSeWFXNW5mV0FzSUdGdWVWdGRQaXhjYmo0Z1BTQlFZWEowYVdGc1BIdGNiaUFnSUNBdkx5QkFkSE10Wlhod1pXTjBMV1Z5Y205eUlHTmhiaWQwSUdGemMybG5iaUIwYnlCMWJtdHViM2R1TENCaWRYUWdhWFFnZDI5eWEzTWdZWE1nWlhod1pXTjBaV1FnZEdodmRXZG9YRzRnSUNBZ1cxTWdhVzRnYTJWNWIyWWdVMmxuYm1Gc2MxMDZJRk5wWjBoaGJtUnNaWEk4VTJWc1ppd2dVMmxuYm1Gc2MxdFRYVDVjYm4wK0lDWWdVR0Z5ZEdsaGJEeDdYRzRnSUNBZ1cwdGxlU0JwYmlCZ2IyNGtlM04wY21sdVozMWdYVG9nVTJsblNHRnVaR3hsY2p4VFpXeG1MQ0JoYm5sYlhUNWNibjArSUNZZ1FtbHVaR0ZpYkdWUWNtOXdjenhRWVhKMGFXRnNQRkJ5YjNCeklDWWdlMXh1SUNBZ0lHTnNZWE56VG1GdFpUODZJSE4wY21sdVoxeHVJQ0FnSUdOemN6ODZJSE4wY21sdVoxeHVJQ0FnSUdOMWNuTnZjajg2SUhOMGNtbHVaMXh1SUNBZ0lHTnNhV05yVkdoeWIzVm5hRDg2SUdKdmIyeGxZVzVjYmlBZ0lDQmhZM1JwYjI1SGNtOTFjRDg2SUVGamRHbHZia2R5YjNWd1hHNTlQajRnSmlCUVlYSjBhV0ZzUEh0Y2JpQWdJQ0J2YmtSbGMzUnliM2s2SUNoelpXeG1PaUJUWld4bUtTQTlQaUIxYm10dWIzZHVYRzRnSUNBZ2IyNUVjbUYzT2lBb2MyVnNaam9nVTJWc1ppa2dQVDRnZFc1cmJtOTNibHh1SUNBZ0lHOXVTMlY1VUhKbGMzTkZkbVZ1ZERvZ0tITmxiR1k2SUZObGJHWXNJR1YyWlc1ME9pQkhaR3N1UlhabGJuUXBJRDArSUhWdWEyNXZkMjVjYmlBZ0lDQnZia3RsZVZKbGJHVmhjMlZGZG1WdWREb2dLSE5sYkdZNklGTmxiR1lzSUdWMlpXNTBPaUJIWkdzdVJYWmxiblFwSUQwK0lIVnVhMjV2ZDI1Y2JpQWdJQ0J2YmtKMWRIUnZibEJ5WlhOelJYWmxiblE2SUNoelpXeG1PaUJUWld4bUxDQmxkbVZ1ZERvZ1IyUnJMa1YyWlc1MEtTQTlQaUIxYm10dWIzZHVYRzRnSUNBZ2IyNUNkWFIwYjI1U1pXeGxZWE5sUlhabGJuUTZJQ2h6Wld4bU9pQlRaV3htTENCbGRtVnVkRG9nUjJSckxrVjJaVzUwS1NBOVBpQjFibXR1YjNkdVhHNGdJQ0FnYjI1U1pXRnNhWHBsT2lBb2MyVnNaam9nVTJWc1ppa2dQVDRnZFc1cmJtOTNibHh1SUNBZ0lITmxkSFZ3T2lBb2MyVnNaam9nVTJWc1ppa2dQVDRnZG05cFpGeHVmVDVjYmx4dWRIbHdaU0JEZFhKemIzSWdQVnh1SUNBZ0lId2dYQ0prWldaaGRXeDBYQ0pjYmlBZ0lDQjhJRndpYUdWc2NGd2lYRzRnSUNBZ2ZDQmNJbkJ2YVc1MFpYSmNJbHh1SUNBZ0lId2dYQ0pqYjI1MFpYaDBMVzFsYm5WY0lseHVJQ0FnSUh3Z1hDSndjbTluY21WemMxd2lYRzRnSUNBZ2ZDQmNJbmRoYVhSY0lseHVJQ0FnSUh3Z1hDSmpaV3hzWENKY2JpQWdJQ0I4SUZ3aVkzSnZjM05vWVdseVhDSmNiaUFnSUNCOElGd2lkR1Y0ZEZ3aVhHNGdJQ0FnZkNCY0luWmxjblJwWTJGc0xYUmxlSFJjSWx4dUlDQWdJSHdnWENKaGJHbGhjMXdpWEc0Z0lDQWdmQ0JjSW1OdmNIbGNJbHh1SUNBZ0lId2dYQ0p1Ynkxa2NtOXdYQ0pjYmlBZ0lDQjhJRndpYlc5MlpWd2lYRzRnSUNBZ2ZDQmNJbTV2ZEMxaGJHeHZkMlZrWENKY2JpQWdJQ0I4SUZ3aVozSmhZbHdpWEc0Z0lDQWdmQ0JjSW1keVlXSmlhVzVuWENKY2JpQWdJQ0I4SUZ3aVlXeHNMWE5qY205c2JGd2lYRzRnSUNBZ2ZDQmNJbU52YkMxeVpYTnBlbVZjSWx4dUlDQWdJSHdnWENKeWIzY3RjbVZ6YVhwbFhDSmNiaUFnSUNCOElGd2liaTF5WlhOcGVtVmNJbHh1SUNBZ0lId2dYQ0psTFhKbGMybDZaVndpWEc0Z0lDQWdmQ0JjSW5NdGNtVnphWHBsWENKY2JpQWdJQ0I4SUZ3aWR5MXlaWE5wZW1WY0lseHVJQ0FnSUh3Z1hDSnVaUzF5WlhOcGVtVmNJbHh1SUNBZ0lId2dYQ0p1ZHkxeVpYTnBlbVZjSWx4dUlDQWdJSHdnWENKemR5MXlaWE5wZW1WY0lseHVJQ0FnSUh3Z1hDSnpaUzF5WlhOcGVtVmNJbHh1SUNBZ0lId2dYQ0psZHkxeVpYTnBlbVZjSWx4dUlDQWdJSHdnWENKdWN5MXlaWE5wZW1WY0lseHVJQ0FnSUh3Z1hDSnVaWE4zTFhKbGMybDZaVndpWEc0Z0lDQWdmQ0JjSW01M2MyVXRjbVZ6YVhwbFhDSmNiaUFnSUNCOElGd2llbTl2YlMxcGJsd2lYRzRnSUNBZ2ZDQmNJbnB2YjIwdGIzVjBYQ0pjYmx4dWRIbHdaU0JCWTNScGIyNUhjbTkxY0NBOUlGdHdjbVZtYVhnNklITjBjbWx1Wnl3Z1lXTjBhVzl1UjNKdmRYQTZJRWRwYnk1QlkzUnBiMjVIY205MWNGMWNiaUlzSUNKcGJYQnZjblFnUjNScklHWnliMjBnWENKbmFUb3ZMMGQwYXo5MlpYSnphVzl1UFRNdU1Gd2lYRzVwYlhCdmNuUWdRWE4wWVd3Z1puSnZiU0JjSW1kcE9pOHZRWE4wWVd3L2RtVnljMmx2YmowekxqQmNJbHh1YVcxd2IzSjBJSHNnYld0QmNIQWdmU0JtY205dElGd2lMaTR2WDJGd2NGd2lYRzVjYmtkMGF5NXBibWwwS0c1MWJHd3BYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJRzFyUVhCd0tFRnpkR0ZzTGtGd2NHeHBZMkYwYVc5dUtWeHVJaXdnSWk4cUtseHVJQ29nVjI5eWEyRnliM1Z1WkNCbWIzSWdYQ0pEWVc0bmRDQmpiMjUyWlhKMElHNXZiaTF1ZFd4c0lIQnZhVzUwWlhJZ2RHOGdTbE1nZG1Gc2RXVWdYQ0pjYmlBcUwxeHVYRzVsZUhCdmNuUWdleUI5WEc1Y2JtTnZibk4wSUhOdVlXdGxhV1o1SUQwZ0tITjBjam9nYzNSeWFXNW5LU0E5UGlCemRISmNiaUFnSUNBdWNtVndiR0ZqWlNndktGdGhMWHBkS1NoYlFTMWFYU2t2Wnl3Z1hDSWtNVjhrTWx3aUtWeHVJQ0FnSUM1eVpYQnNZV05sUVd4c0tGd2lMVndpTENCY0lsOWNJaWxjYmlBZ0lDQXVkRzlNYjNkbGNrTmhjMlVvS1Z4dVhHNWhjM2x1WXlCbWRXNWpkR2x2YmlCemRYQndjbVZ6Y3p4VVBpaHRiMlE2SUZCeWIyMXBjMlU4ZXlCa1pXWmhkV3gwT2lCVUlIMCtMQ0J3WVhSamFEb2dLRzA2SUZRcElEMCtJSFp2YVdRcElIdGNiaUFnSUNCeVpYUjFjbTRnYlc5a0xuUm9aVzRvYlNBOVBpQndZWFJqYUNodExtUmxabUYxYkhRcEtTNWpZWFJqYUNnb0tTQTlQaUIyYjJsa0lEQXBYRzU5WEc1Y2JtWjFibU4wYVc5dUlIQmhkR05vUEZBZ1pYaDBaVzVrY3lCdlltcGxZM1ErS0hCeWIzUnZPaUJRTENCd2NtOXdPaUJGZUhSeVlXTjBQR3RsZVc5bUlGQXNJSE4wY21sdVp6NHBJSHRjYmlBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvY0hKdmRHOHNJSEJ5YjNBc0lIdGNiaUFnSUNBZ0lDQWdaMlYwS0NrZ2V5QnlaWFIxY200Z2RHaHBjMXRnWjJWMFh5UjdjMjVoYTJWcFpua29jSEp2Y0NsOVlGMG9LU0I5TEZ4dUlDQWdJSDBwWEc1OVhHNWNibUYzWVdsMElITjFjSEJ5WlhOektHbHRjRzl5ZENoY0ltZHBPaTh2UVhOMFlXeEJjSEJ6WENJcExDQW9leUJCY0hCekxDQkJjSEJzYVdOaGRHbHZiaUI5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvUVhCd2N5NXdjbTkwYjNSNWNHVXNJRndpYkdsemRGd2lLVnh1SUNBZ0lIQmhkR05vS0VGd2NHeHBZMkYwYVc5dUxuQnliM1J2ZEhsd1pTd2dYQ0pyWlhsM2IzSmtjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFRndjR3hwWTJGMGFXOXVMbkJ5YjNSdmRIbHdaU3dnWENKallYUmxaMjl5YVdWelhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1FtRjBkR1Z5ZVZ3aUtTd2dLSHNnVlZCdmQyVnlJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hWVUc5M1pYSXVjSEp2ZEc5MGVYQmxMQ0JjSW1SbGRtbGpaWE5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hDYkhWbGRHOXZkR2hjSWlrc0lDaDdJRUZrWVhCMFpYSXNJRUpzZFdWMGIyOTBhQ3dnUkdWMmFXTmxJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hCWkdGd2RHVnlMbkJ5YjNSdmRIbHdaU3dnWENKMWRXbGtjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFSnNkV1YwYjI5MGFDNXdjbTkwYjNSNWNHVXNJRndpWVdSaGNIUmxjbk5jSWlsY2JpQWdJQ0J3WVhSamFDaENiSFZsZEc5dmRHZ3VjSEp2ZEc5MGVYQmxMQ0JjSW1SbGRtbGpaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaEVaWFpwWTJVdWNISnZkRzkwZVhCbExDQmNJblYxYVdSelhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1NIbHdjbXhoYm1SY0lpa3NJQ2g3SUVoNWNISnNZVzVrTENCTmIyNXBkRzl5TENCWGIzSnJjM0JoWTJVZ2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tFaDVjSEpzWVc1a0xuQnliM1J2ZEhsd1pTd2dYQ0ppYVc1a2Mxd2lLVnh1SUNBZ0lIQmhkR05vS0VoNWNISnNZVzVrTG5CeWIzUnZkSGx3WlN3Z1hDSnRiMjVwZEc5eWMxd2lLVnh1SUNBZ0lIQmhkR05vS0VoNWNISnNZVzVrTG5CeWIzUnZkSGx3WlN3Z1hDSjNiM0pyYzNCaFkyVnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1NIbHdjbXhoYm1RdWNISnZkRzkwZVhCbExDQmNJbU5zYVdWdWRITmNJaWxjYmlBZ0lDQndZWFJqYUNoTmIyNXBkRzl5TG5CeWIzUnZkSGx3WlN3Z1hDSmhkbUZwYkdGaWJHVk5iMlJsYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRTF2Ym1sMGIzSXVjSEp2ZEc5MGVYQmxMQ0JjSW1GMllXbHNZV0pzWlY5dGIyUmxjMXdpS1Z4dUlDQWdJSEJoZEdOb0tGZHZjbXR6Y0dGalpTNXdjbTkwYjNSNWNHVXNJRndpWTJ4cFpXNTBjMXdpS1Z4dWZTbGNibHh1WVhkaGFYUWdjM1Z3Y0hKbGMzTW9hVzF3YjNKMEtGd2laMms2THk5QmMzUmhiRTF3Y21selhDSXBMQ0FvZXlCTmNISnBjeXdnVUd4aGVXVnlJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hOY0hKcGN5NXdjbTkwYjNSNWNHVXNJRndpY0d4aGVXVnljMXdpS1Z4dUlDQWdJSEJoZEdOb0tGQnNZWGxsY2k1d2NtOTBiM1I1Y0dVc0lGd2ljM1Z3Y0c5eWRHVmtYM1Z5YVY5elkyaGxiV1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29VR3hoZVdWeUxuQnliM1J2ZEhsd1pTd2dYQ0p6ZFhCd2IzSjBaV1JWY21sVFkyaGxiV1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29VR3hoZVdWeUxuQnliM1J2ZEhsd1pTd2dYQ0p6ZFhCd2IzSjBaV1JmYldsdFpWOTBlWEJsYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRkJzWVhsbGNpNXdjbTkwYjNSNWNHVXNJRndpYzNWd2NHOXlkR1ZrVFdsdFpWUjVjR1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29VR3hoZVdWeUxuQnliM1J2ZEhsd1pTd2dYQ0pqYjIxdFpXNTBjMXdpS1Z4dWZTbGNibHh1WVhkaGFYUWdjM1Z3Y0hKbGMzTW9hVzF3YjNKMEtGd2laMms2THk5QmMzUmhiRTVsZEhkdmNtdGNJaWtzSUNoN0lGZHBabWtnZlNrZ1BUNGdlMXh1SUNBZ0lIQmhkR05vS0ZkcFpta3VjSEp2ZEc5MGVYQmxMQ0JjSW1GalkyVnpjMTl3YjJsdWRITmNJaWxjYmlBZ0lDQndZWFJqYUNoWGFXWnBMbkJ5YjNSdmRIbHdaU3dnWENKaFkyTmxjM05RYjJsdWRITmNJaWxjYm4wcFhHNWNibUYzWVdsMElITjFjSEJ5WlhOektHbHRjRzl5ZENoY0ltZHBPaTh2UVhOMFlXeE9iM1JwWm1SY0lpa3NJQ2g3SUU1dmRHbG1aQ3dnVG05MGFXWnBZMkYwYVc5dUlIMHBJRDArSUh0Y2JpQWdJQ0J3WVhSamFDaE9iM1JwWm1RdWNISnZkRzkwZVhCbExDQmNJbTV2ZEdsbWFXTmhkR2x2Ym5OY0lpbGNiaUFnSUNCd1lYUmphQ2hPYjNScFptbGpZWFJwYjI0dWNISnZkRzkwZVhCbExDQmNJbUZqZEdsdmJuTmNJaWxjYm4wcFhHNWNibUYzWVdsMElITjFjSEJ5WlhOektHbHRjRzl5ZENoY0ltZHBPaTh2UVhOMFlXeFFiM2RsY2xCeWIyWnBiR1Z6WENJcExDQW9leUJRYjNkbGNsQnliMlpwYkdWeklIMHBJRDArSUh0Y2JpQWdJQ0J3WVhSamFDaFFiM2RsY2xCeWIyWnBiR1Z6TG5CeWIzUnZkSGx3WlN3Z1hDSmhZM1JwYjI1elhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1YzQmNJaWtzSUNoN0lGZHdMQ0JCZFdScGJ5d2dWbWxrWlc4Z2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tGZHdMbkJ5YjNSdmRIbHdaU3dnWENKbGJtUndiMmx1ZEhOY0lpbGNiaUFnSUNCd1lYUmphQ2hYY0M1d2NtOTBiM1I1Y0dVc0lGd2laR1YyYVdObGMxd2lLVnh1SUNBZ0lIQmhkR05vS0VGMVpHbHZMbkJ5YjNSdmRIbHdaU3dnWENKemRISmxZVzF6WENJcFhHNGdJQ0FnY0dGMFkyZ29RWFZrYVc4dWNISnZkRzkwZVhCbExDQmNJbkpsWTI5eVpHVnljMXdpS1Z4dUlDQWdJSEJoZEdOb0tFRjFaR2x2TG5CeWIzUnZkSGx3WlN3Z1hDSnRhV055YjNCb2IyNWxjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFRjFaR2x2TG5CeWIzUnZkSGx3WlN3Z1hDSnpjR1ZoYTJWeWMxd2lLVnh1SUNBZ0lIQmhkR05vS0VGMVpHbHZMbkJ5YjNSdmRIbHdaU3dnWENKa1pYWnBZMlZ6WENJcFhHNGdJQ0FnY0dGMFkyZ29WbWxrWlc4dWNISnZkRzkwZVhCbExDQmNJbk4wY21WaGJYTmNJaWxjYmlBZ0lDQndZWFJqYUNoV2FXUmxieTV3Y205MGIzUjVjR1VzSUZ3aWNtVmpiM0prWlhKelhDSXBYRzRnSUNBZ2NHRjBZMmdvVm1sa1pXOHVjSEp2ZEc5MGVYQmxMQ0JjSW5OcGJtdHpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1ZtbGtaVzh1Y0hKdmRHOTBlWEJsTENCY0luTnZkWEpqWlhOY0lpbGNiaUFnSUNCd1lYUmphQ2hXYVdSbGJ5NXdjbTkwYjNSNWNHVXNJRndpWkdWMmFXTmxjMXdpS1Z4dWZTbGNiaUlzSUNKcGJYQnZjblFnWENJdUwyOTJaWEp5YVdSbGN5NXFjMXdpWEc1cGJYQnZjblFnZXlCelpYUkRiMjV6YjJ4bFRHOW5SRzl0WVdsdUlIMGdabkp2YlNCY0ltTnZibk52YkdWY0lseHVhVzF3YjNKMElIc2daWGhwZEN3Z2NISnZaM0poYlVGeVozTWdmU0JtY205dElGd2ljM2x6ZEdWdFhDSmNibWx0Y0c5eWRDQkpUeUJtY205dElGd2laMms2THk5QmMzUmhiRWxQWENKY2JtbHRjRzl5ZENCSFQySnFaV04wSUdaeWIyMGdYQ0puYVRvdkwwZFBZbXBsWTNSY0lseHVhVzF3YjNKMElFZHBieUJtY205dElGd2laMms2THk5SGFXOC9kbVZ5YzJsdmJqMHlMakJjSWx4dWFXMXdiM0owSUhSNWNHVWdRWE4wWVd3eklHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1AzWmxjbk5wYjI0OU15NHdYQ0pjYm1sdGNHOXlkQ0IwZVhCbElFRnpkR0ZzTkNCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkQ5MlpYSnphVzl1UFRRdU1Gd2lYRzVjYm5SNWNHVWdRMjl1Wm1sbklEMGdVR0Z5ZEdsaGJEeDdYRzRnSUNBZ2FXNXpkR0Z1WTJWT1lXMWxPaUJ6ZEhKcGJtZGNiaUFnSUNCamMzTTZJSE4wY21sdVoxeHVJQ0FnSUdsamIyNXpPaUJ6ZEhKcGJtZGNiaUFnSUNCbmRHdFVhR1Z0WlRvZ2MzUnlhVzVuWEc0Z0lDQWdhV052YmxSb1pXMWxPaUJ6ZEhKcGJtZGNiaUFnSUNCamRYSnpiM0pVYUdWdFpUb2djM1J5YVc1blhHNGdJQ0FnYUc5c1pEb2dZbTl2YkdWaGJseHVJQ0FnSUhKbGNYVmxjM1JJWVc1a2JHVnlLSEpsY1hWbGMzUTZJSE4wY21sdVp5d2djbVZ6T2lBb2NtVnpjRzl1YzJVNklHRnVlU2tnUFQ0Z2RtOXBaQ2s2SUhadmFXUmNiaUFnSUNCdFlXbHVLQzR1TG1GeVozTTZJSE4wY21sdVoxdGRLVG9nZG05cFpGeHVJQ0FnSUdOc2FXVnVkQ2h0WlhOellXZGxPaUFvYlhObk9pQnpkSEpwYm1jcElEMCtJSE4wY21sdVp5d2dMaTR1WVhKbmN6b2djM1J5YVc1blcxMHBPaUIyYjJsa1hHNTlQbHh1WEc1cGJuUmxjbVpoWTJVZ1FYTjBZV3d6U2xNZ1pYaDBaVzVrY3lCQmMzUmhiRE11UVhCd2JHbGpZWFJwYjI0Z2UxeHVJQ0FnSUdWMllXd29ZbTlrZVRvZ2MzUnlhVzVuS1RvZ1VISnZiV2x6WlR4aGJuaytYRzRnSUNBZ2NtVnhkV1Z6ZEVoaGJtUnNaWEk2SUVOdmJtWnBaMXRjSW5KbGNYVmxjM1JJWVc1a2JHVnlYQ0pkWEc0Z0lDQWdZWEJ3YkhsZlkzTnpLSE4wZVd4bE9pQnpkSEpwYm1jc0lISmxjMlYwUHpvZ1ltOXZiR1ZoYmlrNklIWnZhV1JjYmlBZ0lDQnhkV2wwS0dOdlpHVS9PaUJ1ZFcxaVpYSXBPaUIyYjJsa1hHNGdJQ0FnYzNSaGNuUW9ZMjl1Wm1sblB6b2dRMjl1Wm1sbktUb2dkbTlwWkZ4dWZWeHVYRzVwYm5SbGNtWmhZMlVnUVhOMFlXdzBTbE1nWlhoMFpXNWtjeUJCYzNSaGJEUXVRWEJ3YkdsallYUnBiMjRnZTF4dUlDQWdJR1YyWVd3b1ltOWtlVG9nYzNSeWFXNW5LVG9nVUhKdmJXbHpaVHhoYm5rK1hHNGdJQ0FnY21WeGRXVnpkRWhoYm1Sc1pYSS9PaUJEYjI1bWFXZGJYQ0p5WlhGMVpYTjBTR0Z1Wkd4bGNsd2lYVnh1SUNBZ0lHRndjR3g1WDJOemN5aHpkSGxzWlRvZ2MzUnlhVzVuTENCeVpYTmxkRDg2SUdKdmIyeGxZVzRwT2lCMmIybGtYRzRnSUNBZ2NYVnBkQ2hqYjJSbFB6b2diblZ0WW1WeUtUb2dkbTlwWkZ4dUlDQWdJSE4wWVhKMEtHTnZibVpwWno4NklFTnZibVpwWnlrNklIWnZhV1JjYm4xY2JseHVkSGx3WlNCQmNIQXpJRDBnZEhsd1pXOW1JRUZ6ZEdGc015NUJjSEJzYVdOaGRHbHZibHh1ZEhsd1pTQkJjSEEwSUQwZ2RIbHdaVzltSUVGemRHRnNOQzVCY0hCc2FXTmhkR2x2Ymx4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2JXdEJjSEE4UVhCd0lHVjRkR1Z1WkhNZ1FYQndNejRvUVhCd09pQkJjSEFwT2lCQmMzUmhiRE5LVTF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUcxclFYQndQRUZ3Y0NCbGVIUmxibVJ6SUVGd2NEUStLRUZ3Y0RvZ1FYQndLVG9nUVhOMFlXdzBTbE5jYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUcxclFYQndLRUZ3Y0RvZ1FYQndNeUI4SUVGd2NEUXBJSHRjYmlBZ0lDQnlaWFIxY200Z2JtVjNJQ2hqYkdGemN5QkJjM1JoYkVwVElHVjRkR1Z1WkhNZ1FYQndJSHRjYmlBZ0lDQWdJQ0FnYzNSaGRHbGpJSHNnUjA5aWFtVmpkQzV5WldkcGMzUmxja05zWVhOektIc2dSMVI1Y0dWT1lXMWxPaUJjSWtGemRHRnNTbE5jSWlCOUxDQjBhR2x6SUdGeklHRnVlU2tnZlZ4dVhHNGdJQ0FnSUNBZ0lHVjJZV3dvWW05a2VUb2djM1J5YVc1bktUb2dVSEp2YldselpUeGhibmsrSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVUhKdmJXbHpaU2dvY21WekxDQnlaV29wSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCbWJpQTlJRVoxYm1OMGFXOXVLR0J5WlhSMWNtNGdLR0Z6ZVc1aklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKSHRpYjJSNUxtbHVZMngxWkdWektGd2lPMXdpS1NBL0lHSnZaSGtnT2lCZ2NtVjBkWEp1SUNSN1ltOWtlWDA3WUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2xnS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iaWdwS0NrdWRHaGxiaWh5WlhNcExtTmhkR05vS0hKbGFpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5Wldvb1pYSnliM0lwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lISmxjWFZsYzNSSVlXNWtiR1Z5UHpvZ1EyOXVabWxuVzF3aWNtVnhkV1Z6ZEVoaGJtUnNaWEpjSWwxY2JseHVJQ0FnSUNBZ0lDQjJablZ1WTE5eVpYRjFaWE4wS0cxelp6b2djM1J5YVc1bkxDQmpiMjV1T2lCSGFXOHVVMjlqYTJWMFEyOXVibVZqZEdsdmJpazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMGFHbHpMbkpsY1hWbGMzUklZVzVrYkdWeUlEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGNYVmxjM1JJWVc1a2JHVnlLRzF6Wnl3Z0tISmxjM0J2Ym5ObEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFbFBMbmR5YVhSbFgzTnZZMnNvWTI5dWJpd2dVM1J5YVc1bktISmxjM0J2Ym5ObEtTd2dLRjhzSUhKbGN5a2dQVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRWxQTG5keWFYUmxYM052WTJ0ZlptbHVhWE5vS0hKbGN5a3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZFhCbGNpNTJablZ1WTE5eVpYRjFaWE4wS0cxelp5d2dZMjl1YmlsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHRndjR3g1WDJOemN5aHpkSGxzWlRvZ2MzUnlhVzVuTENCeVpYTmxkQ0E5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkWEJsY2k1aGNIQnNlVjlqYzNNb2MzUjViR1VzSUhKbGMyVjBLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NYVnBkQ2hqYjJSbFB6b2diblZ0WW1WeUtUb2dkbTlwWkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZFhCbGNpNXhkV2wwS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJR1Y0YVhRb1kyOWtaU0EvUHlBd0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYzNSaGNuUW9leUJ5WlhGMVpYTjBTR0Z1Wkd4bGNpd2dZM056TENCb2IyeGtMQ0J0WVdsdUxDQmpiR2xsYm5Rc0lHbGpiMjV6TENBdUxpNWpabWNnZlRvZ1EyOXVabWxuSUQwZ2UzMHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdGd2NDQTlJSFJvYVhNZ1lYTWdkVzVyYm05M2JpQmhjeUJKYm5OMFlXNWpaVlI1Y0dVOFFYQndNeUI4SUVGd2NEUStYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNhV1Z1ZENBL1B6MGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnlhVzUwS0dCQmMzUmhiQ0JwYm5OMFlXNWpaU0JjSWlSN1lYQndMbWx1YzNSaGJtTmxUbUZ0WlgxY0lpQmhiSEpsWVdSNUlISjFibTVwYm1kZ0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVjRhWFFvTVNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdUMkpxWldOMExtRnpjMmxuYmloMGFHbHpMQ0JqWm1jcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J6WlhSRGIyNXpiMnhsVEc5blJHOXRZV2x1S0dGd2NDNXBibk4wWVc1alpVNWhiV1VwWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNtVnhkV1Z6ZEVoaGJtUnNaWElnUFNCeVpYRjFaWE4wU0dGdVpHeGxjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lYQndMbU52Ym01bFkzUW9YQ0poWTNScGRtRjBaVndpTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGcGJqOHVLQzR1TG5CeWIyZHlZVzFCY21kektWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhjSEF1WVdOeGRXbHlaVjl6YjJOclpYUW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1pYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTJ4cFpXNTBLRzF6WnlBOVBpQkpUeTV6Wlc1a1gzSmxjWFZsYzNRb1lYQndMbWx1YzNSaGJtTmxUbUZ0WlN3Z2JYTm5LU0VzSUM0dUxuQnliMmR5WVcxQmNtZHpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZM056S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZWEJ3YkhsZlkzTnpLR056Y3l3Z1ptRnNjMlVwWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocFkyOXVjeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoY0hBdVlXUmtYMmxqYjI1ektHbGpiMjV6S1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JvYjJ4a0lEOC9QU0IwY25WbFhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FHOXNaQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoY0hBdWFHOXNaQ2dwWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR0Z3Y0M1eWRXNUJjM2x1WXloYlhTbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMHBYRzU5WEc0aUxDQWlMeW9nWlhOc2FXNTBMV1JwYzJGaWJHVWdiV0Y0TFd4bGJpQXFMMXh1YVcxd2IzSjBJRUZ6ZEdGc0lHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1AzWmxjbk5wYjI0OU15NHdYQ0pjYm1sdGNHOXlkQ0JIZEdzZ1puSnZiU0JjSW1kcE9pOHZSM1JyUDNabGNuTnBiMjQ5TXk0d1hDSmNibWx0Y0c5eWRDQkhUMkpxWldOMElHWnliMjBnWENKbmFUb3ZMMGRQWW1wbFkzUmNJbHh1YVcxd2IzSjBJR0Z6ZEdGc2FXWjVMQ0I3SUhSNWNHVWdRMjl1YzNSeWRXTjBVSEp2Y0hNc0lIUjVjR1VnUW1sdVpHRmliR1ZEYUdsc1pDQjlJR1p5YjIwZ1hDSXVMMkZ6ZEdGc2FXWjVMbXB6WENKY2JseHVablZ1WTNScGIyNGdabWxzZEdWeUtHTm9hV3hrY21WdU9pQmhibmxiWFNrZ2UxeHVJQ0FnSUhKbGRIVnliaUJqYUdsc1pISmxiaTVtYkdGMEtFbHVabWx1YVhSNUtTNXRZWEFvWTJnZ1BUNGdZMmdnYVc1emRHRnVZMlZ2WmlCSGRHc3VWMmxrWjJWMFhHNGdJQ0FnSUNBZ0lEOGdZMmhjYmlBZ0lDQWdJQ0FnT2lCdVpYY2dSM1JyTGt4aFltVnNLSHNnZG1semFXSnNaVG9nZEhKMVpTd2diR0ZpWld3NklGTjBjbWx1WnloamFDa2dmU2twWEc1OVhHNWNiaTh2SUVKdmVGeHVUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0VGemRHRnNMa0p2ZUM1d2NtOTBiM1I1Y0dVc0lGd2lZMmhwYkdSeVpXNWNJaXdnZTF4dUlDQWdJR2RsZENncElIc2djbVYwZFhKdUlIUm9hWE11WjJWMFgyTm9hV3hrY21WdUtDa2dmU3hjYmlBZ0lDQnpaWFFvZGlrZ2V5QjBhR2x6TG5ObGRGOWphR2xzWkhKbGJpaDJLU0I5TEZ4dWZTbGNibHh1Wlhod2IzSjBJSFI1Y0dVZ1FtOTRVSEp2Y0hNZ1BTQkRiMjV6ZEhKMVkzUlFjbTl3Y3p4Q2IzZ3NJRUZ6ZEdGc0xrSnZlQzVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1Wlhod2IzSjBJR05zWVhOeklFSnZlQ0JsZUhSbGJtUnpJR0Z6ZEdGc2FXWjVLRUZ6ZEdGc0xrSnZlQ2tnZTF4dUlDQWdJSE4wWVhScFl5QjdJRWRQWW1wbFkzUXVjbVZuYVhOMFpYSkRiR0Z6Y3loN0lFZFVlWEJsVG1GdFpUb2dYQ0pDYjNoY0lpQjlMQ0IwYUdsektTQjlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9jSEp2Y0hNL09pQkNiM2hRY205d2N5d2dMaTR1WTJocGJHUnlaVzQ2SUVGeWNtRjVQRUpwYm1SaFlteGxRMmhwYkdRK0tTQjdJSE4xY0dWeUtIc2dZMmhwYkdSeVpXNHNJQzR1TG5CeWIzQnpJSDBnWVhNZ1lXNTVLU0I5WEc0Z0lDQWdjSEp2ZEdWamRHVmtJSE5sZEVOb2FXeGtjbVZ1S0dOb2FXeGtjbVZ1T2lCaGJubGJYU2s2SUhadmFXUWdleUIwYUdsekxuTmxkRjlqYUdsc1pISmxiaWhtYVd4MFpYSW9ZMmhwYkdSeVpXNHBLU0I5WEc1OVhHNWNiaTh2SUVKMWRIUnZibHh1Wlhod2IzSjBJSFI1Y0dVZ1FuVjBkRzl1VUhKdmNITWdQU0JEYjI1emRISjFZM1JRY205d2N6eENkWFIwYjI0c0lFRnpkR0ZzTGtKMWRIUnZiaTVEYjI1emRISjFZM1J2Y2xCeWIzQnpMQ0I3WEc0Z0lDQWdiMjVEYkdsamEyVmtPaUJiWFZ4dUlDQWdJRzl1UTJ4cFkyczZJRnRsZG1WdWREb2dRWE4wWVd3dVEyeHBZMnRGZG1WdWRGMWNiaUFnSUNCdmJrTnNhV05yVW1Wc1pXRnpaVG9nVzJWMlpXNTBPaUJCYzNSaGJDNURiR2xqYTBWMlpXNTBYVnh1SUNBZ0lHOXVTRzkyWlhJNklGdGxkbVZ1ZERvZ1FYTjBZV3d1U0c5MlpYSkZkbVZ1ZEYxY2JpQWdJQ0J2YmtodmRtVnlURzl6ZERvZ1cyVjJaVzUwT2lCQmMzUmhiQzVJYjNabGNrVjJaVzUwWFZ4dUlDQWdJRzl1VTJOeWIyeHNPaUJiWlhabGJuUTZJRUZ6ZEdGc0xsTmpjbTlzYkVWMlpXNTBYVnh1ZlQ1Y2JtVjRjRzl5ZENCamJHRnpjeUJDZFhSMGIyNGdaWGgwWlc1a2N5QmhjM1JoYkdsbWVTaEJjM1JoYkM1Q2RYUjBiMjRwSUh0Y2JpQWdJQ0J6ZEdGMGFXTWdleUJIVDJKcVpXTjBMbkpsWjJsemRHVnlRMnhoYzNNb2V5QkhWSGx3WlU1aGJXVTZJRndpUW5WMGRHOXVYQ0lnZlN3Z2RHaHBjeWtnZlZ4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0hCeWIzQnpQem9nUW5WMGRHOXVVSEp2Y0hNc0lHTm9hV3hrUHpvZ1FtbHVaR0ZpYkdWRGFHbHNaQ2tnZXlCemRYQmxjaWg3SUdOb2FXeGtMQ0F1TGk1d2NtOXdjeUI5SUdGeklHRnVlU2tnZlZ4dWZWeHVYRzR2THlCRFpXNTBaWEpDYjNoY2JtVjRjRzl5ZENCMGVYQmxJRU5sYm5SbGNrSnZlRkJ5YjNCeklEMGdRMjl1YzNSeWRXTjBVSEp2Y0hNOFEyVnVkR1Z5UW05NExDQkJjM1JoYkM1RFpXNTBaWEpDYjNndVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JtVjRjRzl5ZENCamJHRnpjeUJEWlc1MFpYSkNiM2dnWlhoMFpXNWtjeUJoYzNSaGJHbG1lU2hCYzNSaGJDNURaVzUwWlhKQ2IzZ3BJSHRjYmlBZ0lDQnpkR0YwYVdNZ2V5QkhUMkpxWldOMExuSmxaMmx6ZEdWeVEyeGhjM01vZXlCSFZIbHdaVTVoYldVNklGd2lRMlZ1ZEdWeVFtOTRYQ0lnZlN3Z2RHaHBjeWtnZlZ4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0hCeWIzQnpQem9nUTJWdWRHVnlRbTk0VUhKdmNITXNJQzR1TG1Ob2FXeGtjbVZ1T2lCQmNuSmhlVHhDYVc1a1lXSnNaVU5vYVd4a1Bpa2dleUJ6ZFhCbGNpaDdJR05vYVd4a2NtVnVMQ0F1TGk1d2NtOXdjeUI5SUdGeklHRnVlU2tnZlZ4dUlDQWdJSEJ5YjNSbFkzUmxaQ0J6WlhSRGFHbHNaSEpsYmloamFHbHNaSEpsYmpvZ1lXNTVXMTBwT2lCMmIybGtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZMmdnUFNCbWFXeDBaWElvWTJocGJHUnlaVzRwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVjM1JoY25SWGFXUm5aWFFnUFNCamFGc3dYU0I4ZkNCdVpYY2dSM1JyTGtKdmVGeHVJQ0FnSUNBZ0lDQjBhR2x6TG1ObGJuUmxjbGRwWkdkbGRDQTlJR05vV3pGZElIeDhJRzVsZHlCSGRHc3VRbTk0WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaVzVrVjJsa1oyVjBJRDBnWTJoYk1sMGdmSHdnYm1WM0lFZDBheTVDYjNoY2JpQWdJQ0I5WEc1OVhHNWNiaTh2SUVOcGNtTjFiR0Z5VUhKdlozSmxjM05jYm1WNGNHOXlkQ0IwZVhCbElFTnBjbU4xYkdGeVVISnZaM0psYzNOUWNtOXdjeUE5SUVOdmJuTjBjblZqZEZCeWIzQnpQRU5wY21OMWJHRnlVSEp2WjNKbGMzTXNJRUZ6ZEdGc0xrTnBjbU4xYkdGeVVISnZaM0psYzNNdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JtVjRjRzl5ZENCamJHRnpjeUJEYVhKamRXeGhjbEJ5YjJkeVpYTnpJR1Y0ZEdWdVpITWdZWE4wWVd4cFpua29RWE4wWVd3dVEybHlZM1ZzWVhKUWNtOW5jbVZ6Y3lrZ2UxeHVJQ0FnSUhOMFlYUnBZeUI3SUVkUFltcGxZM1F1Y21WbmFYTjBaWEpEYkdGemN5aDdJRWRVZVhCbFRtRnRaVG9nWENKRGFYSmpkV3hoY2xCeWIyZHlaWE56WENJZ2ZTd2dkR2hwY3lrZ2ZWeHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtIQnliM0J6UHpvZ1EybHlZM1ZzWVhKUWNtOW5jbVZ6YzFCeWIzQnpMQ0JqYUdsc1pEODZJRUpwYm1SaFlteGxRMmhwYkdRcElIc2djM1Z3WlhJb2V5QmphR2xzWkN3Z0xpNHVjSEp2Y0hNZ2ZTQmhjeUJoYm5rcElIMWNibjFjYmx4dUx5OGdSSEpoZDJsdVowRnlaV0ZjYm1WNGNHOXlkQ0IwZVhCbElFUnlZWGRwYm1kQmNtVmhVSEp2Y0hNZ1BTQkRiMjV6ZEhKMVkzUlFjbTl3Y3p4RWNtRjNhVzVuUVhKbFlTd2dSM1JyTGtSeVlYZHBibWRCY21WaExrTnZibk4wY25WamRHOXlVSEp2Y0hNc0lIdGNiaUFnSUNCdmJrUnlZWGM2SUZ0amNqb2dZVzU1WFNBdkx5QlVUMFJQT2lCallXbHlieUIwZVhCbGMxeHVmVDVjYm1WNGNHOXlkQ0JqYkdGemN5QkVjbUYzYVc1blFYSmxZU0JsZUhSbGJtUnpJR0Z6ZEdGc2FXWjVLRWQwYXk1RWNtRjNhVzVuUVhKbFlTa2dlMXh1SUNBZ0lITjBZWFJwWXlCN0lFZFBZbXBsWTNRdWNtVm5hWE4wWlhKRGJHRnpjeWg3SUVkVWVYQmxUbUZ0WlRvZ1hDSkVjbUYzYVc1blFYSmxZVndpSUgwc0lIUm9hWE1wSUgxY2JpQWdJQ0JqYjI1emRISjFZM1J2Y2lod2NtOXdjejg2SUVSeVlYZHBibWRCY21WaFVISnZjSE1wSUhzZ2MzVndaWElvY0hKdmNITWdZWE1nWVc1NUtTQjlYRzU5WEc1Y2JpOHZJRVZ1ZEhKNVhHNWxlSEJ2Y25RZ2RIbHdaU0JGYm5SeWVWQnliM0J6SUQwZ1EyOXVjM1J5ZFdOMFVISnZjSE04Ulc1MGNua3NJRWQwYXk1RmJuUnllUzVEYjI1emRISjFZM1J2Y2xCeWIzQnpMQ0I3WEc0Z0lDQWdiMjVEYUdGdVoyVmtPaUJiWFZ4dUlDQWdJRzl1UVdOMGFYWmhkR1U2SUZ0ZFhHNTlQbHh1Wlhod2IzSjBJR05zWVhOeklFVnVkSEo1SUdWNGRHVnVaSE1nWVhOMFlXeHBabmtvUjNSckxrVnVkSEo1S1NCN1hHNGdJQ0FnYzNSaGRHbGpJSHNnUjA5aWFtVmpkQzV5WldkcGMzUmxja05zWVhOektIc2dSMVI1Y0dWT1lXMWxPaUJjSWtWdWRISjVYQ0lnZlN3Z2RHaHBjeWtnZlZ4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0hCeWIzQnpQem9nUlc1MGNubFFjbTl3Y3lrZ2V5QnpkWEJsY2lod2NtOXdjeUJoY3lCaGJua3BJSDFjYm4xY2JseHVMeThnUlhabGJuUkNiM2hjYm1WNGNHOXlkQ0IwZVhCbElFVjJaVzUwUW05NFVISnZjSE1nUFNCRGIyNXpkSEoxWTNSUWNtOXdjenhGZG1WdWRFSnZlQ3dnUVhOMFlXd3VSWFpsYm5SQ2IzZ3VRMjl1YzNSeWRXTjBiM0pRY205d2N5d2dlMXh1SUNBZ0lHOXVRMnhwWTJzNklGdGxkbVZ1ZERvZ1FYTjBZV3d1UTJ4cFkydEZkbVZ1ZEYxY2JpQWdJQ0J2YmtOc2FXTnJVbVZzWldGelpUb2dXMlYyWlc1ME9pQkJjM1JoYkM1RGJHbGphMFYyWlc1MFhWeHVJQ0FnSUc5dVNHOTJaWEk2SUZ0bGRtVnVkRG9nUVhOMFlXd3VTRzkyWlhKRmRtVnVkRjFjYmlBZ0lDQnZia2h2ZG1WeVRHOXpkRG9nVzJWMlpXNTBPaUJCYzNSaGJDNUliM1psY2tWMlpXNTBYVnh1SUNBZ0lHOXVVMk55YjJ4c09pQmJaWFpsYm5RNklFRnpkR0ZzTGxOamNtOXNiRVYyWlc1MFhWeHVmVDVjYm1WNGNHOXlkQ0JqYkdGemN5QkZkbVZ1ZEVKdmVDQmxlSFJsYm1SeklHRnpkR0ZzYVdaNUtFRnpkR0ZzTGtWMlpXNTBRbTk0S1NCN1hHNGdJQ0FnYzNSaGRHbGpJSHNnUjA5aWFtVmpkQzV5WldkcGMzUmxja05zWVhOektIc2dSMVI1Y0dWT1lXMWxPaUJjSWtWMlpXNTBRbTk0WENJZ2ZTd2dkR2hwY3lrZ2ZWeHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtIQnliM0J6UHpvZ1JYWmxiblJDYjNoUWNtOXdjeXdnWTJocGJHUS9PaUJDYVc1a1lXSnNaVU5vYVd4a0tTQjdJSE4xY0dWeUtIc2dZMmhwYkdRc0lDNHVMbkJ5YjNCeklIMGdZWE1nWVc1NUtTQjlYRzU5WEc1Y2JpOHZJQzh2SUZSUFJFODZJRVpwZUdWa1hHNHZMeUF2THlCVVQwUlBPaUJHYkc5M1FtOTRYRzR2TDF4dUx5OGdTV052Ymx4dVpYaHdiM0owSUhSNWNHVWdTV052YmxCeWIzQnpJRDBnUTI5dWMzUnlkV04wVUhKdmNITThTV052Yml3Z1FYTjBZV3d1U1dOdmJpNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVaWGh3YjNKMElHTnNZWE56SUVsamIyNGdaWGgwWlc1a2N5QmhjM1JoYkdsbWVTaEJjM1JoYkM1SlkyOXVLU0I3WEc0Z0lDQWdjM1JoZEdsaklIc2dSMDlpYW1WamRDNXlaV2RwYzNSbGNrTnNZWE56S0hzZ1IxUjVjR1ZPWVcxbE9pQmNJa2xqYjI1Y0lpQjlMQ0IwYUdsektTQjlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9jSEp2Y0hNL09pQkpZMjl1VUhKdmNITXBJSHNnYzNWd1pYSW9jSEp2Y0hNZ1lYTWdZVzU1S1NCOVhHNTlYRzVjYmk4dklFeGhZbVZzWEc1bGVIQnZjblFnZEhsd1pTQk1ZV0psYkZCeWIzQnpJRDBnUTI5dWMzUnlkV04wVUhKdmNITThUR0ZpWld3c0lFRnpkR0ZzTGt4aFltVnNMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzVsZUhCdmNuUWdZMnhoYzNNZ1RHRmlaV3dnWlhoMFpXNWtjeUJoYzNSaGJHbG1lU2hCYzNSaGJDNU1ZV0psYkNrZ2UxeHVJQ0FnSUhOMFlYUnBZeUI3SUVkUFltcGxZM1F1Y21WbmFYTjBaWEpEYkdGemN5aDdJRWRVZVhCbFRtRnRaVG9nWENKTVlXSmxiRndpSUgwc0lIUm9hWE1wSUgxY2JpQWdJQ0JqYjI1emRISjFZM1J2Y2lod2NtOXdjejg2SUV4aFltVnNVSEp2Y0hNcElIc2djM1Z3WlhJb2NISnZjSE1nWVhNZ1lXNTVLU0I5WEc0Z0lDQWdjSEp2ZEdWamRHVmtJSE5sZEVOb2FXeGtjbVZ1S0dOb2FXeGtjbVZ1T2lCaGJubGJYU2s2SUhadmFXUWdleUIwYUdsekxteGhZbVZzSUQwZ1UzUnlhVzVuS0dOb2FXeGtjbVZ1S1NCOVhHNTlYRzVjYmk4dklFeGxkbVZzUW1GeVhHNWxlSEJ2Y25RZ2RIbHdaU0JNWlhabGJFSmhjbEJ5YjNCeklEMGdRMjl1YzNSeWRXTjBVSEp2Y0hNOFRHVjJaV3hDWVhJc0lFRnpkR0ZzTGt4bGRtVnNRbUZ5TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc1bGVIQnZjblFnWTJ4aGMzTWdUR1YyWld4Q1lYSWdaWGgwWlc1a2N5QmhjM1JoYkdsbWVTaEJjM1JoYkM1TVpYWmxiRUpoY2lrZ2UxeHVJQ0FnSUhOMFlYUnBZeUI3SUVkUFltcGxZM1F1Y21WbmFYTjBaWEpEYkdGemN5aDdJRWRVZVhCbFRtRnRaVG9nWENKTVpYWmxiRUpoY2x3aUlIMHNJSFJvYVhNcElIMWNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaHdjbTl3Y3o4NklFeGxkbVZzUW1GeVVISnZjSE1wSUhzZ2MzVndaWElvY0hKdmNITWdZWE1nWVc1NUtTQjlYRzU5WEc1Y2JpOHZJRlJQUkU4NklFeHBjM1JDYjNoY2JseHVMeThnVFdWdWRVSjFkSFJ2Ymx4dVpYaHdiM0owSUhSNWNHVWdUV1Z1ZFVKMWRIUnZibEJ5YjNCeklEMGdRMjl1YzNSeWRXTjBVSEp2Y0hNOFRXVnVkVUoxZEhSdmJpd2dSM1JyTGsxbGJuVkNkWFIwYjI0dVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JtVjRjRzl5ZENCamJHRnpjeUJOWlc1MVFuVjBkRzl1SUdWNGRHVnVaSE1nWVhOMFlXeHBabmtvUjNSckxrMWxiblZDZFhSMGIyNHBJSHRjYmlBZ0lDQnpkR0YwYVdNZ2V5QkhUMkpxWldOMExuSmxaMmx6ZEdWeVEyeGhjM01vZXlCSFZIbHdaVTVoYldVNklGd2lUV1Z1ZFVKMWRIUnZibHdpSUgwc0lIUm9hWE1wSUgxY2JpQWdJQ0JqYjI1emRISjFZM1J2Y2lod2NtOXdjejg2SUUxbGJuVkNkWFIwYjI1UWNtOXdjeXdnWTJocGJHUS9PaUJDYVc1a1lXSnNaVU5vYVd4a0tTQjdJSE4xY0dWeUtIc2dZMmhwYkdRc0lDNHVMbkJ5YjNCeklIMGdZWE1nWVc1NUtTQjlYRzU5WEc1Y2JpOHZJRTkyWlhKc1lYbGNiazlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoQmMzUmhiQzVQZG1WeWJHRjVMbkJ5YjNSdmRIbHdaU3dnWENKdmRtVnliR0Y1YzF3aUxDQjdYRzRnSUNBZ1oyVjBLQ2tnZXlCeVpYUjFjbTRnZEdocGN5NW5aWFJmYjNabGNteGhlWE1vS1NCOUxGeHVJQ0FnSUhObGRDaDJLU0I3SUhSb2FYTXVjMlYwWDI5MlpYSnNZWGx6S0hZcElIMHNYRzU5S1Z4dVhHNWxlSEJ2Y25RZ2RIbHdaU0JQZG1WeWJHRjVVSEp2Y0hNZ1BTQkRiMjV6ZEhKMVkzUlFjbTl3Y3p4UGRtVnliR0Y1TENCQmMzUmhiQzVQZG1WeWJHRjVMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzVsZUhCdmNuUWdZMnhoYzNNZ1QzWmxjbXhoZVNCbGVIUmxibVJ6SUdGemRHRnNhV1o1S0VGemRHRnNMazkyWlhKc1lYa3BJSHRjYmlBZ0lDQnpkR0YwYVdNZ2V5QkhUMkpxWldOMExuSmxaMmx6ZEdWeVEyeGhjM01vZXlCSFZIbHdaVTVoYldVNklGd2lUM1psY214aGVWd2lJSDBzSUhSb2FYTXBJSDFjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWh3Y205d2N6ODZJRTkyWlhKc1lYbFFjbTl3Y3l3Z0xpNHVZMmhwYkdSeVpXNDZJRUZ5Y21GNVBFSnBibVJoWW14bFEyaHBiR1ErS1NCN0lITjFjR1Z5S0hzZ1kyaHBiR1J5Wlc0c0lDNHVMbkJ5YjNCeklIMGdZWE1nWVc1NUtTQjlYRzRnSUNBZ2NISnZkR1ZqZEdWa0lITmxkRU5vYVd4a2NtVnVLR05vYVd4a2NtVnVPaUJoYm5sYlhTazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCYlkyaHBiR1FzSUM0dUxtOTJaWEpzWVhselhTQTlJR1pwYkhSbGNpaGphR2xzWkhKbGJpbGNiaUFnSUNBZ0lDQWdkR2hwY3k1elpYUmZZMmhwYkdRb1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMlYwWDI5MlpYSnNZWGx6S0c5MlpYSnNZWGx6S1Z4dUlDQWdJSDFjYm4xY2JseHVMeThnVW1WMlpXRnNaWEpjYm1WNGNHOXlkQ0IwZVhCbElGSmxkbVZoYkdWeVVISnZjSE1nUFNCRGIyNXpkSEoxWTNSUWNtOXdjenhTWlhabFlXeGxjaXdnUjNSckxsSmxkbVZoYkdWeUxrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNWxlSEJ2Y25RZ1kyeGhjM01nVW1WMlpXRnNaWElnWlhoMFpXNWtjeUJoYzNSaGJHbG1lU2hIZEdzdVVtVjJaV0ZzWlhJcElIdGNiaUFnSUNCemRHRjBhV01nZXlCSFQySnFaV04wTG5KbFoybHpkR1Z5UTJ4aGMzTW9leUJIVkhsd1pVNWhiV1U2SUZ3aVVtVjJaV0ZzWlhKY0lpQjlMQ0IwYUdsektTQjlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9jSEp2Y0hNL09pQlNaWFpsWVd4bGNsQnliM0J6TENCamFHbHNaRDg2SUVKcGJtUmhZbXhsUTJocGJHUXBJSHNnYzNWd1pYSW9leUJqYUdsc1pDd2dMaTR1Y0hKdmNITWdmU0JoY3lCaGJua3BJSDFjYm4xY2JseHVMeThnVTJOeWIyeHNZV0pzWlZ4dVpYaHdiM0owSUhSNWNHVWdVMk55YjJ4c1lXSnNaVkJ5YjNCeklEMGdRMjl1YzNSeWRXTjBVSEp2Y0hNOFUyTnliMnhzWVdKc1pTd2dRWE4wWVd3dVUyTnliMnhzWVdKc1pTNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVaWGh3YjNKMElHTnNZWE56SUZOamNtOXNiR0ZpYkdVZ1pYaDBaVzVrY3lCaGMzUmhiR2xtZVNoQmMzUmhiQzVUWTNKdmJHeGhZbXhsS1NCN1hHNGdJQ0FnYzNSaGRHbGpJSHNnUjA5aWFtVmpkQzV5WldkcGMzUmxja05zWVhOektIc2dSMVI1Y0dWT1lXMWxPaUJjSWxOamNtOXNiR0ZpYkdWY0lpQjlMQ0IwYUdsektTQjlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9jSEp2Y0hNL09pQlRZM0p2Ykd4aFlteGxVSEp2Y0hNc0lHTm9hV3hrUHpvZ1FtbHVaR0ZpYkdWRGFHbHNaQ2tnZXlCemRYQmxjaWg3SUdOb2FXeGtMQ0F1TGk1d2NtOXdjeUI5SUdGeklHRnVlU2tnZlZ4dWZWeHVYRzR2THlCVGJHbGtaWEpjYm1WNGNHOXlkQ0IwZVhCbElGTnNhV1JsY2xCeWIzQnpJRDBnUTI5dWMzUnlkV04wVUhKdmNITThVMnhwWkdWeUxDQkJjM1JoYkM1VGJHbGtaWEl1UTI5dWMzUnlkV04wYjNKUWNtOXdjeXdnZTF4dUlDQWdJRzl1UkhKaFoyZGxaRG9nVzExY2JuMCtYRzVsZUhCdmNuUWdZMnhoYzNNZ1UyeHBaR1Z5SUdWNGRHVnVaSE1nWVhOMFlXeHBabmtvUVhOMFlXd3VVMnhwWkdWeUtTQjdYRzRnSUNBZ2MzUmhkR2xqSUhzZ1IwOWlhbVZqZEM1eVpXZHBjM1JsY2tOc1lYTnpLSHNnUjFSNWNHVk9ZVzFsT2lCY0lsTnNhV1JsY2x3aUlIMHNJSFJvYVhNcElIMWNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaHdjbTl3Y3o4NklGTnNhV1JsY2xCeWIzQnpLU0I3SUhOMWNHVnlLSEJ5YjNCeklHRnpJR0Z1ZVNrZ2ZWeHVmVnh1WEc0dkx5QlRkR0ZqYTF4dVpYaHdiM0owSUhSNWNHVWdVM1JoWTJ0UWNtOXdjeUE5SUVOdmJuTjBjblZqZEZCeWIzQnpQRk4wWVdOckxDQkJjM1JoYkM1VGRHRmpheTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1Wlhod2IzSjBJR05zWVhOeklGTjBZV05ySUdWNGRHVnVaSE1nWVhOMFlXeHBabmtvUVhOMFlXd3VVM1JoWTJzcElIdGNiaUFnSUNCemRHRjBhV01nZXlCSFQySnFaV04wTG5KbFoybHpkR1Z5UTJ4aGMzTW9leUJIVkhsd1pVNWhiV1U2SUZ3aVUzUmhZMnRjSWlCOUxDQjBhR2x6S1NCOVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb2NISnZjSE0vT2lCVGRHRmphMUJ5YjNCekxDQXVMaTVqYUdsc1pISmxiam9nUVhKeVlYazhRbWx1WkdGaWJHVkRhR2xzWkQ0cElIc2djM1Z3WlhJb2V5QmphR2xzWkhKbGJpd2dMaTR1Y0hKdmNITWdmU0JoY3lCaGJua3BJSDFjYmlBZ0lDQndjbTkwWldOMFpXUWdjMlYwUTJocGJHUnlaVzRvWTJocGJHUnlaVzQ2SUdGdWVWdGRLVG9nZG05cFpDQjdJSFJvYVhNdWMyVjBYMk5vYVd4a2NtVnVLR1pwYkhSbGNpaGphR2xzWkhKbGJpa3BJSDFjYm4xY2JseHVMeThnVTNkcGRHTm9YRzVsZUhCdmNuUWdkSGx3WlNCVGQybDBZMmhRY205d2N5QTlJRU52Ym5OMGNuVmpkRkJ5YjNCelBGTjNhWFJqYUN3Z1IzUnJMbE4zYVhSamFDNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVaWGh3YjNKMElHTnNZWE56SUZOM2FYUmphQ0JsZUhSbGJtUnpJR0Z6ZEdGc2FXWjVLRWQwYXk1VGQybDBZMmdwSUh0Y2JpQWdJQ0J6ZEdGMGFXTWdleUJIVDJKcVpXTjBMbkpsWjJsemRHVnlRMnhoYzNNb2V5QkhWSGx3WlU1aGJXVTZJRndpVTNkcGRHTm9YQ0lnZlN3Z2RHaHBjeWtnZlZ4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0hCeWIzQnpQem9nVTNkcGRHTm9VSEp2Y0hNcElIc2djM1Z3WlhJb2NISnZjSE1nWVhNZ1lXNTVLU0I5WEc1OVhHNWNiaTh2SUZkcGJtUnZkMXh1Wlhod2IzSjBJSFI1Y0dVZ1YybHVaRzkzVUhKdmNITWdQU0JEYjI1emRISjFZM1JRY205d2N6eFhhVzVrYjNjc0lFRnpkR0ZzTGxkcGJtUnZkeTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1Wlhod2IzSjBJR05zWVhOeklGZHBibVJ2ZHlCbGVIUmxibVJ6SUdGemRHRnNhV1o1S0VGemRHRnNMbGRwYm1SdmR5a2dlMXh1SUNBZ0lITjBZWFJwWXlCN0lFZFBZbXBsWTNRdWNtVm5hWE4wWlhKRGJHRnpjeWg3SUVkVWVYQmxUbUZ0WlRvZ1hDSlhhVzVrYjNkY0lpQjlMQ0IwYUdsektTQjlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9jSEp2Y0hNL09pQlhhVzVrYjNkUWNtOXdjeXdnWTJocGJHUS9PaUJDYVc1a1lXSnNaVU5vYVd4a0tTQjdJSE4xY0dWeUtIc2dZMmhwYkdRc0lDNHVMbkJ5YjNCeklIMGdZWE1nWVc1NUtTQjlYRzU5WEc0aUxDQWlhVzF3YjNKMElGd2lMaTl2ZG1WeWNtbGtaWE11YW5OY0lseHVaWGh3YjNKMElIc2daR1ZtWVhWc2RDQmhjeUJCYzNSaGJFbFBJSDBnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hKVHo5MlpYSnphVzl1UFRBdU1Wd2lYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTl3Y205alpYTnpMbXB6WENKY2JtVjRjRzl5ZENBcUlHWnliMjBnWENJdUwzUnBiV1V1YW5OY0lseHVaWGh3YjNKMElDb2dabkp2YlNCY0lpNHZabWxzWlM1cWMxd2lYRzVsZUhCdmNuUWdLaUJtY205dElGd2lMaTluYjJKcVpXTjBMbXB6WENKY2JtVjRjRzl5ZENCN0lFSnBibVJwYm1jc0lHSnBibVFnZlNCbWNtOXRJRndpTGk5aWFXNWthVzVuTG1welhDSmNibVY0Y0c5eWRDQjdJRlpoY21saFlteGxMQ0JrWlhKcGRtVWdmU0JtY205dElGd2lMaTkyWVhKcFlXSnNaUzVxYzF3aVhHNGlMQ0FpYVcxd2IzSjBJRUZ6ZEdGc0lHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1NVOWNJbHh1YVcxd2IzSjBJRWRwYnlCbWNtOXRJRndpWjJrNkx5OUhhVzgvZG1WeWMybHZiajB5TGpCY0lseHVYRzVsZUhCdmNuUWdleUJIYVc4Z2ZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjbVZoWkVacGJHVW9jR0YwYURvZ2MzUnlhVzVuS1RvZ2MzUnlhVzVuSUh0Y2JpQWdJQ0J5WlhSMWNtNGdRWE4wWVd3dWNtVmhaRjltYVd4bEtIQmhkR2dwSUh4OElGd2lYQ0pjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlISmxZV1JHYVd4bFFYTjVibU1vY0dGMGFEb2djM1J5YVc1bktUb2dVSEp2YldselpUeHpkSEpwYm1jK0lIdGNiaUFnSUNCeVpYUjFjbTRnYm1WM0lGQnliMjFwYzJVb0tISmxjMjlzZG1Vc0lISmxhbVZqZENrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JCYzNSaGJDNXlaV0ZrWDJacGJHVmZZWE41Ym1Nb2NHRjBhQ3dnS0Y4c0lISmxjeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWE52YkhabEtFRnpkR0ZzTG5KbFlXUmZabWxzWlY5bWFXNXBjMmdvY21WektTQjhmQ0JjSWx3aUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvWlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WldwbFkzUW9aWEp5YjNJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnZlNsY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSGR5YVhSbFJtbHNaU2h3WVhSb09pQnpkSEpwYm1jc0lHTnZiblJsYm5RNklITjBjbWx1WnlrNklIWnZhV1FnZTF4dUlDQWdJRUZ6ZEdGc0xuZHlhWFJsWDJacGJHVW9jR0YwYUN3Z1kyOXVkR1Z1ZENsY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSGR5YVhSbFJtbHNaVUZ6ZVc1aktIQmhkR2c2SUhOMGNtbHVaeXdnWTI5dWRHVnVkRG9nYzNSeWFXNW5LVG9nVUhKdmJXbHpaVHgyYjJsa1BpQjdYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QlFjbTl0YVhObEtDaHlaWE52YkhabExDQnlaV3BsWTNRcElEMCtJSHRjYmlBZ0lDQWdJQ0FnUVhOMFlXd3VkM0pwZEdWZlptbHNaVjloYzNsdVl5aHdZWFJvTENCamIyNTBaVzUwTENBb1h5d2djbVZ6S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYzI5c2RtVW9RWE4wWVd3dWQzSnBkR1ZmWm1sc1pWOW1hVzVwYzJnb2NtVnpLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tHVnljbTl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnFaV04wS0dWeWNtOXlLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lIMHBYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCdGIyNXBkRzl5Um1sc1pTaGNiaUFnSUNCd1lYUm9PaUJ6ZEhKcGJtY3NYRzRnSUNBZ1kyRnNiR0poWTJzNklDaG1hV3hsT2lCemRISnBibWNzSUdWMlpXNTBPaUJIYVc4dVJtbHNaVTF2Ym1sMGIzSkZkbVZ1ZENrZ1BUNGdkbTlwWkN4Y2JpazZJRWRwYnk1R2FXeGxUVzl1YVhSdmNpQjdYRzRnSUNBZ2NtVjBkWEp1SUVGemRHRnNMbTF2Ym1sMGIzSmZabWxzWlNod1lYUm9MQ0FvWm1sc1pUb2djM1J5YVc1bkxDQmxkbVZ1ZERvZ1IybHZMa1pwYkdWTmIyNXBkRzl5UlhabGJuUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ1kyRnNiR0poWTJzb1ptbHNaU3dnWlhabGJuUXBYRzRnSUNBZ2ZTa2hYRzU5WEc0aUxDQWlhVzF3YjNKMElFZFBZbXBsWTNRZ1puSnZiU0JjSW1kcE9pOHZSMDlpYW1WamRGd2lYRzVjYm1WNGNHOXlkQ0I3SUdSbFptRjFiSFFnWVhNZ1IweHBZaUI5SUdaeWIyMGdYQ0puYVRvdkwwZE1hV0kvZG1WeWMybHZiajB5TGpCY0lseHVaWGh3YjNKMElIc2dSMDlpYW1WamRDd2dSMDlpYW1WamRDQmhjeUJrWldaaGRXeDBJSDFjYmx4dVkyOXVjM1FnYldWMFlTQTlJRk41YldKdmJDaGNJbTFsZEdGY0lpbGNibU52Ym5OMElIQnlhWFlnUFNCVGVXMWliMndvWENKd2NtbDJYQ0lwWEc1Y2JtTnZibk4wSUhzZ1VHRnlZVzFUY0dWakxDQlFZWEpoYlVac1lXZHpJSDBnUFNCSFQySnFaV04wWEc1Y2JtTnZibk4wSUd0bFltRmlhV1o1SUQwZ0tITjBjam9nYzNSeWFXNW5LU0E5UGlCemRISmNiaUFnSUNBdWNtVndiR0ZqWlNndktGdGhMWHBkS1NoYlFTMWFYU2t2Wnl3Z1hDSWtNUzBrTWx3aUtWeHVJQ0FnSUM1eVpYQnNZV05sUVd4c0tGd2lYMXdpTENCY0lpMWNJaWxjYmlBZ0lDQXVkRzlNYjNkbGNrTmhjMlVvS1Z4dVhHNTBlWEJsSUZOcFoyNWhiRVJsWTJ4aGNtRjBhVzl1SUQwZ2UxeHVJQ0FnSUdac1lXZHpQem9nUjA5aWFtVmpkQzVUYVdkdVlXeEdiR0ZuYzF4dUlDQWdJR0ZqWTNWdGRXeGhkRzl5UHpvZ1IwOWlhbVZqZEM1QlkyTjFiWFZzWVhSdmNsUjVjR1ZjYmlBZ0lDQnlaWFIxY201ZmRIbHdaVDg2SUVkUFltcGxZM1F1UjFSNWNHVmNiaUFnSUNCd1lYSmhiVjkwZVhCbGN6ODZJRUZ5Y21GNVBFZFBZbXBsWTNRdVIxUjVjR1UrWEc1OVhHNWNiblI1Y0dVZ1VISnZjR1Z5ZEhsRVpXTnNZWEpoZEdsdmJpQTlYRzRnSUNBZ2ZDQkpibk4wWVc1alpWUjVjR1U4ZEhsd1pXOW1JRWRQWW1wbFkzUXVVR0Z5WVcxVGNHVmpQbHh1SUNBZ0lId2dleUFrWjNSNWNHVTZJRWRQWW1wbFkzUXVSMVI1Y0dVZ2ZWeHVJQ0FnSUh3Z2RIbHdaVzltSUZOMGNtbHVaMXh1SUNBZ0lId2dkSGx3Wlc5bUlFNTFiV0psY2x4dUlDQWdJSHdnZEhsd1pXOW1JRUp2YjJ4bFlXNWNiaUFnSUNCOElIUjVjR1Z2WmlCUFltcGxZM1JjYmx4dWRIbHdaU0JIVDJKcVpXTjBRMjl1YzNSeWRXTjBiM0lnUFNCN1hHNGdJQ0FnVzIxbGRHRmRQem9nZTF4dUlDQWdJQ0FnSUNCUWNtOXdaWEowYVdWelB6b2dleUJiYTJWNU9pQnpkSEpwYm1kZE9pQkhUMkpxWldOMExsQmhjbUZ0VTNCbFl5QjlYRzRnSUNBZ0lDQWdJRk5wWjI1aGJITS9PaUI3SUZ0clpYazZJSE4wY21sdVoxMDZJRWRQWW1wbFkzUXVVMmxuYm1Gc1JHVm1hVzVwZEdsdmJpQjlYRzRnSUNBZ2ZWeHVJQ0FnSUc1bGR5Z3VMaTVoY21kek9pQmhibmxiWFNrNklHRnVlVnh1ZlZ4dVhHNTBlWEJsSUUxbGRHRkpibVp2SUQwZ1IwOWlhbVZqZEM1TlpYUmhTVzVtYnp4dVpYWmxjaXdnUVhKeVlYazhleUFrWjNSNWNHVTZJRWRQWW1wbFkzUXVSMVI1Y0dVZ2ZUNHNJRzVsZG1WeVBseHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjbVZuYVhOMFpYSW9iM0IwYVc5dWN6b2dUV1YwWVVsdVptOGdQU0I3ZlNrZ2UxeHVJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaUFvWTJ4ek9pQkhUMkpxWldOMFEyOXVjM1J5ZFdOMGIzSXBJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkQ0E5SUc5d2RHbHZibk11VkdWdGNHeGhkR1ZjYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMElEMDlQU0JjSW5OMGNtbHVaMXdpSUNZbUlDRjBMbk4wWVhKMGMxZHBkR2dvWENKeVpYTnZkWEpqWlRvdkwxd2lLU0FtSmlBaGRDNXpkR0Z5ZEhOWGFYUm9LRndpWm1sc1pUb3ZMMXdpS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1lYTnpkVzFsSUhodGJDQjBaVzF3YkdGMFpWeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNCMGFXOXVjeTVVWlcxd2JHRjBaU0E5SUc1bGR5QlVaWGgwUlc1amIyUmxjaWdwTG1WdVkyOWtaU2gwS1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdSMDlpYW1WamRDNXlaV2RwYzNSbGNrTnNZWE56S0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJRk5wWjI1aGJITTZJSHNnTGk0dVkyeHpXMjFsZEdGZFB5NVRhV2R1WVd4eklIMHNYRzRnSUNBZ0lDQWdJQ0FnSUNCUWNtOXdaWEowYVdWek9pQjdJQzR1TG1Oc2MxdHRaWFJoWFQ4dVVISnZjR1Z5ZEdsbGN5QjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0xpNHViM0IwYVc5dWN5eGNiaUFnSUNBZ0lDQWdmU3dnWTJ4ektWeHVYRzRnSUNBZ0lDQWdJR1JsYkdWMFpTQmpiSE5iYldWMFlWMWNiaUFnSUNCOVhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ3Y205d1pYSjBlU2hrWldOc1lYSmhkR2x2YmpvZ1VISnZjR1Z5ZEhsRVpXTnNZWEpoZEdsdmJpQTlJRTlpYW1WamRDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb2RHRnlaMlYwT2lCaGJua3NJSEJ5YjNBNklHRnVlU3dnWkdWell6ODZJRkJ5YjNCbGNuUjVSR1Z6WTNKcGNIUnZjaWtnZTF4dUlDQWdJQ0FnSUNCMFlYSm5aWFF1WTI5dWMzUnlkV04wYjNKYmJXVjBZVjBnUHo4OUlIdDlYRzRnSUNBZ0lDQWdJSFJoY21kbGRDNWpiMjV6ZEhKMVkzUnZjbHR0WlhSaFhTNVFjbTl3WlhKMGFXVnpJRDgvUFNCN2ZWeHVYRzRnSUNBZ0lDQWdJR052Ym5OMElHNWhiV1VnUFNCclpXSmhZbWxtZVNod2NtOXdLVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDZ2haR1Z6WXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUmhjbWRsZEN3Z2NISnZjQ3dnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTmJjSEpwZGwwL0xsdHdjbTl3WFNBL1B5QmtaV1poZFd4MFZtRnNkV1VvWkdWamJHRnlZWFJwYjI0cFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaWFFvZGpvZ1lXNTVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gySUNFOVBTQjBhR2x6VzNCeWIzQmRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdselczQnlhWFpkSUQ4L1BTQjdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwYzF0d2NtbDJYVnR3Y205d1hTQTlJSFpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJtOTBhV1o1S0c1aGJXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUmhjbWRsZEN3Z1lITmxkRjhrZTI1aGJXVXVjbVZ3YkdGalpTaGNJaTFjSWl3Z1hDSmZYQ0lwZldBc0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlNoMk9pQmhibmtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwYzF0d2NtOXdYU0E5SUhaY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUmhjbWRsZEN3Z1lHZGxkRjhrZTI1aGJXVXVjbVZ3YkdGalpTaGNJaTFjSWl3Z1hDSmZYQ0lwZldBc0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlNncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhOYmNISnZjRjFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdkR0Z5WjJWMExtTnZibk4wY25WamRHOXlXMjFsZEdGZExsQnliM0JsY25ScFpYTmJhMlZpWVdKcFpua29jSEp2Y0NsZElEMGdjSE53WldNb2JtRnRaU3dnVUdGeVlXMUdiR0ZuY3k1U1JVRkVWMUpKVkVVc0lHUmxZMnhoY21GMGFXOXVLVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1pzWVdkeklEMGdNRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1JsYzJNdVoyVjBLU0JtYkdGbmN5QjhQU0JRWVhKaGJVWnNZV2R6TGxKRlFVUkJRa3hGWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkdWell5NXpaWFFwSUdac1lXZHpJSHc5SUZCaGNtRnRSbXhoWjNNdVYxSkpWRUZDVEVWY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdGeVoyVjBMbU52Ym5OMGNuVmpkRzl5VzIxbGRHRmRMbEJ5YjNCbGNuUnBaWE5iYTJWaVlXSnBabmtvY0hKdmNDbGRJRDBnY0hOd1pXTW9ibUZ0WlN3Z1pteGhaM01zSUdSbFkyeGhjbUYwYVc5dUtWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYzJsbmJtRnNLQzR1TG5CaGNtRnRjem9nUVhKeVlYazhleUFrWjNSNWNHVTZJRWRQWW1wbFkzUXVSMVI1Y0dVZ2ZTQjhJSFI1Y0dWdlppQlBZbXBsWTNRK0tUcGNiaWgwWVhKblpYUTZJR0Z1ZVN3Z2MybG5ibUZzT2lCaGJua3NJR1JsYzJNL09pQlFjbTl3WlhKMGVVUmxjMk55YVhCMGIzSXBJRDArSUhadmFXUmNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE5wWjI1aGJDaGtaV05zWVhKaGRHbHZiajg2SUZOcFoyNWhiRVJsWTJ4aGNtRjBhVzl1S1RwY2JpaDBZWEpuWlhRNklHRnVlU3dnYzJsbmJtRnNPaUJoYm5rc0lHUmxjMk0vT2lCUWNtOXdaWEowZVVSbGMyTnlhWEIwYjNJcElEMCtJSFp2YVdSY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlITnBaMjVoYkNoY2JpQWdJQ0JrWldOc1lYSmhkR2x2Ymo4NklGTnBaMjVoYkVSbFkyeGhjbUYwYVc5dUlId2dleUFrWjNSNWNHVTZJRWRQWW1wbFkzUXVSMVI1Y0dVZ2ZTQjhJSFI1Y0dWdlppQlBZbXBsWTNRc1hHNGdJQ0FnTGk0dWNHRnlZVzF6T2lCQmNuSmhlVHg3SUNSbmRIbHdaVG9nUjA5aWFtVmpkQzVIVkhsd1pTQjlJSHdnZEhsd1pXOW1JRTlpYW1WamRENWNiaWtnZTF4dUlDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9kR0Z5WjJWME9pQmhibmtzSUhOcFoyNWhiRG9nWVc1NUxDQmtaWE5qUHpvZ1VISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eUtTQjdYRzRnSUNBZ0lDQWdJSFJoY21kbGRDNWpiMjV6ZEhKMVkzUnZjbHR0WlhSaFhTQS9QejBnZTMxY2JpQWdJQ0FnSUNBZ2RHRnlaMlYwTG1OdmJuTjBjblZqZEc5eVcyMWxkR0ZkTGxOcFoyNWhiSE1nUHo4OUlIdDlYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdibUZ0WlNBOUlHdGxZbUZpYVdaNUtITnBaMjVoYkNsY2JseHVJQ0FnSUNBZ0lDQnBaaUFvWkdWamJHRnlZWFJwYjI0Z2ZId2djR0Z5WVcxekxteGxibWQwYUNBK0lEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRUIwY3kxbGVIQmxZM1F0WlhKeWIzSWdWRTlFVHpvZ2RIbHdaU0JoYzNObGNuUmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR0Z5Y2lBOUlGdGtaV05zWVhKaGRHbHZiaXdnTGk0dWNHRnlZVzF6WFM1dFlYQW9kaUE5UGlCMkxpUm5kSGx3WlNsY2JpQWdJQ0FnSUNBZ0lDQWdJSFJoY21kbGRDNWpiMjV6ZEhKMVkzUnZjbHR0WlhSaFhTNVRhV2R1WVd4elcyNWhiV1ZkSUQwZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhjbUZ0WDNSNWNHVnpPaUJoY25Jc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBZWEpuWlhRdVkyOXVjM1J5ZFdOMGIzSmJiV1YwWVYwdVUybG5ibUZzYzF0dVlXMWxYU0E5SUdSbFkyeGhjbUYwYVc5dUlIeDhJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVhKaGJWOTBlWEJsY3pvZ1cxMHNYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb0lXUmxjMk1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoMFlYSm5aWFFzSUhOcFoyNWhiQ3dnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJtZFc1amRHbHZiaUFvTGk0dVlYSm5jem9nWVc1NVcxMHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsYldsMEtHNWhiV1VzSUM0dUxtRnlaM01wWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdlp6b2dLQ2d1TGk1aGNtZHpPaUJoYm5sYlhTa2dQVDRnZG05cFpDa2dQU0JrWlhOakxuWmhiSFZsWEc0Z0lDQWdJQ0FnSUNBZ0lDQmtaWE5qTG5aaGJIVmxJRDBnWm5WdVkzUnBiMjRnS0M0dUxtRnlaM002SUdGdWVWdGRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1FIUnpMV1Y0Y0dWamRDMWxjbkp2Y2lCdWIzUWdkSGx3WldSY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZ0YVhRb2JtRnRaU3dnTGk0dVlYSm5jeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaDBZWEpuWlhRc0lHQnZibDhrZTI1aGJXVXVjbVZ3YkdGalpTaGNJaTFjSWl3Z1hDSmZYQ0lwZldBc0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1puVnVZM1JwYjI0Z0tDNHVMbUZ5WjNNNklHRnVlVnRkS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnZaeTVoY0hCc2VTaDBhR2x6TENCaGNtZHpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNW1kVzVqZEdsdmJpQndjM0JsWXlodVlXMWxPaUJ6ZEhKcGJtY3NJR1pzWVdkek9pQnVkVzFpWlhJc0lHUmxZMnhoY21GMGFXOXVPaUJRY205d1pYSjBlVVJsWTJ4aGNtRjBhVzl1S1NCN1hHNGdJQ0FnYVdZZ0tHUmxZMnhoY21GMGFXOXVJR2x1YzNSaGJtTmxiMllnVUdGeVlXMVRjR1ZqS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWkdWamJHRnlZWFJwYjI1Y2JseHVJQ0FnSUhOM2FYUmphQ0FvWkdWamJHRnlZWFJwYjI0cElIdGNiaUFnSUNBZ0lDQWdZMkZ6WlNCVGRISnBibWM2WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1VHRnlZVzFUY0dWakxuTjBjbWx1WnlodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnWENKY0lpbGNiaUFnSUNBZ0lDQWdZMkZ6WlNCT2RXMWlaWEk2WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1VHRnlZVzFUY0dWakxtUnZkV0pzWlNodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnTFU1MWJXSmxjaTVOUVZoZlZrRk1WVVVzSUU1MWJXSmxjaTVOUVZoZlZrRk1WVVVzSURBcFhHNGdJQ0FnSUNBZ0lHTmhjMlVnUW05dmJHVmhianBjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCUVlYSmhiVk53WldNdVltOXZiR1ZoYmlodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnWm1Gc2MyVXBYRzRnSUNBZ0lDQWdJR05oYzJVZ1QySnFaV04wT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGQmhjbUZ0VTNCbFl5NXFjMjlpYW1WamRDaHVZVzFsTENCY0lsd2lMQ0JjSWx3aUxDQm1iR0ZuY3lsY2JpQWdJQ0FnSUNBZ1pHVm1ZWFZzZERwY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUVCMGN5MWxlSEJsWTNRdFpYSnliM0lnYldsemMzUjVjR1ZrWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1VHRnlZVzFUY0dWakxtOWlhbVZqZENodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnWkdWamJHRnlZWFJwYjI0dUpHZDBlWEJsS1Z4dUlDQWdJSDFjYm4xY2JseHVablZ1WTNScGIyNGdaR1ZtWVhWc2RGWmhiSFZsS0dSbFkyeGhjbUYwYVc5dU9pQlFjbTl3WlhKMGVVUmxZMnhoY21GMGFXOXVLU0I3WEc0Z0lDQWdhV1lnS0dSbFkyeGhjbUYwYVc5dUlHbHVjM1JoYm1ObGIyWWdVR0Z5WVcxVGNHVmpLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdaR1ZqYkdGeVlYUnBiMjR1WjJWMFgyUmxabUYxYkhSZmRtRnNkV1VvS1Z4dVhHNGdJQ0FnYzNkcGRHTm9JQ2hrWldOc1lYSmhkR2x2YmlrZ2UxeHVJQ0FnSUNBZ0lDQmpZWE5sSUZOMGNtbHVaenBjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCY0lsd2lYRzRnSUNBZ0lDQWdJR05oYzJVZ1RuVnRZbVZ5T2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlEQmNiaUFnSUNBZ0lDQWdZMkZ6WlNCQ2IyOXNaV0Z1T2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sWEc0Z0lDQWdJQ0FnSUdOaGMyVWdUMkpxWldOME9seHVJQ0FnSUNBZ0lDQmtaV1poZFd4ME9seHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd4Y2JpQWdJQ0I5WEc1OVhHNGlMQ0FpYVcxd2IzSjBJSHNnVm1GeWFXRmliR1VnZlNCbWNtOXRJRndpWVhOMFlXeGNJanRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJ4aGMzTWdWR2x0WlZObGNuWnBZMlVnZTF4dUlDQndjbWwyWVhSbElITjBZWFJwWXlCcGJuTjBZVzVqWlRvZ1ZHbHRaVk5sY25acFkyVTdYRzRnSUhCeWFYWmhkR1VnZEdsdFpWWmhjbWxoWW14bElEMGdWbUZ5YVdGaWJHVThjM1J5YVc1blBpaGNJbHdpS1M1d2IyeHNLREV3TURBc0lGd2laR0YwWlZ3aUtUdGNibHh1SUNCd2NtbDJZWFJsSUdOdmJuTjBjblZqZEc5eUtDa2dlMzBnTHk4Z1VISnBkbUYwWlNCamIyNXpkSEoxWTNSdmNpQjBieUJ3Y21WMlpXNTBJR1JwY21WamRDQnBibk4wWVc1MGFXRjBhVzl1WEc1Y2JpQWdjSFZpYkdsaklITjBZWFJwWXlCblpYUkpibk4wWVc1alpTZ3BPaUJVYVcxbFUyVnlkbWxqWlNCN1hHNGdJQ0FnYVdZZ0tDRlVhVzFsVTJWeWRtbGpaUzVwYm5OMFlXNWpaU2tnZTF4dUlDQWdJQ0FnVkdsdFpWTmxjblpwWTJVdWFXNXpkR0Z1WTJVZ1BTQnVaWGNnVkdsdFpWTmxjblpwWTJVb0tUdGNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVJRlJwYldWVFpYSjJhV05sTG1sdWMzUmhibU5sTzF4dUlDQjlYRzVjYmlBZ2NIVmliR2xqSUdkbGRGUnBiV1VvS1RvZ1ZtRnlhV0ZpYkdVOGMzUnlhVzVuUGlCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWRHbHRaVlpoY21saFlteGxPMXh1SUNCOVhHNTlYRzRpTENBaWFXMXdiM0owSUZkd0lHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1YzQmNJanRjYm1sdGNHOXlkQ0I3SUdKcGJtUXNJRUpwYm1ScGJtY3NJSFJwYldWdmRYUWdmU0JtY205dElGd2lZWE4wWVd4Y0lqdGNibWx0Y0c5eWRDQk1iMmRuWlhJZ1puSnZiU0JjSWk0dUwyeHZaMmRsY2k5TWIyZG5aWEpjSWp0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1kyeGhjM01nVjJseVpWQnNkVzFpWlhKV2FXVjNUVzlrWld3Z2UxeHVJQ0J3Y21sMllYUmxJSGRwY21Wd2JIVnRZbVZ5T2lCWGNDNVhjQ0I4SUc1MWJHdzdYRzRnSUhCeWFYWmhkR1VnYkdGemRFUmxabUYxYkhSVGNHVmhhMlZ5Vm05c2RXMWxRbVZtYjNKbFRYVjBaVG9nYm5WdFltVnlJSHdnYm5Wc2JDQTlJRzUxYkd3N1hHNGdJSEJ5YVhaaGRHVWdiRzluWjJWeUlEMGdibVYzSUV4dloyZGxjaWgwYUdsekxtTnZibk4wY25WamRHOXlMbTVoYldVcE8xeHVYRzRnSUhCeWFYWmhkR1VnWDJGMVpHbHZPaUJDYVc1a2FXNW5QRmR3TGtGMVpHbHZQanRjYmlBZ2NISnBkbUYwWlNCZlpHVm1ZWFZzZEZOd1pXRnJaWEk2SUVKcGJtUnBibWM4VjNBdVJXNWtjRzlwYm5RK08xeHVJQ0J3Y21sMllYUmxJRjl6Y0dWaGEyVnljem9nUW1sdVpHbHVaenhYY0M1RmJtUndiMmx1ZEZ0ZFBqdGNibHh1SUNCamIyNXpkSEoxWTNSdmNpZ3BJSHRjYmlBZ0lDQjBhR2x6TG5kcGNtVndiSFZ0WW1WeUlEMGdWM0F1WjJWMFgyUmxabUYxYkhRb0tUdGNiaUFnSUNCcFppQW9JWFJvYVhNdWQybHlaWEJzZFcxaVpYSXBJSHRjYmlBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGNJbGRwY21WUWJIVnRZbVZ5SUdseklHNXZkQ0JwYm1sMGFXRnNhWHBsWkM1Y0lpazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHBjeTVmWVhWa2FXOGdQU0JpYVc1a0tIUm9hWE11ZDJseVpYQnNkVzFpWlhJc0lGd2lZWFZrYVc5Y0lpazdYRzRnSUNBZ2RHaHBjeTVmWkdWbVlYVnNkRk53WldGclpYSWdQU0IwYUdsekxsOWhkV1JwYnk1aGN5Z29ZWFZrYVc4cElEMCtYRzRnSUNBZ0lDQmlhVzVrS0dGMVpHbHZMQ0JjSW1SbFptRjFiSFJUY0dWaGEyVnlYQ0lwTG1kbGRDZ3BYRzRnSUNBZ0tUdGNiaUFnSUNCMGFHbHpMbDl6Y0dWaGEyVnljeUE5SUhSb2FYTXVYMkYxWkdsdkxtRnpLRnh1SUNBZ0lDQWdLR0YxWkdsdktTQTlQaUJpYVc1a0tHRjFaR2x2TENCY0luTndaV0ZyWlhKelhDSXBMbWRsZENncElIeDhJRnRkWEc0Z0lDQWdLVHRjYmlBZ2ZWeHVYRzRnSUhCMVlteHBZeUJuWlhSWGFYSmxVR3gxYldKbGNpZ3BPaUJYY0M1WGNDQjdYRzRnSUNBZ2FXWWdLQ0YwYUdsekxuZHBjbVZ3YkhWdFltVnlLU0I3WEc0Z0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9YQ0pYYVhKbFVHeDFiV0psY2lCcGN5QnViM1FnYVc1cGRHbGhiR2w2WldRdVhDSXBPMXh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NTNhWEpsY0d4MWJXSmxjanRjYmlBZ2ZWeHVYRzRnSUhCMVlteHBZeUJuWlhSQmRXUnBieWdwT2lCQ2FXNWthVzVuUEZkd0xrRjFaR2x2UGlCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyRjFaR2x2TzF4dUlDQjlYRzVjYmlBZ2NIVmliR2xqSUdkbGRGWnBaR1Z2S0NrNklFSnBibVJwYm1jOFYzQXVWbWxrWlc4K0lIdGNiaUFnSUNCeVpYUjFjbTRnWW1sdVpDaDBhR2x6TG1kbGRGZHBjbVZRYkhWdFltVnlLQ2tzSUZ3aWRtbGtaVzljSWlrN1hHNGdJSDFjYmx4dUlDQndkV0pzYVdNZ1oyVjBVM0JsWVd0bGNuTW9LVG9nUW1sdVpHbHVaenhYY0M1RmJtUndiMmx1ZEZ0ZFBpQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM053WldGclpYSnpPMXh1SUNCOVhHNWNiaUFnY0hWaWJHbGpJR2RsZEVSbFptRjFiSFJUY0dWaGEyVnlLQ2s2SUVKcGJtUnBibWM4VjNBdVJXNWtjRzlwYm5RK0lIdGNiaUFnSUNCMGFHbHpMbXh2WjJkbGNpNWtaV0oxWnloY2JpQWdJQ0FnSUZ3aVIyVjBkR2x1WnlCa1pXWmhkV3gwSUhOd1pXRnJaWElnZDJocFkyZ2dhWE02SUZ3aUxGeHVJQ0FnSUNBZ2RHaHBjeTVmWkdWbVlYVnNkRk53WldGclpYSXVaMlYwS0NrL0xtZGxkRjlrWlhOamNtbHdkR2x2YmlncFhHNGdJQ0FnS1R0Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlpHVm1ZWFZzZEZOd1pXRnJaWEk3WEc0Z0lIMWNibHh1SUNCd2RXSnNhV01nWjJWMFJHVm1ZWFZzZEZOd1pXRnJaWEpXYjJ4MWJXVW9LVG9nUW1sdVpHbHVaenh1ZFcxaVpYSStJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWkdWbVlYVnNkRk53WldGclpYSXVZWE1vS0hOd1pXRnJaWElwSUQwK0lHSnBibVFvYzNCbFlXdGxjaXdnWENKMmIyeDFiV1ZjSWlrdVoyVjBLQ2twTzF4dUlDQjlYRzVjYmlBZ2NIVmliR2xqSUdkbGRFUmxabUYxYkhSVGNHVmhhMlZ5Vm05c2RXMWxTV052YmlncE9pQkNhVzVrYVc1blBITjBjbWx1Wno0Z2UxeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWtaV1poZFd4MFUzQmxZV3RsY2k1aGN5Z29jM0JsWVd0bGNpa2dQVDVjYmlBZ0lDQWdJR0pwYm1Rb2MzQmxZV3RsY2l3Z1hDSjJiMngxYldWSlkyOXVYQ0lwTG1kbGRDZ3BYRzRnSUNBZ0tUdGNiaUFnZlZ4dVhHNGdJSEIxWW14cFl5QnpaWFJFWldaaGRXeDBVM0JsWVd0bGNsWnZiSFZ0WlNoMmIyeDFiV1U2SUc1MWJXSmxjaWs2SUhadmFXUWdlMXh1SUNBZ0lHTnZibk4wSUdSbFptRjFiSFJUY0dWaGEyVnlJRDBnZEdocGN5NWZaR1ZtWVhWc2RGTndaV0ZyWlhJdVoyVjBLQ2s3WEc0Z0lDQWdhV1lnS0dSbFptRjFiSFJUY0dWaGEyVnlLU0I3WEc0Z0lDQWdJQ0JrWldaaGRXeDBVM0JsWVd0bGNpNXpaWFJmZG05c2RXMWxLSFp2YkhWdFpTazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjSFZpYkdsaklHMTFkR1ZFWldaaGRXeDBVM0JsWVd0bGNpZ3BPaUIyYjJsa0lIdGNiaUFnSUNCamIyNXpkQ0JrWldaaGRXeDBVM0JsWVd0bGNpQTlJSFJvYVhNdVgyUmxabUYxYkhSVGNHVmhhMlZ5TG1kbGRDZ3BPMXh1SUNBZ0lHbG1JQ2hrWldaaGRXeDBVM0JsWVd0bGNpa2dlMXh1SUNBZ0lDQWdkR2hwY3k1c1lYTjBSR1ZtWVhWc2RGTndaV0ZyWlhKV2IyeDFiV1ZDWldadmNtVk5kWFJsSUQwZ1pHVm1ZWFZzZEZOd1pXRnJaWEl1WjJWMFgzWnZiSFZ0WlNncE8xeHVJQ0FnSUNBZ1pHVm1ZWFZzZEZOd1pXRnJaWEl1YzJWMFgzWnZiSFZ0WlNnd0tUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQndkV0pzYVdNZ2RXNXRkWFJsUkdWbVlYVnNkRk53WldGclpYSW9LVG9nZG05cFpDQjdYRzRnSUNBZ1kyOXVjM1FnWkdWbVlYVnNkRk53WldGclpYSWdQU0IwYUdsekxsOWtaV1poZFd4MFUzQmxZV3RsY2k1blpYUW9LVHRjYmlBZ0lDQnBaaUFvWkdWbVlYVnNkRk53WldGclpYSWdKaVlnZEdocGN5NXNZWE4wUkdWbVlYVnNkRk53WldGclpYSldiMngxYldWQ1pXWnZjbVZOZFhSbElDRTlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQmtaV1poZFd4MFUzQmxZV3RsY2k1elpYUmZkbTlzZFcxbEtIUm9hWE11YkdGemRFUmxabUYxYkhSVGNHVmhhMlZ5Vm05c2RXMWxRbVZtYjNKbFRYVjBaU2s3WEc0Z0lDQWdJQ0IwYUdsekxteGhjM1JFWldaaGRXeDBVM0JsWVd0bGNsWnZiSFZ0WlVKbFptOXlaVTExZEdVZ1BTQnVkV3hzTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhCMVlteHBZeUJ6WlhSRVpXWmhkV3gwVTNCbFlXdGxjaWh6Y0dWaGEyVnlPaUJYY0M1RmJtUndiMmx1ZENrNklIWnZhV1FnZTF4dUlDQWdJSE53WldGclpYSXVjMlYwWDJselgyUmxabUYxYkhRb2RISjFaU2s3WEc0Z0lDQWdkR2hwY3k1c2IyZG5aWEl1WkdWaWRXY29YRzRnSUNBZ0lDQmNJbE5sZENCa1pXWmhkV3gwSUhOd1pXRnJaWElnZEc4NklGd2lMRnh1SUNBZ0lDQWdjM0JsWVd0bGNpNW5aWFJmWkdWelkzSnBjSFJwYjI0b0tTeGNiaUFnSUNBZ0lGd2lJSGRwZEdnZ1NVUTZJRndpTEZ4dUlDQWdJQ0FnYzNCbFlXdGxjaTVuWlhSZmFXUW9LU3hjYmlBZ0lDQWdJRndpSUdSbFptRjFiSFFnYzNCbFlXdGxjaUJKUkNCcGN6b2dYQ0lzWEc0Z0lDQWdJQ0IwYUdsekxtZGxkRVJsWm1GMWJIUlRjR1ZoYTJWeUtDa3VaMlYwS0NrL0xtZGxkRjlrWlhOamNtbHdkR2x2YmlncFhHNGdJQ0FnS1R0Y2JpQWdmVnh1ZlZ4dUlpd2dJbVZ1ZFcwZ1RHOW5UR1YyWld3Z2UxeHVJQ0JFUlVKVlJ5QTlJREVzWEc0Z0lFbE9SazhnUFNBeUxGeHVJQ0JGVWxKUFVpQTlJRE1zWEc0Z0lGZEJVazRnUFNBMExGeHVmVnh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JqYkdGemN5Qk1iMmRuWlhJZ2UxeHVJQ0J3Y21sMllYUmxJR3h2WjJkcGJtZERiR0Z6YzA1aGJXVTZJSE4wY21sdVp6dGNiaUFnY0hKcGRtRjBaU0J6ZEdGMGFXTWdjbVZoWkc5dWJIa2dSRVZHUVZWTVZGOU1UMGRmVEVWV1JVd2dQU0JNYjJkTVpYWmxiQzVFUlVKVlJ6dGNiaUFnY0hKcGRtRjBaU0J6ZEdGMGFXTWdjbVZoWkc5dWJIa2dUVUZZWDBOTVFWTlRYMDVCVFVWZlRFVk9SMVJJSUQwZ01qQTdYRzVjYmlBZ2NISnBkbUYwWlNCc2IyZE1aWFpsYkRvZ1RHOW5UR1YyWld3Z1BTQk1iMmRuWlhJdVJFVkdRVlZNVkY5TVQwZGZURVZXUlV3N1hHNWNiaUFnWTI5dWMzUnlkV04wYjNJb1hHNGdJQ0FnYkc5bloybHVaME5zWVhOelRtRnRaVG9nYzNSeWFXNW5MRnh1SUNBZ0lHeHZaMHhsZG1Wc09pQk1iMmRNWlhabGJDQTlJRXh2WjJkbGNpNUVSVVpCVlV4VVgweFBSMTlNUlZaRlRGeHVJQ0FwSUh0Y2JpQWdJQ0IwYUdsekxteHZaMmRwYm1kRGJHRnpjMDVoYldVZ1BTQnNiMmRuYVc1blEyeGhjM05PWVcxbE8xeHVJQ0FnSUhSb2FYTXViRzluVEdWMlpXd2dQU0JzYjJkTVpYWmxiRHRjYmlBZ2ZWeHVYRzRnSUdSbFluVm5LRzFsYzNOaFoyVTZJSE4wY21sdVp5d2dMaTR1WVhKbmN6b2dZVzU1VzEwcElIdGNiaUFnSUNCMGFHbHpMbkJ5YVc1MFYybDBhRXhsZG1Wc0tFeHZaMHhsZG1Wc0xrUkZRbFZITENCdFpYTnpZV2RsTENBdUxpNWhjbWR6S1R0Y2JpQWdmVnh1SUNCcGJtWnZLRzFsYzNOaFoyVTZJSE4wY21sdVp5d2dMaTR1WVhKbmN6b2dZVzU1VzEwcElIdGNiaUFnSUNCMGFHbHpMbkJ5YVc1MFYybDBhRXhsZG1Wc0tFeHZaMHhsZG1Wc0xrbE9SazhzSUcxbGMzTmhaMlVzSUM0dUxtRnlaM01wTzF4dUlDQjlYRzRnSUhkaGNtNG9iV1Z6YzJGblpUb2djM1J5YVc1bkxDQXVMaTVoY21kek9pQmhibmxiWFNrZ2UxeHVJQ0FnSUhSb2FYTXVjSEpwYm5SWGFYUm9UR1YyWld3b1RHOW5UR1YyWld3dVYwRlNUaXdnYldWemMyRm5aU3dnTGk0dVlYSm5jeWs3WEc0Z0lIMWNiaUFnWlhKeWIzSW9iV1Z6YzJGblpUb2djM1J5YVc1bkxDQXVMaTVoY21kek9pQmhibmxiWFNrZ2UxeHVJQ0FnSUhSb2FYTXVjSEpwYm5SWGFYUm9UR1YyWld3b1RHOW5UR1YyWld3dVJWSlNUMUlzSUcxbGMzTmhaMlVzSUM0dUxtRnlaM01wTzF4dUlDQjlYRzVjYmlBZ2NISnBkbUYwWlNCemFHOTFiR1JNYjJjb2JHVjJaV3c2SUV4dloweGxkbVZzS1RvZ1ltOXZiR1ZoYmlCN1hHNGdJQ0FnY21WMGRYSnVJR3hsZG1Wc0lENDlJSFJvYVhNdWJHOW5UR1YyWld3N1hHNGdJSDFjYmx4dUlDQndjbWwyWVhSbElIQnlhVzUwVjJsMGFFeGxkbVZzS0d4bGRtVnNPaUJNYjJkTVpYWmxiQ3dnYldWemMyRm5aVG9nYzNSeWFXNW5MQ0F1TGk1aGNtZHpPaUJoYm5sYlhTa2dlMXh1SUNBZ0lHbG1JQ2doZEdocGN5NXphRzkxYkdSTWIyY29iR1YyWld3cEtTQnlaWFIxY200N1hHNWNiaUFnSUNCamIyNXpkQ0JzWlhabGJGTjBjbWx1WnlBOUlFeHZaMHhsZG1Wc1cyeGxkbVZzWFM1MGIxVndjR1Z5UTJGelpTZ3BPMXh1WEc0Z0lDQWdZMjl1YzNRZ2JXRjRJRDBnVEc5bloyVnlMazFCV0Y5RFRFRlRVMTlPUVUxRlgweEZUa2RVU0R0Y2JpQWdJQ0JzWlhRZ2JtRnRaU0E5SUhSb2FYTXViRzluWjJsdVowTnNZWE56VG1GdFpUdGNiaUFnSUNCcFppQW9ibUZ0WlM1c1pXNW5kR2dnUGlCdFlYZ3BJSHRjYmlBZ0lDQWdJRzVoYldVZ1BTQnVZVzFsTG5Oc2FXTmxLREFzSUcxaGVDazdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUc1aGJXVWdQU0J1WVcxbExuQmhaRVZ1WkNodFlYZ3NJRndpSUZ3aUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JtYjNKdFlYUjBaV1FnUFNCZ0pIdHNaWFpsYkZOMGNtbHVaMzBnTFNBa2UyNWhiV1Y5SUMwZ0pIdHRaWE56WVdkbGZXQTdYRzRnSUNBZ1kyOXVjMjlzWlM1c2IyY29abTl5YldGMGRHVmtMQ0F1TGk1aGNtZHpLVHRjYmlBZ2ZWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCSGRHc2dabkp2YlNCY0ltZHBPaTh2UjNSclAzWmxjbk5wYjI0OU15NHdYQ0pjYm1sdGNHOXlkQ0I3SUhSNWNHVWdRbWx1WkdGaWJHVkRhR2xzWkNCOUlHWnliMjBnWENJdUwyRnpkR0ZzYVdaNUxtcHpYQ0pjYm1sdGNHOXlkQ0I3SUcxbGNtZGxRbWx1WkdsdVozTXNJR3B6ZUNCaGN5QmZhbk40SUgwZ1puSnZiU0JjSWk0dUwxOWhjM1JoYkM1cWMxd2lYRzVwYlhCdmNuUWdLaUJoY3lCWGFXUm5aWFFnWm5KdmJTQmNJaTR2ZDJsa1oyVjBMbXB6WENKY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlFWnlZV2R0Wlc1MEtIc2dZMmhwYkdSeVpXNGdQU0JiWFN3Z1kyaHBiR1FnZlRvZ2UxeHVJQ0FnSUdOb2FXeGtQem9nUW1sdVpHRmliR1ZEYUdsc1pGeHVJQ0FnSUdOb2FXeGtjbVZ1UHpvZ1FYSnlZWGs4UW1sdVpHRmliR1ZEYUdsc1pENWNibjBwSUh0Y2JpQWdJQ0JwWmlBb1kyaHBiR1FwSUdOb2FXeGtjbVZ1TG5CMWMyZ29ZMmhwYkdRcFhHNGdJQ0FnY21WMGRYSnVJRzFsY21kbFFtbHVaR2x1WjNNb1kyaHBiR1J5Wlc0cFhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJxYzNnb1hHNGdJQ0FnWTNSdmNqb2dhMlY1YjJZZ2RIbHdaVzltSUdOMGIzSnpJSHdnZEhsd1pXOW1JRWQwYXk1WGFXUm5aWFFzWEc0Z0lDQWdjSEp2Y0hNNklHRnVlU3hjYmlrZ2UxeHVJQ0FnSUhKbGRIVnliaUJmYW5ONEtHTjBiM0p6TENCamRHOXlJR0Z6SUdGdWVTd2djSEp2Y0hNcFhHNTlYRzVjYm1OdmJuTjBJR04wYjNKeklEMGdlMXh1SUNBZ0lHSnZlRG9nVjJsa1oyVjBMa0p2ZUN4Y2JpQWdJQ0JpZFhSMGIyNDZJRmRwWkdkbGRDNUNkWFIwYjI0c1hHNGdJQ0FnWTJWdWRHVnlZbTk0T2lCWGFXUm5aWFF1UTJWdWRHVnlRbTk0TEZ4dUlDQWdJR05wY21OMWJHRnljSEp2WjNKbGMzTTZJRmRwWkdkbGRDNURhWEpqZFd4aGNsQnliMmR5WlhOekxGeHVJQ0FnSUdSeVlYZHBibWRoY21WaE9pQlhhV1JuWlhRdVJISmhkMmx1WjBGeVpXRXNYRzRnSUNBZ1pXNTBjbms2SUZkcFpHZGxkQzVGYm5SeWVTeGNiaUFnSUNCbGRtVnVkR0p2ZURvZ1YybGtaMlYwTGtWMlpXNTBRbTk0TEZ4dUlDQWdJQzh2SUZSUFJFODZJR1pwZUdWa1hHNGdJQ0FnTHk4Z1ZFOUVUem9nWm14dmQySnZlRnh1SUNBZ0lHbGpiMjQ2SUZkcFpHZGxkQzVKWTI5dUxGeHVJQ0FnSUd4aFltVnNPaUJYYVdSblpYUXVUR0ZpWld3c1hHNGdJQ0FnYkdWMlpXeGlZWEk2SUZkcFpHZGxkQzVNWlhabGJFSmhjaXhjYmlBZ0lDQXZMeUJVVDBSUE9pQnNhWE4wWW05NFhHNGdJQ0FnYldWdWRXSjFkSFJ2YmpvZ1YybGtaMlYwTGsxbGJuVkNkWFIwYjI0c1hHNGdJQ0FnYjNabGNteGhlVG9nVjJsa1oyVjBMazkyWlhKc1lYa3NYRzRnSUNBZ2NtVjJaV0ZzWlhJNklGZHBaR2RsZEM1U1pYWmxZV3hsY2l4Y2JpQWdJQ0J6WTNKdmJHeGhZbXhsT2lCWGFXUm5aWFF1VTJOeWIyeHNZV0pzWlN4Y2JpQWdJQ0J6Ykdsa1pYSTZJRmRwWkdkbGRDNVRiR2xrWlhJc1hHNGdJQ0FnYzNSaFkyczZJRmRwWkdkbGRDNVRkR0ZqYXl4Y2JpQWdJQ0J6ZDJsMFkyZzZJRmRwWkdkbGRDNVRkMmwwWTJnc1hHNGdJQ0FnZDJsdVpHOTNPaUJYYVdSblpYUXVWMmx1Wkc5M0xGeHVmVnh1WEc1a1pXTnNZWEpsSUdkc2IySmhiQ0I3WEc0Z0lDQWdMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJRUIwZVhCbGMyTnlhWEIwTFdWemJHbHVkQzl1YnkxdVlXMWxjM0JoWTJWY2JpQWdJQ0J1WVcxbGMzQmhZMlVnU2xOWUlIdGNiaUFnSUNBZ0lDQWdkSGx3WlNCRmJHVnRaVzUwSUQwZ1IzUnJMbGRwWkdkbGRGeHVJQ0FnSUNBZ0lDQjBlWEJsSUVWc1pXMWxiblJEYkdGemN5QTlJRWQwYXk1WGFXUm5aWFJjYmlBZ0lDQWdJQ0FnYVc1MFpYSm1ZV05sSUVsdWRISnBibk5wWTBWc1pXMWxiblJ6SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2ZURvZ1YybGtaMlYwTGtKdmVGQnliM0J6WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlkWFIwYjI0NklGZHBaR2RsZEM1Q2RYUjBiMjVRY205d2MxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTJWdWRHVnlZbTk0T2lCWGFXUm5aWFF1UTJWdWRHVnlRbTk0VUhKdmNITmNiaUFnSUNBZ0lDQWdJQ0FnSUdOcGNtTjFiR0Z5Y0hKdlozSmxjM002SUZkcFpHZGxkQzVEYVhKamRXeGhjbEJ5YjJkeVpYTnpVSEp2Y0hOY2JpQWdJQ0FnSUNBZ0lDQWdJR1J5WVhkcGJtZGhjbVZoT2lCWGFXUm5aWFF1UkhKaGQybHVaMEZ5WldGUWNtOXdjMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pXNTBjbms2SUZkcFpHZGxkQzVGYm5SeWVWQnliM0J6WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEdKdmVEb2dWMmxrWjJWMExrVjJaVzUwUW05NFVISnZjSE5jYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRlJQUkU4NklHWnBlR1ZrWEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJVVDBSUE9pQm1iRzkzWW05NFhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWTI5dU9pQlhhV1JuWlhRdVNXTnZibEJ5YjNCelhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWVdKbGJEb2dWMmxrWjJWMExreGhZbVZzVUhKdmNITmNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRtVnNZbUZ5T2lCWGFXUm5aWFF1VEdWMlpXeENZWEpRY205d2MxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1ZFOUVUem9nYkdsemRHSnZlRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JXVnVkV0oxZEhSdmJqb2dWMmxrWjJWMExrMWxiblZDZFhSMGIyNVFjbTl3YzF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1psY214aGVUb2dWMmxrWjJWMExrOTJaWEpzWVhsUWNtOXdjMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjJaV0ZzWlhJNklGZHBaR2RsZEM1U1pYWmxZV3hsY2xCeWIzQnpYRzRnSUNBZ0lDQWdJQ0FnSUNCelkzSnZiR3hoWW14bE9pQlhhV1JuWlhRdVUyTnliMnhzWVdKc1pWQnliM0J6WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpiR2xrWlhJNklGZHBaR2RsZEM1VGJHbGtaWEpRY205d2MxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaFkyczZJRmRwWkdkbGRDNVRkR0ZqYTFCeWIzQnpYRzRnSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmc2SUZkcFpHZGxkQzVUZDJsMFkyaFFjbTl3YzF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmx1Wkc5M09pQlhhV1JuWlhRdVYybHVaRzkzVUhKdmNITmNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjFjYmx4dVpYaHdiM0owSUdOdmJuTjBJR3B6ZUhNZ1BTQnFjM2hjYmlJc0lDSnBiWEJ2Y25RZ2V5Qk9iM1JqYUZOMFlYUmxJSDBnWm5KdmJTQmNJaTR1THk0dUx5NHVMMjV2ZEdOb0wzTjBZWFJsTDA1dmRHTm9VM1JoZEdWY0lqdGNibWx0Y0c5eWRDQk9iM1JqYUZOMFlYUmxWbWxsZDAxdlpHVnNJR1p5YjIwZ1hDSXVMaTh1TGk4dUxpOXViM1JqYUM5emRHRjBaUzlPYjNSamFGTjBZWFJsVm1sbGQwMXZaR1ZzWENJN1hHNXBiWEJ2Y25RZ1YybHlaVkJzZFcxaVpYSldhV1YzVFc5a1pXd2dabkp2YlNCY0lpNHVMeTR1THk0dUwzTnZkVzVrTDFkcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc1hDSTdYRzVjYm1OdmJuTjBJRk5RUlVGTFJWSmZTVU5QVGlBOUlGd2lYSFZFT0RORVhIVkVSREJCWENJN1hHNWpiMjV6ZENCQ1RGVkZWRTlQVkVoZlNVTlBUaUE5SUZ3aVhGeDFaR0k0TUZ4Y2RXUmpZV1pjSWp0Y2JseHVkSGx3WlNCVGIzVnVaRk5sZEhScGJtZHpRblYwZEc5dVVISnZjSE1nUFNCN1hHNGdJRzV2ZEdOb1UzUmhkR1ZXYVdWM1RXOWtaV3c2SUU1dmRHTm9VM1JoZEdWV2FXVjNUVzlrWld3N1hHNTlPMXh1WEc1amIyNXpkQ0IwYjJkbmJHVlRiM1Z1WkZObGRIUnBibWR6SUQwZ0tHNXZkR05vVTNSaGRHVldhV1YzVFc5a1pXdzZJRTV2ZEdOb1UzUmhkR1ZXYVdWM1RXOWtaV3dwSUQwK0lIdGNiaUFnWTI5dWMzUWdZM1Z5Y21WdWRGTjBZWFJsSUQwZ2JtOTBZMmhUZEdGMFpWWnBaWGROYjJSbGJDNW5aWFJPYjNSamFGTjBZWFJsS0NrdVoyVjBLQ2s3WEc0Z0lHbG1JQ2hqZFhKeVpXNTBVM1JoZEdVZ1BUMDlJRTV2ZEdOb1UzUmhkR1V1VTA5VlRrUmZVMFZVVkVsT1IxTXBJSHRjYmlBZ0lDQnViM1JqYUZOMFlYUmxWbWxsZDAxdlpHVnNMbk5sZEU1dmRHTm9VM1JoZEdVb1RtOTBZMmhUZEdGMFpTNU9UMUpOUVV3cE8xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lHNXZkR05vVTNSaGRHVldhV1YzVFc5a1pXd3VjMlYwVG05MFkyaFRkR0YwWlNoT2IzUmphRk4wWVhSbExsTlBWVTVFWDFORlZGUkpUa2RUS1R0Y2JpQWdmVnh1ZlR0Y2JseHVablZ1WTNScGIyNGdVMjkxYm1SVFpYUjBhVzVuYzBKMWRIUnZiaWh3Y205d2N6b2dVMjkxYm1SVFpYUjBhVzVuYzBKMWRIUnZibEJ5YjNCektTQjdYRzRnSUdOdmJuTjBJSGRwY21WUWJIVnRZbVZ5Vm1sbGQwMXZaR1ZzSUQwZ2JtVjNJRmRwY21WUWJIVnRZbVZ5Vm1sbGQwMXZaR1ZzS0NrN1hHNGdJSEpsZEhWeWJpQW9YRzRnSUNBZ1BHSjFkSFJ2Ymx4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFZ3aWFXTnZibDlpZFhSMGIyNGdlSE50WVd4c1hDSmNiaUFnSUNBZ0lHTm9hV3hrUFhzOGFXTnZiaUJwWTI5dVBYdDNhWEpsVUd4MWJXSmxjbFpwWlhkTmIyUmxiQzVuWlhSRVpXWmhkV3gwVTNCbFlXdGxjbFp2YkhWdFpVbGpiMjRvS1gwZ0x6NTlYRzRnSUNBZ0lDQnZia05zYVdOclBYc29LU0E5UGlCMGIyZG5iR1ZUYjNWdVpGTmxkSFJwYm1kektIQnliM0J6TG01dmRHTm9VM1JoZEdWV2FXVjNUVzlrWld3cGZWeHVJQ0FnSUM4K1hHNGdJQ2s3WEc1OVhHNWNiblI1Y0dVZ1UyVjBkR2x1WjNOTlpXNTFVSEp2Y0hNZ1BTQjdJRzV2ZEdOb1UzUmhkR1ZXYVdWM1RXOWtaV3c2SUU1dmRHTm9VM1JoZEdWV2FXVjNUVzlrWld3Z2ZUdGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdVMlYwZEdsdVozTk5aVzUxS0hCeWIzQnpPaUJUWlhSMGFXNW5jMDFsYm5WUWNtOXdjeWtnZTF4dUlDQnlaWFIxY200Z0tGeHVJQ0FnSUR4aWIzaGNiaUFnSUNBZ0lHTnNZWE56VG1GdFpUMWNJbk5sZEhScGJtZHpYMjFsYm5WY0lseHVJQ0FnSUNBZ1kyaHBiR1E5ZTF4dUlDQWdJQ0FnSUNBOFltOTRYRzRnSUNBZ0lDQWdJQ0FnWTJocGJHUnlaVzQ5ZTF0Y2JpQWdJQ0FnSUNBZ0lDQWdJRHhUYjNWdVpGTmxkSFJwYm1kelFuVjBkRzl1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzV2ZEdOb1UzUmhkR1ZXYVdWM1RXOWtaV3c5ZTNCeWIzQnpMbTV2ZEdOb1UzUmhkR1ZXYVdWM1RXOWtaV3g5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZQaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGlkWFIwYjI0Z1kyeGhjM05PWVcxbFBYdGNJbWxqYjI1ZlluVjBkRzl1SUhoemJXRnNiRndpZlNCc1lXSmxiRDE3WENKUGNIUnBiMjRnTWx3aWZTQXZQaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGlkWFIwYjI0Z1kyeGhjM05PWVcxbFBYdGNJbWxqYjI1ZlluVjBkRzl1SUhoemJXRnNiRndpZlNCc1lXSmxiRDE3WENKUGNIUnBiMjRnTTF3aWZTQXZQaXhjYmlBZ0lDQWdJQ0FnSUNCZGZWeHVJQ0FnSUNBZ0lDQStQQzlpYjNnK1hHNGdJQ0FnSUNCOVhHNGdJQ0FnUGp3dlltOTRQbHh1SUNBcE8xeHVmVnh1SWl3Z0ltbHRjRzl5ZENCN0lHSnBibVFnZlNCbWNtOXRJRndpWVhOMFlXeGNJanRjYm1sdGNHOXlkQ0JVYVcxbFUyVnlkbWxqWlNCbWNtOXRJRndpTGk0dkxpNHZMaTR2ZEdsdFpTOVVhVzFsVTJWeWRtbGpaVndpTzF4dWFXMXdiM0owSUZObGRIUnBibWR6VFdWdWRTQm1jbTl0SUZ3aUxpOVRaWFIwYVc1bmMwMWxiblZjSWp0Y2JtbHRjRzl5ZENCT2IzUmphRk4wWVhSbFZtbGxkMDF2WkdWc0lHWnliMjBnWENJdUxpOHVMaTh1TGk5dWIzUmphQzl6ZEdGMFpTOU9iM1JqYUZOMFlYUmxWbWxsZDAxdlpHVnNYQ0k3WEc1Y2JuUjVjR1VnUlhod1lXNWtaV1JPYjNSamFGQnliM0J6SUQwZ2UxeHVJQ0J1YjNSamFGTjBZWFJsVm1sbGQwMXZaR1ZzT2lCT2IzUmphRk4wWVhSbFZtbGxkMDF2WkdWc08xeHVmVHRjYmx4dVpuVnVZM1JwYjI0Z1ZHbHRaU2dwSUh0Y2JpQWdjbVYwZFhKdUlDaGNiaUFnSUNBOFltOTRJR05zWVhOelRtRnRaVDFjSW1WNGNHRnVaR1ZrWDI1dmRHTm9YM1JwYldWY0lqNWNiaUFnSUNBZ0lEeHNZV0psYkQ1Y2JpQWdJQ0FnSUNBZ2UySnBibVFvVkdsdFpWTmxjblpwWTJVdVoyVjBTVzV6ZEdGdVkyVW9LUzVuWlhSVWFXMWxLQ2twTG1GektDaDBhVzFsS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJwYldVdWMyeHBZMlVvTUN3Z01UQXBPMXh1SUNBZ0lDQWdJQ0I5S1gxY2JpQWdJQ0FnSUR3dmJHRmlaV3crWEc0Z0lDQWdJQ0E4YkdGaVpXdytYRzRnSUNBZ0lDQWdJSHRpYVc1a0tGUnBiV1ZUWlhKMmFXTmxMbWRsZEVsdWMzUmhibU5sS0NrdVoyVjBWR2x0WlNncEtTNWhjeWdvZEdsdFpTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFXMWxMbk5zYVdObEtERXdMQ0F5TUNrN1hHNGdJQ0FnSUNBZ0lIMHBmVnh1SUNBZ0lDQWdQQzlzWVdKbGJENWNiaUFnSUNBOEwySnZlRDVjYmlBZ0tUdGNibjFjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnUlhod1lXNWtaV1JPYjNSamFDaHdjbTl3Y3pvZ1JYaHdZVzVrWldST2IzUmphRkJ5YjNCektTQjdYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFh0Y0ltVjRjR0Z1WkdWa1gyNXZkR05vWENKOVhHNGdJQ0FnSUNCamFHbHNaRDE3WEc0Z0lDQWdJQ0FnSUR4aWIzaGNiaUFnSUNBZ0lDQWdJQ0JqYUdsc1pISmxiajE3VzF4dUlDQWdJQ0FnSUNBZ0lDQWdQRDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhabGNuUnBZMkZzUFh0MGNuVmxmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05vYVd4a2NtVnVQWHRiWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4VTJWMGRHbHVaM05OWlc1MVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm05MFkyaFRkR0YwWlZacFpYZE5iMlJsYkQxN2NISnZjSE11Ym05MFkyaFRkR0YwWlZacFpYZE5iMlJsYkgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlQ0JqYUdsc1pEMTdQRlJwYldVZ0x6NTlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOEx6NHNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZQaXhjYmlBZ0lDQWdJQ0FnSUNCZGZWeHVJQ0FnSUNBZ0lDQStQQzlpYjNnK1hHNGdJQ0FnSUNCOVhHNGdJQ0FnUGp3dlltOTRQbHh1SUNBcE8xeHVmVnh1SWl3Z0ltbHRjRzl5ZENCTmNISnBjeUJtY205dElGd2laMms2THk5QmMzUmhiRTF3Y21selhDSTdYRzVwYlhCdmNuUWdRbWx1WkdsdVp5d2dleUJpYVc1a0lIMGdabkp2YlNCY0ltRnpkR0ZzTDJKcGJtUnBibWRjSWp0Y2JtbHRjRzl5ZENCTWIyZG5aWElnWm5KdmJTQmNJaTR1TDJ4dloyZGxjaTlNYjJkblpYSmNJanRjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR05zWVhOeklFMWxaR2xoVm1sbGQwMXZaR1ZzSUh0Y2JpQWdjSEpwZG1GMFpTQnRjSEpwY3pvZ1RYQnlhWE11VFhCeWFYTWdQU0JOY0hKcGN5NW5aWFJmWkdWbVlYVnNkQ2dwTzF4dUlDQndjbWwyWVhSbElHeHZaMmRsY2pvZ1RHOW5aMlZ5SUQwZ2JtVjNJRXh2WjJkbGNpaGNJazFsWkdsaFZtbGxkMDF2WkdWc1hDSXBPMXh1SUNCd2NtbDJZWFJsSUhOd2IzUnBabms2SUUxd2NtbHpMbEJzWVhsbGNpQTlJRTF3Y21sekxsQnNZWGxsY2k1dVpYY29YQ0p6Y0c5MGFXWjVYQ0lwTzF4dUlDQndjbWwyWVhSbElIbHZkWFIxWW1VNklFMXdjbWx6TGxCc1lYbGxjaUE5SUUxd2NtbHpMbEJzWVhsbGNpNXVaWGNvWENKNWIzVjBkV0psWENJcE8xeHVYRzRnSUdOdmJuTjBjblZqZEc5eUtDa2dlMzFjYmx4dUlDQndkV0pzYVdNZ1oyVjBVR3hoZVdWeWN5Z3BPaUJDYVc1a2FXNW5QRTF3Y21sekxsQnNZWGxsY2x0ZFBpQjdYRzRnSUNBZ2NtVjBkWEp1SUdKcGJtUW9kR2hwY3k1dGNISnBjeXdnWENKd2JHRjVaWEp6WENJcE8xeHVJQ0I5WEc0Z0lIQjFZbXhwWXlCblpYUlRjRzkwYVdaNVFYWmhhV3hoWW14bEtDazZJRUpwYm1ScGJtYzhZbTl2YkdWaGJqNGdlMXh1SUNBZ0lISmxkSFZ5YmlCaWFXNWtLSFJvYVhNdWMzQnZkR2xtZVN3Z1hDSmhkbUZwYkdGaWJHVmNJaWs3WEc0Z0lIMWNiaUFnY0hWaWJHbGpJR2RsZEZsdmRYUjFZbVZCZG1GcGJHRmliR1VvS1RvZ1FtbHVaR2x1Wnp4aWIyOXNaV0Z1UGlCN1hHNGdJQ0FnY21WMGRYSnVJR0pwYm1Rb2RHaHBjeTU1YjNWMGRXSmxMQ0JjSW1GMllXbHNZV0pzWlZ3aUtUdGNiaUFnZlZ4dWZWeHVJaXdnSW1sdGNHOXlkQ0I3SUdKcGJtUWdmU0JtY205dElGd2lZWE4wWVd3dlltbHVaR2x1WjF3aU8xeHVhVzF3YjNKMElGUnBiV1ZUWlhKMmFXTmxJR1p5YjIwZ1hDSXVMaTh1TGk4dUxpOTBhVzFsTDFScGJXVlRaWEoyYVdObFhDSTdYRzVwYlhCdmNuUWdUV1ZrYVdGV2FXVjNUVzlrWld3Z1puSnZiU0JjSWk0dUx5NHVMeTR1TDIxbFpHbGhMMDFsWkdsaFZtbGxkMDF2WkdWc1hDSTdYRzVtZFc1amRHbHZiaUJOWldScFlVbHVaR2xqWVhSdmNpZ3BJSHRjYmlBZ1kyOXVjM1FnYldWa2FXRldhV1YzVFc5a1pXd2dQU0J1WlhjZ1RXVmthV0ZXYVdWM1RXOWtaV3dvS1R0Y2JseHVJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lEeGliM2hjYmlBZ0lDQWdJR05zWVhOelRtRnRaVDFjSW01dmNtMWhiRjl1YjNSamFGOXRaV1JwWVY5cFkyOXVYQ0pjYmlBZ0lDQWdJR05vYVd4a1BYdGNiaUFnSUNBZ0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnSUNBZ0lHTnNZWE56VG1GdFpUMTdYQ0p1YjNKdFlXeGZibTkwWTJoZmJXVmthV0ZmYVc1a2FXTmhkRzl5WENKOVhHNGdJQ0FnSUNBZ0lDQWdZMmhwYkdROWUxeHVJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGhZbVZzUFh0dFpXUnBZVlpwWlhkTmIyUmxiQzVuWlhSUWJHRjVaWEp6S0NrdVlYTW9LSEJzWVhsbGNuTXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jR3hoZVdWeWN5NXNaVzVuZEdnZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCY0lrNXZJRTFsWkdsaFhDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQndiR0Y1WlhKeld6QmRMbWRsZEY5cFpHVnVkR2wwZVNncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtYMWNiaUFnSUNBZ0lDQWdJQ0FnSUQ0OEwyeGhZbVZzUGx4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdQand2WW05NFBseHVJQ0FnSUNBZ2ZWeHVJQ0FnSUQ0OEwySnZlRDVjYmlBZ0tUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1ZHbHRaU2dwSUh0Y2JpQWdjbVYwZFhKdUlDaGNiaUFnSUNBOFltOTRYRzRnSUNBZ0lDQmpiR0Z6YzA1aGJXVTlYQ0p1YjNKdFlXeGZibTkwWTJoZmRHbHRaVndpWEc0Z0lDQWdJQ0JqYUdsc1pISmxiajE3VzF4dUlDQWdJQ0FnSUNBOGJHRmlaV3crWEc0Z0lDQWdJQ0FnSUNBZ2UySnBibVFvVkdsdFpWTmxjblpwWTJVdVoyVjBTVzV6ZEdGdVkyVW9LUzVuWlhSVWFXMWxLQ2twTG1GektDaDBhVzFsS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdsdFpTNXpiR2xqWlNneE1Dd2dNVFlwTzF4dUlDQWdJQ0FnSUNBZ0lIMHBmVnh1SUNBZ0lDQWdJQ0E4TDJ4aFltVnNQaXhjYmlBZ0lDQWdJRjE5WEc0Z0lDQWdQand2WW05NFBseHVJQ0FwTzF4dWZWeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQk9iM0p0WVd4T2IzUmphQ2dwSUh0Y2JpQWdjbVYwZFhKdUlDaGNiaUFnSUNBOFkyVnVkR1Z5WW05NFhHNGdJQ0FnSUNCamJHRnpjMDVoYldVOWUxd2libTl5YldGc1gyNXZkR05vWENKOVhHNGdJQ0FnSUNCemRHRnlkRmRwWkdkbGREMTdQRlJwYldVZ0x6NTlYRzRnSUNBZ0lDQmpaVzUwWlhKWGFXUm5aWFE5ZXp4c1lXSmxiQ0JzWVdKbGJEMTdYQ0pJZVhCeWJtOTBZMmhjSW4wZ0x6NTlYRzRnSUNBZ0lDQmxibVJYYVdSblpYUTllMXh1SUNBZ0lDQWdJQ0E4WW05NFhHNGdJQ0FnSUNBZ0lDQWdZMmhwYkdSeVpXNDllMXRjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdsallXdzllM1J5ZFdWOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHTm9hV3hrY21WdVBYdGJQRUpzZFdWMGIyOTBhRUoxZEhSdmJpQXZQaXdnUEZkcFptbEpibVJwWTJGMGIzSWdMejVkZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdMejRzWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJRHhpYjNnZ2RtVnlkR2xqWVd3OWUzUnlkV1Y5SUdOb2FXeGtjbVZ1UFh0YlBFMWxaR2xoU1c1a2FXTmhkRzl5SUM4K1hYMGdMejRzWEc0Z0lDQWdJQ0FnSUNBZ1hYMWNiaUFnSUNBZ0lDQWdMejVjYmlBZ0lDQWdJSDFjYmlBZ0lDQStQQzlqWlc1MFpYSmliM2crWEc0Z0lDazdYRzU5WEc0aUxDQWlhVzF3YjNKMElIc2dZbWx1WkN3Z1FtbHVaR2x1Wnl3Z1ZtRnlhV0ZpYkdVZ2ZTQm1jbTl0SUZ3aVlYTjBZV3hjSWp0Y2JtbHRjRzl5ZENCN0lFNXZkR05vVTNSaGRHVWdmU0JtY205dElGd2lMaTlPYjNSamFGTjBZWFJsWENJN1hHNXBiWEJ2Y25RZ1RHOW5aMlZ5SUdaeWIyMGdYQ0l1TGk4dUxpOXNiMmRuWlhJdlRHOW5aMlZ5WENJN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHTnNZWE56SUU1dmRHTm9VM1JoZEdWV2FXVjNUVzlrWld3Z2UxeHVJQ0J3Y21sMllYUmxJR3h2WjJkbGNqb2dURzluWjJWeUlEMGdibVYzSUV4dloyZGxjaWhjSWs1dmRHTm9VM1JoZEdWV2FXVjNUVzlrWld4Y0lpazdYRzRnSUhCeWFYWmhkR1VnYm05MFkyaFRkR0YwWlRvZ1ZtRnlhV0ZpYkdVOFRtOTBZMmhUZEdGMFpUNGdQU0JXWVhKcFlXSnNaVHhPYjNSamFGTjBZWFJsUGloY2JpQWdJQ0JPYjNSamFGTjBZWFJsTGs1UFVrMUJURnh1SUNBcE8xeHVJQ0J3Y21sMllYUmxJSE4wWVhSbFEyaGhibWRsVkdsdFpXOTFkRG9nYm5WdFltVnlJSHdnYm5Wc2JDQTlJRzUxYkd3N1hHNWNiaUFnWTI5dWMzUnlkV04wYjNJb0tTQjdmVnh1WEc0Z0lIQjFZbXhwWXlCblpYUk9iM1JqYUZOMFlYUmxLQ2s2SUVKcGJtUnBibWM4VG05MFkyaFRkR0YwWlQ0Z2UxeHVJQ0FnSUhKbGRIVnliaUJpYVc1a0tIUm9hWE11Ym05MFkyaFRkR0YwWlNrdVlYTW9LQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTkwWTJoVGRHRjBaUzVuWlhRb0tUdGNiaUFnSUNCOUtUdGNiaUFnZlZ4dUlDQndkV0pzYVdNZ2MyVjBUbTkwWTJoVGRHRjBaU2h6ZEdGMFpUb2dUbTkwWTJoVGRHRjBaU2s2SUhadmFXUWdlMXh1SUNBZ0lIUm9hWE11Ykc5bloyVnlMbWx1Wm04b1lGTmxkSFJwYm1jZ2JtOTBZMmdnYzNSaGRHVWdkRzg2SUNSN2MzUmhkR1Y5WUNrN1hHNGdJQ0FnZEdocGN5NXViM1JqYUZOMFlYUmxMbk5sZENoemRHRjBaU2s3WEc0Z0lIMWNibjFjYmlJc0lDSnBiWEJ2Y25RZ1YybHlaVkJzZFcxaVpYSldhV1YzVFc5a1pXd2dabkp2YlNCY0lpNHVMMWRwY21WUWJIVnRZbVZ5Vm1sbGQwMXZaR1ZzWENJN1hHNWNiblI1Y0dVZ1UyOTFibVJOZFhSbFFuVjBkRzl1VUhKdmNITWdQU0I3SUhkcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc09pQlhhWEpsVUd4MWJXSmxjbFpwWlhkTmIyUmxiQ0I5TzF4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCVGIzVnVaRTExZEdWQ2RYUjBiMjRvY0hKdmNITTZJRk52ZFc1a1RYVjBaVUoxZEhSdmJsQnliM0J6S1NCN1hHNGdJSEpsZEhWeWJpQW9YRzRnSUNBZ1BHSjFkSFJ2Ymx4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFh0d2NtOXdjeTUzYVhKbFVHeDFiV0psY2xacFpYZE5iMlJsYkZ4dUlDQWdJQ0FnSUNBdVoyVjBSR1ZtWVhWc2RGTndaV0ZyWlhKV2IyeDFiV1VvS1Z4dUlDQWdJQ0FnSUNBdVlYTW9LSFp2YkhWdFpTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lHeGxkQ0JqYkdGemMwNWhiV1VnUFNCY0ltbGpiMjVmWW5WMGRHOXVJSGh6YldGc2JGd2lPMXh1SUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIyYjJ4MWJXVWdQVDA5SURCY2JpQWdJQ0FnSUNBZ0lDQWdJRDhnS0dOc1lYTnpUbUZ0WlNBclBTQmNJaUJ2ZFhSc2FXNWxaRndpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdPaUFvWTJ4aGMzTk9ZVzFsSUNzOUlGd2lJR1pwYkd4bFpGd2lLVHRjYmlBZ0lDQWdJQ0FnZlNsOVhHNGdJQ0FnSUNCamFHbHNaRDE3WEc0Z0lDQWdJQ0FnSUR4cFkyOXVJR2xqYjI0OWUzQnliM0J6TG5kcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc0xtZGxkRVJsWm1GMWJIUlRjR1ZoYTJWeVZtOXNkVzFsU1dOdmJpZ3BmU0F2UGx4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYjI1Q2RYUjBiMjVTWld4bFlYTmxSWFpsYm5ROWV5Z3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ2NISnZjSE11ZDJseVpWQnNkVzFpWlhKV2FXVjNUVzlrWld3dVoyVjBSR1ZtWVhWc2RGTndaV0ZyWlhKV2IyeDFiV1VvS1M1blpYUW9LU0ErSURCY2JpQWdJQ0FnSUNBZ0lDQS9JSEJ5YjNCekxuZHBjbVZRYkhWdFltVnlWbWxsZDAxdlpHVnNMbTExZEdWRVpXWmhkV3gwVTNCbFlXdGxjaWdwWEc0Z0lDQWdJQ0FnSUNBZ09pQndjbTl3Y3k1M2FYSmxVR3gxYldKbGNsWnBaWGROYjJSbGJDNTFibTExZEdWRVpXWmhkV3gwVTNCbFlXdGxjaWdwTzF4dUlDQWdJQ0FnZlgxY2JpQWdJQ0F2UGx4dUlDQXBPMXh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQlhhWEpsVUd4MWJXSmxjbFpwWlhkTmIyUmxiQ0JtY205dElGd2lMaTR2VjJseVpWQnNkVzFpWlhKV2FXVjNUVzlrWld4Y0lqdGNibWx0Y0c5eWRDQlRiM1Z1WkUxMWRHVkNkWFIwYjI0Z1puSnZiU0JjSWk0dlUyOTFibVJOZFhSbFFuVjBkRzl1VUhKdmNITmNJanRjYmx4dWRIbHdaU0JUYjNWdVpGTnNhV1JsY2xCeWIzQnpJRDBnZTF4dUlDQnBibWwwYVdGc1ZtRnNkV1UvT2lCdWRXMWlaWEk3WEc0Z0lIZHBjbVZRYkhWdFltVnlWbWxsZDAxdlpHVnNPaUJYYVhKbFVHeDFiV0psY2xacFpYZE5iMlJsYkR0Y2JuMDdYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQlRiM1Z1WkZOc2FXUmxjaWh3Y205d2N6b2dVMjkxYm1SVGJHbGtaWEpRY205d2N5a2dlMXh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHhpYjNoY2JpQWdJQ0FnSUhabGNuUnBZMkZzUFh0MGNuVmxmVnh1SUNBZ0lDQWdZMnhoYzNOT1lXMWxQVndpYzI5MWJtUmZjMnhwWkdWeVhDSmNiaUFnSUNBZ0lHTm9hV3hrY21WdVBYdGJYRzRnSUNBZ0lDQWdJRHh6Ykdsa1pYSmNiaUFnSUNBZ0lDQWdJQ0IyWlhKMGFXTmhiRDE3ZEhKMVpYMWNiaUFnSUNBZ0lDQWdJQ0JwYm5abGNuUmxaRDE3ZEhKMVpYMWNiaUFnSUNBZ0lDQWdJQ0J0YVc0OWV6QjlYRzRnSUNBZ0lDQWdJQ0FnYldGNFBYc3hNREI5WEc0Z0lDQWdJQ0FnSUNBZ2RtRnNkV1U5ZTNCeWIzQnpMbWx1YVhScFlXeFdZV3gxWlgxY2JpQWdJQ0FnSUNBZ0lDQnZia1J5WVdkblpXUTlleWh6Wld4bUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMmIyeDFiV1ZVYjFObGRDQTlJSE5sYkdZdVoyVjBYM1poYkhWbEtDa2dMeUF4TURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205d2N5NTNhWEpsVUd4MWJXSmxjbFpwWlhkTmIyUmxiQzV6WlhSRVpXWmhkV3gwVTNCbFlXdGxjbFp2YkhWdFpTaDJiMngxYldWVWIxTmxkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ2ZYMWNiaUFnSUNBZ0lDQWdMejRzWEc0Z0lDQWdJQ0FnSUR4VGIzVnVaRTExZEdWQ2RYUjBiMjRnZDJseVpWQnNkVzFpWlhKV2FXVjNUVzlrWld3OWUzQnliM0J6TG5kcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc2ZTQXZQaXhjYmlBZ0lDQWdJRjE5WEc0Z0lDQWdMejVjYmlBZ0tUdGNibjFjYmlJc0lDSmxlSEJ2Y25RZ1pHVm1ZWFZzZENCN1hHNGdJSE52ZFc1a09pQjdYRzRnSUNBZ1lteDFaWFJ2YjNSb09pQjdYRzRnSUNBZ0lDQnBaR3hsT2lCY0lseDFSRUk0TUZ4MVJFTkJSbHdpTEZ4dUlDQWdJQ0FnWTI5dWJtVmpkR1ZrT2lCY0lseDFSRUk0TUZ4MVJFTkNNVndpTEZ4dUlDQWdJQ0FnYjJabU9pQmNJbHgxUkVJNE1GeDFSRU5DTWx3aUxGeHVJQ0FnSUgwc1hHNGdJSDBzWEc0Z0lHSmhkSFJsY25rNklIdGNiaUFnSUNCaWJIVmxkRzl2ZEdnNklIdGNiaUFnSUNBZ0lIUmxiam9nWENKY2RVUkNPREpjZFVSRU0wVmNJaXhjYmlBZ0lDQWdJSFIzWlc1MGVUb2dYQ0pjZFVSQ09ESmNkVVJFTTBaY0lpeGNiaUFnSUNBZ0lIUm9hWEowZVRvZ1hDSmNkVVJDT0RKY2RVUkVOREJjSWl4Y2JpQWdJQ0FnSUdadmNuUjVPaUJjSWx4MVJFSTRNbHgxUkVRME1Wd2lMRnh1SUNBZ0lDQWdabWxtZEhrNklGd2lYSFZFUWpneVhIVkVSRFF5WENJc1hHNGdJQ0FnSUNCemFYaDBlVG9nWENKY2RVUkNPREpjZFVSRU5ETmNJaXhjYmlBZ0lDQWdJSE5sZG1WdWRIazZJRndpWEhWRVFqZ3lYSFZFUkRRMFhDSXNYRzRnSUNBZ0lDQmxhV2RvZEhrNklGd2lYSFZFUWpneVhIVkVSRFExWENJc1hHNGdJQ0FnSUNCdWFXNWxkSGs2SUZ3aVhIVkVRamd5WEhWRVJEUTJYQ0lzWEc0Z0lDQWdJQ0JtZFd4c09pQmNJbHgxUkVJNE1seDFSRVEwT0Z3aUxGeHVJQ0FnSUgwc1hHNGdJSDBzWEc1OUlHRnpJR052Ym5OME8xeHVJaXdnSW1sdGNHOXlkQ0I3SUdKcGJtUXNJRUpwYm1ScGJtY2dmU0JtY205dElGd2lZWE4wWVd4Y0lqdGNibWx0Y0c5eWRDQkNiSFZsZEc5dmRHZ2dabkp2YlNCY0ltZHBPaTh2UVhOMFlXeENiSFZsZEc5dmRHaGNJanRjYm1sdGNHOXlkQ0JNYjJkblpYSWdabkp2YlNCY0lpNHVMeTR1TDJ4dloyZGxjaTlNYjJkblpYSmNJanRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJ4aGMzTWdRbXgxWlhSdmIzUm9WbWxsZDAxdlpHVnNJSHRjYmlBZ2NISnBkbUYwWlNCaWJIVmxkRzl2ZEdnNklFSnNkV1YwYjI5MGFDNUNiSFZsZEc5dmRHZ2dQU0JDYkhWbGRHOXZkR2d1WjJWMFgyUmxabUYxYkhRb0tUdGNiaUFnY0hKcGRtRjBaU0JzYjJkblpYSTZJRXh2WjJkbGNpQTlJRzVsZHlCTWIyZG5aWElvZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTV1WVcxbEtUdGNiaUFnWTI5dWMzUnlkV04wYjNJb0tTQjdmVnh1WEc0Z0lIQjFZbXhwWXlCblpYUkVaWFpwWTJWektDazZJRUpwYm1ScGJtYzhRbXgxWlhSdmIzUm9Ma1JsZG1salpWdGRQaUI3WEc0Z0lDQWdjbVYwZFhKdUlHSnBibVFvZEdocGN5NWliSFZsZEc5dmRHZ3NJRndpWkdWMmFXTmxjMXdpS1R0Y2JpQWdmVnh1SUNCd2RXSnNhV01nWjJWMFFXUmhjSFJsY25Nb0tUb2dRbWx1WkdsdVp6eENiSFZsZEc5dmRHZ3VRV1JoY0hSbGNsdGRQaUI3WEc0Z0lDQWdjbVYwZFhKdUlHSnBibVFvZEdocGN5NWliSFZsZEc5dmRHZ3NJRndpWVdSaGNIUmxjbk5jSWlrN1hHNGdJSDFjYmlBZ2NIVmliR2xqSUdkbGRFbHpVRzkzWlhKbFpDZ3BPaUJDYVc1a2FXNW5QR0p2YjJ4bFlXNCtJSHRjYmlBZ0lDQnlaWFIxY200Z1ltbHVaQ2gwYUdsekxtSnNkV1YwYjI5MGFDd2dYQ0pwYzE5d2IzZGxjbVZrWENJcE8xeHVJQ0I5WEc0Z0lIQjFZbXhwWXlCMGIyZG5iR1VvS1RvZ2RtOXBaQ0I3WEc0Z0lDQWdkR2hwY3k1aWJIVmxkRzl2ZEdndWRHOW5aMnhsS0NrN1hHNGdJQ0FnZEdocGN5NXNiMmRuWlhJdWFXNW1ieWhjYmlBZ0lDQWdJRndpVkc5bloyeHBibWNnWW14MVpYUnZiM1JvSUhOMFlYUmxJSFJ2SUZ3aUlDc2dkR2hwY3k1blpYUkpjMUJ2ZDJWeVpXUW9LUzVuWlhRb0tWeHVJQ0FnSUNrN1hHNGdJSDFjYm4xY2JpSXNJQ0pwYlhCdmNuUWdleUJpYVc1a0lIMGdabkp2YlNCY0ltRnpkR0ZzWENJN1hHNXBiWEJ2Y25RZ2JtVnlaR1p2Ym5SeklHWnliMjBnWENJdUxpOHVMaTlzYVdJdmFXTnZibk12Ym1WeVpHWnZiblJ6WENJN1hHNXBiWEJ2Y25RZ1FteDFaWFJ2YjNSb1ZtbGxkMDF2WkdWc0lHWnliMjBnWENJdUwwSnNkV1YwYjI5MGFGWnBaWGROYjJSbGJGd2lPMXh1WEc1amIyNXpkQ0JpYkhWbGRHOXZkR2hXYVdWM1RXOWtaV3dnUFNCdVpYY2dRbXgxWlhSdmIzUm9WbWxsZDAxdlpHVnNLQ2s3WEc1Y2JtWjFibU4wYVc5dUlFSnNkV1YwYjI5MGFGUnZaMmRzWlVKMWRIUnZiaWdwSUh0Y2JpQWdjbVYwZFhKdUlDaGNiaUFnSUNBOFluVjBkRzl1WEc0Z0lDQWdJQ0JqYkdGemMwNWhiV1U5ZTJKc2RXVjBiMjkwYUZacFpYZE5iMlJsYkM1blpYUkpjMUJ2ZDJWeVpXUW9LUzVoY3lnb2FYTlFiM2RsY21Wa0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUd4bGRDQmpiR0Z6YzA1aGJXVWdQU0JjSW1samIyNWZZblYwZEc5dVhDSTdYRzRnSUNBZ0lDQWdJR05zWVhOelRtRnRaU0FyUFNCcGMxQnZkMlZ5WldRZ1B5QmNJaUJjSWlBNklGd2lJRzkxZEd4cGJtVmtYQ0k3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJqYkdGemMwNWhiV1U3WEc0Z0lDQWdJQ0I5S1gxY2JpQWdJQ0FnSUc5dVEyeHBZMnM5ZXlncElEMCtJSHRjYmlBZ0lDQWdJQ0FnWW14MVpYUnZiM1JvVm1sbGQwMXZaR1ZzTG5SdloyZHNaU2dwTzF4dUlDQWdJQ0FnZlgxY2JpQWdJQ0FnSUdOb2FXeGtQWHRjYmlBZ0lDQWdJQ0FnUEd4aFltVnNYRzRnSUNBZ0lDQWdJQ0FnYkdGaVpXdzllMkpzZFdWMGIyOTBhRlpwWlhkTmIyUmxiQzVuWlhSSmMxQnZkMlZ5WldRb0tTNWhjeWdvYVhOUWIzZGxjbVZrS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVhOUWIzZGxjbVZrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRDhnYm1WeVpHWnZiblJ6TG5OdmRXNWtMbUpzZFdWMGIyOTBhQzVwWkd4bFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSURvZ2JtVnlaR1p2Ym5SekxuTnZkVzVrTG1Kc2RXVjBiMjkwYUM1dlptWTdYRzRnSUNBZ0lDQWdJQ0FnZlNsOVhHNGdJQ0FnSUNBZ0lDOCtYRzRnSUNBZ0lDQjlYRzRnSUNBZ0x6NWNiaUFnS1R0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnUW14MVpYUnZiM1JvUkdWMmFXTmxRbUYwZEdWeWVVeGxkbVZzS0NrZ2UxeHVJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lEeGliM2hjYmlBZ0lDQWdJR05zWVhOelRtRnRaVDFjSW1Kc2RXVjBiMjkwYUY5a1pYWnBZMlZmWW1GMGRHVnllVjlzWlhabGJGd2lYRzRnSUNBZ0lDQmphR2xzWkhKbGJqMTdZbXgxWlhSdmIzUm9WbWxsZDAxdlpHVnNMbWRsZEVSbGRtbGpaWE1vS1M1aGN5Z29aR1YyYVdObGN5a2dQVDRnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWkdWMmFXTmxjMXh1SUNBZ0lDQWdJQ0FnSUM1bWFXeDBaWElvS0dSbGRtbGpaU2tnUFQ0Z1pHVjJhV05sTG1kbGRGOWpiMjV1WldOMFpXUW9LU2xjYmlBZ0lDQWdJQ0FnSUNBdWJXRndLQ2hrWlhacFkyVXBJRDArSUNoY2JpQWdJQ0FnSUNBZ0lDQWdJRHhqYVhKamRXeGhjbkJ5YjJkeVpYTnpYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lISnZkVzVrWldROWUzUnlkV1Y5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKMFFYUTllekI5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1WkVGMFBYc3hmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlQxN1ltbHVaQ2hrWlhacFkyVXNJRndpWW1GMGRHVnllVkJsY21ObGJuUmhaMlZjSWlsOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtQWHM4YVdOdmJpQnBZMjl1UFh0aWFXNWtLR1JsZG1salpTd2dYQ0pwWTI5dVhDSXBmU0F2UG4xY2JpQWdJQ0FnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0tTazdYRzRnSUNBZ0lDQjlLWDFjYmlBZ0lDQXZQbHh1SUNBcE8xeHVmVnh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJDYkhWbGRHOXZkR2hUWlhSMGFXNW5jMDFsYm5Vb0tTQjdYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFZ3aVlteDFaWFJ2YjNSb1gzTmxkSFJwYm1kelgyMWxiblZmWTI5dWRHRnBibVZ5WENKY2JpQWdJQ0FnSUdOb2FXeGtjbVZ1UFh0YlhHNGdJQ0FnSUNBZ0lEeGliM2hjYmlBZ0lDQWdJQ0FnSUNCamJHRnpjMDVoYldVOVhDSmliSFZsZEc5dmRHaGZjMlYwZEdsdVozTmZiV1Z1ZFZ3aVhHNGdJQ0FnSUNBZ0lDQWdZMmhwYkdSeVpXNDllMXRjYmlBZ0lDQWdJQ0FnSUNBZ0lEeENiSFZsZEc5dmRHaFViMmRuYkdWQ2RYUjBiMjRnTHo0c1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4UW14MVpYUnZiM1JvUkdWMmFXTmxRbUYwZEdWeWVVeGxkbVZzSUM4K0xGeHVJQ0FnSUNBZ0lDQWdJRjE5WEc0Z0lDQWdJQ0FnSUM4K0xGeHVJQ0FnSUNBZ1hYMWNiaUFnSUNBdlBseHVJQ0FwTzF4dWZWeHVJaXdnSW1sdGNHOXlkQ0I3SUVGemRHRnNMQ0JIZEdzZ2ZTQm1jbTl0SUZ3aVlYTjBZV3d2WjNSck0xd2lPMXh1YVcxd2IzSjBJRmRwY21WUWJIVnRZbVZ5Vm1sbGQwMXZaR1ZzSUdaeWIyMGdYQ0l1TGk5WGFYSmxVR3gxYldKbGNsWnBaWGROYjJSbGJGd2lPMXh1YVcxd2IzSjBJRmR3SUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzVjNCY0lqdGNibWx0Y0c5eWRDQjdJRUpwYm1ScGJtY2dmU0JtY205dElGd2lZWE4wWVd4Y0lqdGNibHh1WTI5dWMzUWdkMmx5WlZCc2RXMWlaWEpXYVdWM1RXOWtaV3dnUFNCdVpYY2dWMmx5WlZCc2RXMWlaWEpXYVdWM1RXOWtaV3dvS1R0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1QzVjBjSFYwUkdWMmFXTmxVMlZzWldOMGIzSW9LU0I3WEc0Z0lISmxkSFZ5YmlBb1hHNGdJQ0FnUEdKdmVGeHVJQ0FnSUNBZ2IzSnBaVzUwWVhScGIyNDllMGQwYXk1UGNtbGxiblJoZEdsdmJpNVdSVkpVU1VOQlRIMWNiaUFnSUNBZ0lHTm9hV3hrY21WdVBYdDNhWEpsVUd4MWJXSmxjbFpwWlhkTmIyUmxiQzVuWlhSVGNHVmhhMlZ5Y3lncExtRnpLQ2h6Y0dWaGEyVnljeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnpjR1ZoYTJWeWN5QTlJSE53WldGclpYSnpJRDhnYzNCbFlXdGxjbk1nT2lCYlhUdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1pHVm1ZWFZzZEZOd1pXRnJaWEpDYVc1a2FXNW5PaUJDYVc1a2FXNW5QRmR3TGtWdVpIQnZhVzUwUGlBOVhHNGdJQ0FnSUNBZ0lDQWdkMmx5WlZCc2RXMWlaWEpXYVdWM1RXOWtaV3d1WjJWMFJHVm1ZWFZzZEZOd1pXRnJaWElvS1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOd1pXRnJaWEp6TG0xaGNDZ29jM0JsWVd0bGNpa2dQVDRnS0Z4dUlDQWdJQ0FnSUNBZ0lEeGlkWFIwYjI1Y2JpQWdJQ0FnSUNBZ0lDQWdJR05zWVhOelRtRnRaVDE3WkdWbVlYVnNkRk53WldGclpYSkNhVzVrYVc1bkxtRnpLQ2hrWldaaGRXeDBVM0JsWVd0bGNpa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1kyeGhjM05PWVcxbElEMGdYQ0pwWTI5dVgySjFkSFJ2YmlCc1lYSm5aU0J2ZFhSd2RYUmZaR1YyYVdObFgySjFkSFJ2Ymx3aU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2RGTndaV0ZyWlhJZ0ppWmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4MFUzQmxZV3RsY2k1blpYUmZhV1FvS1NBOVBUMGdjM0JsWVd0bGNpNW5aWFJmYVdRb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiR0Z6YzA1aGJXVWdLejBnWENJZ2MyVnNaV04wWldSY0lqdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTJ4aGMzTk9ZVzFsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2w5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZia05zYVdOclBYc29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc0xuTmxkRVJsWm1GMWJIUlRjR1ZoYTJWeUtITndaV0ZyWlhJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlgxY2JpQWdJQ0FnSUNBZ0lDQWdJR05vYVd4a1BYczhiR0ZpWld3Z2JHRmlaV3c5ZTNOd1pXRnJaWEl1WjJWMFgyUmxjMk55YVhCMGFXOXVLQ2t1YzJ4cFkyVW9NQ3dnTWpBcGZTQXZQbjFjYmlBZ0lDQWdJQ0FnSUNBdlBseHVJQ0FnSUNBZ0lDQXBLVHRjYmlBZ0lDQWdJSDBwZlZ4dUlDQWdJQzgrWEc0Z0lDazdYRzU5WEc0aUxDQWlhVzF3YjNKMElIc2dZbWx1WkNCOUlHWnliMjBnWENKaGMzUmhiRndpTzF4dWFXMXdiM0owSUV4dloyZGxjaUJtY205dElGd2lMaTR2Ykc5bloyVnlMMHh2WjJkbGNsd2lPMXh1YVcxd2IzSjBJRmRwY21WUWJIVnRZbVZ5Vm1sbGQwMXZaR1ZzSUdaeWIyMGdYQ0l1TDFkcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc1hDSTdYRzVwYlhCdmNuUWdVMjkxYm1SVGJHbGtaWElnWm5KdmJTQmNJaTR2YzNCbFlXdGxjbDkyYjJ4MWJXVXZVMjkxYm1SVGJHbGtaWEpjSWp0Y2JtbHRjRzl5ZENCQ2JIVmxkRzl2ZEdoVFpYUjBhVzVuYzAxbGJuVWdabkp2YlNCY0lpNHZZbXgxWlhSdmIzUm9MMEpzZFdWMGIyOTBhRk5sZEhScGJtZHpUV1Z1ZFZ3aU8xeHVhVzF3YjNKMElFOTFkSEIxZEVSbGRtbGpaVk5sYkdWamRHOXlJR1p5YjIwZ1hDSXVMMkpzZFdWMGIyOTBhQzlQZFhSd2RYUkVaWFpwWTJWVFpXeGxZM1J2Y2x3aU8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQlRiM1Z1WkZObGRIUnBibWR6VG05MFkyZ29LU0I3WEc0Z0lHTnZibk4wSUhkcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc0lEMGdibVYzSUZkcGNtVlFiSFZ0WW1WeVZtbGxkMDF2WkdWc0tDazdYRzRnSUdOdmJuTjBJR3h2WjJkbGNpQTlJRzVsZHlCTWIyZG5aWElvWENKVGIzVnVaRk5sZEhScGJtZHpUbTkwWTJoY0lpazdYRzVjYmlBZ2NtVjBkWEp1SUNoY2JpQWdJQ0E4WW05NFhHNGdJQ0FnSUNCamJHRnpjMDVoYldVOVhDSnpiM1Z1WkY5elpYUjBhVzVuYzE5dWIzUmphRndpWEc0Z0lDQWdJQ0JqYUdsc1pEMTdYRzRnSUNBZ0lDQWdJRHhpYjNoY2JpQWdJQ0FnSUNBZ0lDQmphR2xzWkhKbGJqMTdXMXh1SUNBZ0lDQWdJQ0FnSUNBZ1BGTnZkVzVrVTJ4cFpHVnlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBjbVZRYkhWdFltVnlWbWxsZDAxdlpHVnNQWHQzYVhKbFVHeDFiV0psY2xacFpYZE5iMlJsYkgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1cGRHbGhiRlpoYkhWbFBYdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhWEpsVUd4MWJXSmxjbFpwWlhkTmIyUmxiQzVuWlhSRVpXWmhkV3gwVTNCbFlXdGxjbFp2YkhWdFpTZ3BMbWRsZENncElDb2dNVEF3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDOCtMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1BFOTFkSEIxZEVSbGRtbGpaVk5sYkdWamRHOXlJQzgrTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdQRUpzZFdWMGIyOTBhRk5sZEhScGJtZHpUV1Z1ZFNBdlBpeGNiaUFnSUNBZ0lDQWdJQ0JkZlZ4dUlDQWdJQ0FnSUNBdlBseHVJQ0FnSUNBZ2ZWeHVJQ0FnSUM4K1hHNGdJQ2s3WEc1OVhHNGlMQ0FpYVcxd2IzSjBJSHNnUVhCd0xDQkJjM1JoYkN3Z1IyUnJJSDBnWm5KdmJTQmNJbUZ6ZEdGc0wyZDBhek5jSWp0Y2JtbHRjRzl5ZENCRmVIQmhibVJsWkU1dmRHTm9JR1p5YjIwZ1hDSXVMMjV2ZEdOb0wyVjRjR0Z1WkdWa0wwVjRjR0Z1WkdWa1RtOTBZMmhjSWp0Y2JtbHRjRzl5ZENCT2IzSnRZV3hPYjNSamFDQm1jbTl0SUZ3aUxpOXViM1JqYUM5dWIzSnRZV3d2VG05eWJXRnNUbTkwWTJoY0lqdGNibWx0Y0c5eWRDQk1iMmRuWlhJZ1puSnZiU0JjSWk0dUwyeHZaMmRsY2k5TWIyZG5aWEpjSWp0Y2JtbHRjRzl5ZENCT2IzUmphRk4wWVhSbFZtbGxkMDF2WkdWc0lHWnliMjBnWENJdUxpOXViM1JqYUM5emRHRjBaUzlPYjNSamFGTjBZWFJsVm1sbGQwMXZaR1ZzWENJN1hHNXBiWEJ2Y25RZ2V5Qk9iM1JqYUZOMFlYUmxJSDBnWm5KdmJTQmNJaTR1TDI1dmRHTm9MM04wWVhSbEwwNXZkR05vVTNSaGRHVmNJanRjYm1sdGNHOXlkQ0JUYjNWdVpGTmxkSFJwYm1kelRtOTBZMmdnWm5KdmJTQmNJaTR1TDNOdmRXNWtMMU52ZFc1a1UyVjBkR2x1WjNOT2IzUmphRndpTzF4dVhHNWxlSEJ2Y25RZ2RIbHdaU0JJZVhCeWJtOTBZMmhRY205d2N5QTlJSHRjYmlBZ1oyUnJiVzl1YVhSdmNqb2dSMlJyTGsxdmJtbDBiM0k3WEc1OU8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQkllWEJ5Ym05MFkyZ29jSEp2Y0hNNklFaDVjSEp1YjNSamFGQnliM0J6S1NCN1hHNGdJR052Ym5OMElHNXZkR05vVTNSaGRHVldhV1YzVFc5a1pXd2dQU0J1WlhjZ1RtOTBZMmhUZEdGMFpWWnBaWGROYjJSbGJDZ3BPMXh1SUNCamIyNXpkQ0I3SUdka2EyMXZibWwwYjNJZ2ZTQTlJSEJ5YjNCek8xeHVYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQSGRwYm1SdmQxeHVJQ0FnSUNBZ1kyeGhjM05PWVcxbFBWd2lhSGx3Y201dmRHTm9YQ0pjYmlBZ0lDQWdJRzVoYldWemNHRmpaVDFjSW1oNWNISnViM1JqYUZ3aVhHNGdJQ0FnSUNCblpHdHRiMjVwZEc5eVBYdG5aR3R0YjI1cGRHOXlmVnh1SUNBZ0lDQWdZVzVqYUc5eVBYdEJjM1JoYkM1WGFXNWtiM2RCYm1Ob2IzSXVWRTlRZlZ4dUlDQWdJQ0FnWlhoamJIVnphWFpwZEhrOWUwRnpkR0ZzTGtWNFkyeDFjMmwyYVhSNUxrbEhUazlTUlgxY2JpQWdJQ0FnSUdGd2NHeHBZMkYwYVc5dVBYdEJjSEI5WEc0Z0lDQWdJQ0JqYUdsc1pEMTdYRzRnSUNBZ0lDQWdJRHhqWlc1MFpYSmliM2hjYmlBZ0lDQWdJQ0FnSUNCalpXNTBaWEpYYVdSblpYUTllMXh1SUNBZ0lDQWdJQ0FnSUNBZ1BHSjFkSFJ2Ymx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2YmtKMWRIUnZibEJ5WlhOelJYWmxiblE5ZXlncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1YjNSamFGTjBZWFJsVm1sbGQwMXZaR1ZzTG1kbGRFNXZkR05vVTNSaGRHVW9LUzVuWlhRb0tTQTlQVDBnVG05MFkyaFRkR0YwWlM1T1QxSk5RVXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUQ4Z2JtOTBZMmhUZEdGMFpWWnBaWGROYjJSbGJDNXpaWFJPYjNSamFGTjBZWFJsS0U1dmRHTm9VM1JoZEdVdVJWaFFRVTVFUlVRcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTZJRzV2ZEdOb1UzUmhkR1ZXYVdWM1RXOWtaV3d1YzJWMFRtOTBZMmhUZEdGMFpTaE9iM1JqYUZOMFlYUmxMazVQVWsxQlRDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIMTlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnNZWE56VG1GdFpUMTdibTkwWTJoVGRHRjBaVlpwWlhkTmIyUmxiRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzVuWlhST2IzUmphRk4wWVhSbEtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVZWE1vS0c1dmRHTm9VM1JoZEdVcElEMCtJRndpYUhsd2NtNXZkR05vTFdKMWRIUnZiaTFoY21WaElGd2lJQ3NnYm05MFkyaFRkR0YwWlNsOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtQWHR1YjNSamFGTjBZWFJsVm1sbGQwMXZaR1ZzTG1kbGRFNXZkR05vVTNSaGRHVW9LUzVoY3lnb2JtOTBZMmhUZEdGMFpTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ0FvYm05MFkyaFRkR0YwWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCT2IzUmphRk4wWVhSbExsTlBWVTVFWDFORlZGUkpUa2RUT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1BGTnZkVzVrVTJWMGRHbHVaM05PYjNSamFDQXZQanRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdUbTkwWTJoVGRHRjBaUzVGV0ZCQlRrUkZSRHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4Ulhod1lXNWtaV1JPYjNSamFGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOTBZMmhUZEdGMFpWWnBaWGROYjJSbGJEMTdibTkwWTJoVGRHRjBaVlpwWlhkTmIyUmxiSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCT2IzUmphRk4wWVhSbExrNVBVazFCVERwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlEeE9iM0p0WVd4T2IzUmphQ0F2UGp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcGZWeHVJQ0FnSUNBZ0lDQWdJQ0FnTHo1Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0I5WEc0Z0lDQWdMejVjYmlBZ0tUdGNibjFjYmlJc0lDSnBiWEJ2Y25RZ2V5QmlhVzVrTENCQ2FXNWthVzVuTENCV1lYSnBZV0pzWlNCOUlHWnliMjBnSjJGemRHRnNKenRjYm1sdGNHOXlkQ0JJZVhCeWJHRnVaQ0JtY205dElDZG5hVG92TDBGemRHRnNTSGx3Y214aGJtUW5PMXh1YVcxd2IzSjBJRXh2WjJkbGNpQm1jbTl0SUNjdUxpOHVMaTlzYjJkblpYSXZURzluWjJWeUp6dGNibWx0Y0c5eWRDQjdJRWRrYXlCOUlHWnliMjBnSjJGemRHRnNMMmQwYXpNbk8xeHVhVzF3YjNKMElFaDVjSEpzWVc1a1YyOXlhM053WVdObFZtbGxkMDF2WkdWc0lHWnliMjBnSnk0dlNIbHdjbXhoYm1SWGIzSnJjM0JoWTJWV2FXVjNUVzlrWld3bk8xeHVYRzVsZUhCdmNuUWdZMnhoYzNNZ1NIbHdjbXhoYm1SWGIzSnJjM0JoWTJWelZtbGxkMDF2WkdWc0lIdGNiaUFnY0hKcGRtRjBaU0JvZVhCeWJHRnVaQ0E5SUVoNWNISnNZVzVrTG1kbGRGOWtaV1poZFd4MEtDazdYRzRnSUhCeWFYWmhkR1VnYkc5bloyVnlPaUJNYjJkblpYSWdQU0J1WlhjZ1RHOW5aMlZ5S0NkWGIzSnJjM0JoWTJWV2FXVjNUVzlrWld3bktUdGNibHh1SUNCamIyNXpkSEoxWTNSdmNpZ3BJSHRjYmlBZ0lDQjBhR2x6TG14dloyZGxjaUE5SUc1bGR5Qk1iMmRuWlhJb0oxZHZjbXR6Y0dGalpWWnBaWGROYjJSbGJDY3BPMXh1SUNBZ0lIUm9hWE11Ykc5bloyVnlMbVJsWW5WbktDZFhiM0pyYzNCaFkyVldhV1YzVFc5a1pXd2dZM0psWVhSbFpDY3BPMXh1SUNCOVhHNWNiaUFnY0hWaWJHbGpJR2RsZEZkdmNtdHpjR0ZqWlhNb0tUb2dRbWx1WkdsdVp6eEllWEJ5YkdGdVpDNVhiM0pyYzNCaFkyVmJYVDRnZTF4dUlDQWdJSEpsZEhWeWJpQmlhVzVrS0hSb2FYTXVhSGx3Y214aGJtUXNJQ2QzYjNKcmMzQmhZMlZ6SnlrdVlYTW9LQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ1kyOXVjM1FnZDI5eWEzTndZV05sY3lBOUlIUm9hWE11YUhsd2NteGhibVJjYmlBZ0lDQWdJQ0FnTG1kbGRGOTNiM0pyYzNCaFkyVnpLQ2xjYmlBZ0lDQWdJQ0FnTG5OdmNuUW9LR0U2SUVoNWNISnNZVzVrTGxkdmNtdHpjR0ZqWlN3Z1lqb2dTSGx3Y214aGJtUXVWMjl5YTNOd1lXTmxLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHRXVaMlYwWDJsa0tDa2dMU0JpTG1kbGRGOXBaQ2dwTzF4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lIUm9hWE11Ykc5bloyVnlMbVJsWW5WbktGeHVJQ0FnSUNBZ0lDQW5TSGx3Y214aGJtUWdkMjl5YTNOd1lXTmxjeUIxY0dSaGRHVmtJSFJ2T2lBbkxGeHVJQ0FnSUNBZ0lDQjNiM0pyYzNCaFkyVnpYRzRnSUNBZ0lDQWdJQ0FnTG0xaGNDZ29kMjl5YTNOd1lXTmxPaUJJZVhCeWJHRnVaQzVYYjNKcmMzQmhZMlVwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIzYjNKcmMzQmhZMlV1WjJWMFgyNWhiV1VvS1R0Y2JpQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0FnSUM1MGIxTjBjbWx1WnlncExGeHVJQ0FnSUNBZ0tUdGNiaUFnSUNBZ0lHbG1JQ2gzYjNKcmMzQmhZMlZ6TG14bGJtZDBhQ0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxteHZaMmRsY2k1M1lYSnVLQ2RPYnlCM2IzSnJjM0JoWTJWeklHWnZkVzVrSUdsdUlFaDVjSEpzWVc1a0p5azdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnlaWFIxY200Z2QyOXlhM053WVdObGN6dGNiaUFnSUNCOUtUdGNiaUFnZlZ4dVhHNGdJSEIxWW14cFl5Qm5aWFJHYjJOMWMyVmtWMjl5YTNOd1lXTmxLQ2s2SUVKcGJtUnBibWM4U0hsd2NteGhibVF1VjI5eWEzTndZV05sUGlCN1hHNGdJQ0FnY21WMGRYSnVJR0pwYm1Rb2RHaHBjeTVvZVhCeWJHRnVaQ3dnSjJadlkzVnpaV1JmZDI5eWEzTndZV05sSnlrN1hHNGdJSDFjYmx4dUlDQndkV0pzYVdNZ2MzZHBkR05vVkc5WGIzSnJjM0JoWTJVb2QyOXlhM053WVdObFNXUTZJRzUxYldKbGNpazZJSFp2YVdRZ2UxeHVJQ0FnSUdsbUlDZ2hkMjl5YTNOd1lXTmxTV1FwSUh0Y2JpQWdJQ0FnSUhSb2FYTXViRzluWjJWeUxtVnljbTl5S0NkSmJuWmhiR2xrSUhkdmNtdHpjR0ZqWlNCSlJDQndjbTkyYVdSbFpDQm1iM0lnYzNkcGRHTm9hVzVuSnlrN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2gwYUdsekxtaDVjSEpzWVc1a0xtZGxkRjltYjJOMWMyVmtYM2R2Y210emNHRmpaU2dwTG1kbGRGOXBaQ2dwSUQwOVBTQjNiM0pyYzNCaFkyVkpaQ2tnZTF4dUlDQWdJQ0FnZEdocGN5NXNiMmRuWlhJdVpHVmlkV2NvWEc0Z0lDQWdJQ0FnSUdCWGIzSnJjM0JoWTJVZ0pIdDNiM0pyYzNCaFkyVkpaSDBnYVhNZ1lXeHlaV0ZrZVNCbWIyTjFjMlZrTENCdWJ5QmhZM1JwYjI0Z2RHRnJaVzVnTEZ4dUlDQWdJQ0FnS1R0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlYRzRnSUNBZ2RHaHBjeTVzYjJkblpYSXVhVzVtYnloZ1UzZHBkR05vYVc1bklIUnZJSGR2Y210emNHRmpaU0FrZTNkdmNtdHpjR0ZqWlVsa2ZXQXBPMXh1SUNBZ0lIUm9hWE11YUhsd2NteGhibVF1WjJWMFgzZHZjbXR6Y0dGalpTaDNiM0pyYzNCaFkyVkpaQ2t1Wm05amRYTW9LVHRjYmlBZ2ZWeHVYRzRnSUhCMVlteHBZeUJuWlhSUVpYSk5iMjVwZEc5eVYyOXlhM053WVdObGN5aGNiaUFnSUNCblpHdE5iMjVwZEc5eU9pQkhaR3N1VFc5dWFYUnZjaXhjYmlBZ0tUb2dRbWx1WkdsdVp6eEllWEJ5YkdGdVpDNVhiM0pyYzNCaFkyVmJYVDRnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRGZHZjbXR6Y0dGalpYTW9LUzVoY3lnb2QyOXlhM053WVdObGN6b2dTSGx3Y214aGJtUXVWMjl5YTNOd1lXTmxXMTBwSUQwK0lIdGNiaUFnSUNBZ0lHTnZibk4wSUdoNWNISnNZVzVrVFc5dWFYUnZjbk1nUFNCMGFHbHpMbWg1Y0hKc1lXNWtMbWRsZEY5dGIyNXBkRzl5Y3lncE8xeHVJQ0FnSUNBZ1kyOXVjM1FnZEdGeVoyVjBTSGx3Y214aGJtUk5iMjVwZEc5eUlEMGdhSGx3Y214aGJtUk5iMjVwZEc5eWN5NW1hVzVrS0NodGIyNXBkRzl5S1NBOVBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHZGthMFJwYzNCc1lYbE9ZVzFsSUQwZ1oyUnJUVzl1YVhSdmNpNW5aWFJmWkdsemNHeGhlU2dwUHk1blpYUmZibUZ0WlNncElIeDhJQ2NuTzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JvZVhCeWJHRnVaRVJwYzNCc1lYbE9ZVzFsSUQwZ2JXOXVhWFJ2Y2k1blpYUmZibUZ0WlNncElIeDhJQ2NuTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hjYmlBZ0lDQWdJQ0FnSUNCblpHdEVhWE53YkdGNVRtRnRaU0FtSmx4dUlDQWdJQ0FnSUNBZ0lHaDVjSEpzWVc1a1JHbHpjR3hoZVU1aGJXVWdKaVpjYmlBZ0lDQWdJQ0FnSUNCblpHdEVhWE53YkdGNVRtRnRaU0E5UFQwZ2FIbHdjbXhoYm1SRWFYTndiR0Y1VG1GdFpWeHVJQ0FnSUNBZ0lDQXBJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUFvWEc0Z0lDQWdJQ0FnSUNBZ2JXOXVhWFJ2Y2k1blpYUmZiV0ZyWlNncElEMDlQU0JuWkd0TmIyNXBkRzl5TG1kbGRGOXRZVzUxWm1GamRIVnlaWElvS1NBbUpseHVJQ0FnSUNBZ0lDQWdJRzF2Ym1sMGIzSXVaMlYwWDIxdlpHVnNLQ2tnUFQwOUlHZGthMDF2Ym1sMGIzSXVaMlYwWDIxdlpHVnNLQ2tnSmlaY2JpQWdJQ0FnSUNBZ0lDQnRiMjVwZEc5eUxtZGxkRjk0S0NrZ1BUMDlJR2RrYTAxdmJtbDBiM0l1WjJWMFgyZGxiMjFsZEhKNUtDa3VlQ0FtSmx4dUlDQWdJQ0FnSUNBZ0lHMXZibWwwYjNJdVoyVjBYM2tvS1NBOVBUMGdaMlJyVFc5dWFYUnZjaTVuWlhSZloyVnZiV1YwY25rb0tTNTVYRzRnSUNBZ0lDQWdJQ2s3WEc0Z0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ2FXWWdLQ0YwWVhKblpYUkllWEJ5YkdGdVpFMXZibWwwYjNJcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1c2IyZG5aWEl1ZDJGeWJpaGNiaUFnSUNBZ0lDQWdJQ0FuUTI5MWJHUWdibTkwSUdacGJtUWdiV0YwWTJocGJtY2dTSGx3Y214aGJtUWdiVzl1YVhSdmNpQm1iM0lnUjBSTElHMXZibWwwYjNJbkxGeHVJQ0FnSUNBZ0lDQXBPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdXMTA3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhKbGRIVnliaUIzYjNKcmMzQmhZMlZ6TG1acGJIUmxjaWhjYmlBZ0lDQWdJQ0FnS0hkdmNtdHpjR0ZqWlRvZ1NIbHdjbXhoYm1RdVYyOXlhM053WVdObEtTQTlQbHh1SUNBZ0lDQWdJQ0FnSUhkdmNtdHpjR0ZqWlM1blpYUmZiVzl1YVhSdmNpZ3BMbWRsZEY5cFpDZ3BJRDA5UFNCMFlYSm5aWFJJZVhCeWJHRnVaRTF2Ym1sMGIzSXVaMlYwWDJsa0tDa3NYRzRnSUNBZ0lDQXBPMXh1SUNBZ0lIMHBPMXh1SUNCOVhHNWNiaUFnY0hWaWJHbGpJR2RsZEZkdmNtdHpjR0ZqWlZacFpYZE5iMlJsYkVKNVNXUW9YRzRnSUNBZ2QyOXlhM053WVdObFNXUTZJRzUxYldKbGNpeGNiaUFnS1RvZ1NIbHdjbXhoYm1SWGIzSnJjM0JoWTJWV2FXVjNUVzlrWld3Z2UxeHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ1NIbHdjbXhoYm1SWGIzSnJjM0JoWTJWV2FXVjNUVzlrWld3b2QyOXlhM053WVdObFNXUXBPMXh1SUNCOVhHNTlYRzRpTENBaWFXMXdiM0owSUVoNWNISnNZVzVrSUdaeWIyMGdKMmRwT2k4dlFYTjBZV3hJZVhCeWJHRnVaQ2M3WEc1cGJYQnZjblFnVEc5bloyVnlJR1p5YjIwZ0p5NHVMeTR1TDJ4dloyZGxjaTlNYjJkblpYSW5PMXh1YVcxd2IzSjBJSHNnWW1sdVpDd2dRbWx1WkdsdVp5d2dWbUZ5YVdGaWJHVWdmU0JtY205dElDZGhjM1JoYkNjN1hHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCamJHRnpjeUJJZVhCeWJHRnVaRmR2Y210emNHRmpaVlpwWlhkTmIyUmxiQ0I3WEc0Z0lIQnlhWFpoZEdVZ2FIbHdjbXhoYm1RZ1BTQkllWEJ5YkdGdVpDNW5aWFJmWkdWbVlYVnNkQ2dwTzF4dUlDQndjbWwyWVhSbElIZHZjbXR6Y0dGalpWWmhjbWxoWW14bE9pQldZWEpwWVdKc1pUeEllWEJ5YkdGdVpDNVhiM0pyYzNCaFkyVStJRDBnYm1WM0lGWmhjbWxoWW14bEtHNTFiR3doS1R0Y2JpQWdjSEpwZG1GMFpTQjNiM0pyYzNCaFkyVkpaRG9nYm5WdFltVnlJRDBnTUR0Y2JpQWdjSEpwZG1GMFpTQnNiMmRuWlhJNklFeHZaMmRsY2p0Y2JpQWdZMjl1YzNSeWRXTjBiM0lvZDI5eWEzTndZV05sU1dRNklHNTFiV0psY2lrZ2UxeHVJQ0FnSUhSb2FYTXViRzluWjJWeUlEMGdibVYzSUV4dloyZGxjaWhnU0hsd2NteGhibVJYYjNKcmMzQmhZMlZXYVdWM1RXOWtaV3d0Skh0M2IzSnJjM0JoWTJWSlpIMWdLVHRjYmlBZ0lDQjBhR2x6TG14dloyZGxjaTVrWldKMVp5aGdRM0psWVhScGJtY2dkbWxsZHlCdGIyUmxiQ0JtYjNJZ2QyOXlhM053WVdObElDUjdkMjl5YTNOd1lXTmxTV1I5WUNrN1hHNGdJQ0FnZEdocGN5NTNiM0pyYzNCaFkyVkpaQ0E5SUhkdmNtdHpjR0ZqWlVsa08xeHVJQ0FnSUdOdmJuTjBJSGR2Y210emNHRmpaU0E5SUhSb2FYTXVhSGx3Y214aGJtUXVaMlYwWDNkdmNtdHpjR0ZqWlNoM2IzSnJjM0JoWTJWSlpDazdYRzRnSUNBZ2FXWWdLQ0YzYjNKcmMzQmhZMlVwSUh0Y2JpQWdJQ0FnSUhSb2FYTXViRzluWjJWeUxtVnljbTl5S0dCWGIzSnJjM0JoWTJVZ2QybDBhQ0JKUkNBa2UzZHZjbXR6Y0dGalpVbGtmU0J1YjNRZ1ptOTFibVJnS1R0Y2JpQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWhnVjI5eWEzTndZV05sSUhkcGRHZ2dTVVFnSkh0M2IzSnJjM0JoWTJWSlpIMGdibTkwSUdadmRXNWtZQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lIUm9hWE11ZFhCa1lYUmxWMjl5YTNOd1lXTmxWbUZ5YVdGaWJHVW9LVHRjYmlBZ0lDQjBhR2x6TG5ObGRIVndWWEJrWVhSbFRHbHpkR1Z1WlhKR2IzSlRhV2R1WVd3b0oyTnNhV1Z1ZEY5aFpHUmxaQ2NwTzF4dUlDQWdJSFJvYVhNdWMyVjBkWEJWY0dSaGRHVk1hWE4wWlc1bGNrWnZjbE5wWjI1aGJDZ25ZMnhwWlc1MFgzSmxiVzkyWldRbktUdGNiaUFnSUNCMGFHbHpMbk5sZEhWd1ZYQmtZWFJsVEdsemRHVnVaWEpHYjNKVGFXZHVZV3dvSjJOc2FXVnVkRjl0YjNabFpDY3BPMXh1SUNCOVhHNGdJSEIxWW14cFl5Qm5aWFJEYkdsbGJuUnpLQ2s2SUVKcGJtUnBibWM4U0hsd2NteGhibVF1UTJ4cFpXNTBXMTArSUh0Y2JpQWdJQ0J5WlhSMWNtNGdZbWx1WkNoMGFHbHpMbmR2Y210emNHRmpaVlpoY21saFlteGxMbWRsZENncExDQW5ZMnhwWlc1MGN5Y3BMbUZ6S0NoamJHbGxiblJ6S1NBOVBpQjdYRzRnSUNBZ0lDQjBhR2x6TG14dloyZGxjaTVrWldKMVp5aGNiaUFnSUNBZ0lDQWdZRU5zYVdWdWRITWdabTl5SUhkdmNtdHpjR0ZqWlNBa2UzUm9hWE11ZDI5eWEzTndZV05sU1dSOU9pQWtlMk5zYVdWdWRITmNiaUFnSUNBZ0lDQWdJQ0F1YldGd0tDaGpiR2xsYm5RcElEMCtJR05zYVdWdWRDNW5aWFJmWTJ4aGMzTW9LU2xjYmlBZ0lDQWdJQ0FnSUNBdWRHOVRkSEpwYm1jb0tYMWdMRnh1SUNBZ0lDQWdLVHRjYmlBZ0lDQWdJSEpsZEhWeWJpQmpiR2xsYm5Sek8xeHVJQ0FnSUgwcE8xeHVJQ0I5WEc1Y2JpQWdjSEpwZG1GMFpTQjFjR1JoZEdWWGIzSnJjM0JoWTJWV1lYSnBZV0pzWlNncE9pQjJiMmxrSUh0Y2JpQWdJQ0IwYUdsekxuZHZjbXR6Y0dGalpWWmhjbWxoWW14bExuTmxkQ2gwYUdsekxtaDVjSEpzWVc1a0xtZGxkRjkzYjNKcmMzQmhZMlVvZEdocGN5NTNiM0pyYzNCaFkyVkpaQ2twTzF4dUlDQWdJSFJvYVhNdWJHOW5aMlZ5TG1SbFluVm5LRnh1SUNBZ0lDQWdZRlZ3WkdGMFpXUWdkMjl5YTNOd1lXTmxJSFpoY21saFlteGxJR1p2Y2lCM2IzSnJjM0JoWTJVZ0pIdDBhR2x6TG5kdmNtdHpjR0ZqWlVsa2ZXQXNYRzRnSUNBZ0tUdGNiaUFnZlZ4dVhHNGdJSEJ5YVhaaGRHVWdjMlYwZFhCVmNHUmhkR1ZNYVhOMFpXNWxja1p2Y2xOcFoyNWhiQ2h6YVdkdVlXeE9ZVzFsT2lCemRISnBibWNwT2lCMmIybGtJSHRjYmlBZ0lDQjBhR2x6TG1oNWNISnNZVzVrTG1OdmJtNWxZM1FvYzJsbmJtRnNUbUZ0WlN3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnZEdocGN5NTFjR1JoZEdWWGIzSnJjM0JoWTJWV1lYSnBZV0pzWlNncE8xeHVJQ0FnSUNBZ2RHaHBjeTVzYjJkblpYSXVaR1ZpZFdjb1hHNGdJQ0FnSUNBZ0lHQlhiM0pyYzNCaFkyVWdkbUZ5YVdGaWJHVWdkWEJrWVhSbFpDQm1iM0lnZDI5eWEzTndZV05sSUNSN2RHaHBjeTUzYjNKcmMzQmhZMlZKWkgwZ2IyNGdjMmxuYm1Gc0lDUjdjMmxuYm1Gc1RtRnRaWDFnTEZ4dUlDQWdJQ0FnS1R0Y2JpQWdJQ0I5S1R0Y2JpQWdmVnh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQk1iMmRuWlhJZ1puSnZiU0FuTGk0dkxpNHZiRzluWjJWeUwweHZaMmRsY2ljN1hHNXBiWEJ2Y25RZ2V5QkllWEJ5YkdGdVpGZHZjbXR6Y0dGalpYTldhV1YzVFc5a1pXd2dmU0JtY205dElDY3VMMGg1Y0hKc1lXNWtWMjl5YTNOd1lXTmxjMVpwWlhkTmIyUmxiQ2M3WEc1cGJYQnZjblFnU0hsd2NteGhibVFnWm5KdmJTQW5aMms2THk5QmMzUmhiRWg1Y0hKc1lXNWtKenRjYm1sdGNHOXlkQ0I3SUVka2F5d2dSM1JySUgwZ1puSnZiU0FuWVhOMFlXd3ZaM1JyTXljN1hHNXBiWEJ2Y25RZ2V5QmlhVzVrTENCQ2FXNWthVzVuSUgwZ1puSnZiU0FuWVhOMFlXd25PMXh1WEc1amIyNXpkQ0IzYjNKcmMzQmhZMlZ6Vm1sbGQwMXZaR1ZzT2lCSWVYQnliR0Z1WkZkdmNtdHpjR0ZqWlhOV2FXVjNUVzlrWld3Z1BWeHVJQ0J1WlhjZ1NIbHdjbXhoYm1SWGIzSnJjM0JoWTJWelZtbGxkMDF2WkdWc0tDazdYRzVqYjI1emRDQnNiMmRuWlhJZ1BTQnVaWGNnVEc5bloyVnlLQ2RYYjNKcmMzQmhZMlZ6UW1GeUp5azdYRzVjYm1OdmJuTjBJR05zYVdWdWRFbGpiMjVUYVhwbElEMGdNalE3WEc1Y2JtTnZibk4wSUdkbGRFSjFkSFJ2YmxkcFpIUm9JRDBnS0hkdmNtdHpjR0ZqWlRvZ1NIbHdjbXhoYm1RdVYyOXlhM053WVdObEtUb2dRbWx1WkdsdVp6eHVkVzFpWlhJK0lEMCtJSHRjYmlBZ2NtVjBkWEp1SUhkdmNtdHpjR0ZqWlhOV2FXVjNUVzlrWld4Y2JpQWdJQ0F1WjJWMFYyOXlhM053WVdObFZtbGxkMDF2WkdWc1FubEpaQ2gzYjNKcmMzQmhZMlV1WjJWMFgybGtLQ2twWEc0Z0lDQWdMbWRsZEVOc2FXVnVkSE1vS1Z4dUlDQWdJQzVoY3lnb1kyeHBaVzUwY3lrZ1BUNGdlMXh1SUNBZ0lDQWdZMjl1YzNRZ1kyeHBaVzUwUTI5MWJuUWdQU0JqYkdsbGJuUnpMbXhsYm1kMGFEdGNiaUFnSUNBZ0lHTnZibk4wSUdKaGMyVlhhV1IwYUNBOVhHNGdJQ0FnSUNBZ0lHTnNhV1Z1ZEVOdmRXNTBJRDA5UFNBd0lEOGdZMnhwWlc1MFNXTnZibE5wZW1VZ09pQmpiR2xsYm5SRGIzVnVkQ0FxSUdOc2FXVnVkRWxqYjI1VGFYcGxJQ3NnT0R0Y2JpQWdJQ0FnSUhKbGRIVnliaUJpWVhObFYybGtkR2c3WEc0Z0lDQWdmU2s3WEc1OU8xeHVYRzVqYjI1emRDQm5aWFJYYjNKcmMzQmhZMlZ6UW1GeVYybGtkR2dnUFNBb1oyUnJiVzl1YVhSdmNqb2dSMlJyTGsxdmJtbDBiM0lwT2lCQ2FXNWthVzVuUEc1MWJXSmxjajRnUFQ0Z2UxeHVJQ0J5WlhSMWNtNGdkMjl5YTNOd1lXTmxjMVpwWlhkTmIyUmxiRnh1SUNBZ0lDNW5aWFJRWlhKTmIyNXBkRzl5VjI5eWEzTndZV05sY3loblpHdHRiMjVwZEc5eUtWeHVJQ0FnSUM1aGN5Z29kMjl5YTNOd1lXTmxjeWtnUFQ0Z2UxeHVJQ0FnSUNBZ1kyOXVjM1FnWm05amRYTmxaRmR2Y210emNHRmpaU0E5SUhkdmNtdHpjR0ZqWlhOV2FXVjNUVzlrWld3dVoyVjBSbTlqZFhObFpGZHZjbXR6Y0dGalpTZ3BPMXh1SUNBZ0lDQWdZMjl1YzNRZ2QybGtkR2dnUFNCM2IzSnJjM0JoWTJWekxuSmxaSFZqWlNnb1lXTmpMQ0IzYjNKcmMzQmhZMlVwSUQwK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlDaGNiaUFnSUNBZ0lDQWdJQ0JoWTJNZ0sxeHVJQ0FnSUNBZ0lDQWdJQ2huWlhSQ2RYUjBiMjVYYVdSMGFDaDNiM0pyYzNCaFkyVXBMbWRsZENncElDc2dPU2tnSzF4dUlDQWdJQ0FnSUNBZ0lDaDNiM0pyYzNCaFkyVXVaMlYwWDJsa0tDa2dQVDA5SUdadlkzVnpaV1JYYjNKcmMzQmhZMlV1WjJWMEtDa3VaMlYwWDJsa0tDa2dQeUF5TUNBNklEQXBYRzRnSUNBZ0lDQWdJQ2s3WEc0Z0lDQWdJQ0I5TENBd0tUdGNiaUFnSUNBZ0lHeHZaMmRsY2k1a1pXSjFaeWhjYmlBZ0lDQWdJQ0FnWUVOaGJHTjFiR0YwWldRZ2QyOXlhM053WVdObGN5QmlZWElnZDJsa2RHZ2dabTl5SUcxdmJtbDBiM0lnSkh0blpHdHRiMjVwZEc5eUxtZGxkRjl0WVc1MVptRmpkSFZ5WlhJb0tYMDZJQ1I3ZDJsa2RHaDljSGhnTEZ4dUlDQWdJQ0FnS1R0Y2JpQWdJQ0FnSUhKbGRIVnliaUIzYVdSMGFEdGNiaUFnSUNCOUtUdGNibjA3WEc1Y2JtTnZibk4wSUdkbGRFTnNhV1Z1ZEVsamIyNU9ZVzFsSUQwZ0tHTnNhV1Z1ZERvZ1NIbHdjbXhoYm1RdVEyeHBaVzUwS1RvZ2MzUnlhVzVuSUQwK0lIdGNiaUFnWTI5dWMzUWdZMnhoYzNOT1lXMWxJRDBnWTJ4cFpXNTBMbWRsZEY5amJHRnpjeWdwTG5SdlRHOTNaWEpEWVhObEtDazdYRzRnSUdOdmJuTjBJR3BsZEdKeVlXbHVjMUJ5WldacGVDQTlJQ2RxWlhSaWNtRnBibk10Snp0Y2JpQWdhV1lnS0dOc1lYTnpUbUZ0WlM1emRHRnlkSE5YYVhSb0tHcGxkR0p5WVdsdWMxQnlaV1pwZUNrcElIdGNiaUFnSUNCeVpYUjFjbTRnWTJ4aGMzTk9ZVzFsTG5KbGNHeGhZMlVvYW1WMFluSmhhVzV6VUhKbFptbDRMQ0FuSnlrN1hHNGdJSDFjYmlBZ2NtVjBkWEp1SUdOc1lYTnpUbUZ0WlR0Y2JuMDdYRzVjYm5SNWNHVWdWMjl5YTNOd1lXTmxjMEpoY2xCeWIzQnpJRDBnZTF4dUlDQm5aR3R0YjI1cGRHOXlPaUJIWkdzdVRXOXVhWFJ2Y2p0Y2JuMDdYRzVjYm1OdmJuTjBJRmR2Y210emNHRmpaVUoxZEhSdmJrTnZiblJsYm5RZ1BTQW9kMjl5YTNOd1lXTmxPaUJJZVhCeWJHRnVaQzVYYjNKcmMzQmhZMlVwSUQwK0lIdGNiaUFnY21WMGRYSnVJSGR2Y210emNHRmpaWE5XYVdWM1RXOWtaV3hjYmlBZ0lDQXVaMlYwVjI5eWEzTndZV05sVm1sbGQwMXZaR1ZzUW5sSlpDaDNiM0pyYzNCaFkyVXVaMlYwWDJsa0tDa3BYRzRnSUNBZ0xtZGxkRU5zYVdWdWRITW9LVnh1SUNBZ0lDNWhjeWdvWTJ4cFpXNTBjem9nU0hsd2NteGhibVF1UTJ4cFpXNTBXMTBwSUQwK0lDaGNiaUFnSUNBZ0lEeGliM2hjYmlBZ0lDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFZ3aWQyOXlhM053WVdObFgySjFkSFJ2Ymw5amIyNTBaVzUwWENKY2JpQWdJQ0FnSUNBZ1kyaHBiR1E5ZTF4dUlDQWdJQ0FnSUNBZ0lHTnNhV1Z1ZEhNdWJHVnVaM1JvSUQwOVBTQXdJRDhnS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNBdlBseHVJQ0FnSUNBZ0lDQWdJQ2tnT2lBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4WW05NFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtORlRsUkZVbjFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzYVdkdVBYdEhkR3N1UVd4cFoyNHVRMFZPVkVWU2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJHRnpjMDVoYldVOVhDSjNiM0pyYzNCaFkyVmZZblYwZEc5dVgybGpiMjV6WDJOdmJuUmhhVzVsY2x3aVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtjbVZ1UFh0amJHbGxiblJ6TG0xaGNDZ29ZMnhwWlc1MEtTQTlQaUFvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEdsamIyNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xqYjI0OWUyZGxkRU5zYVdWdWRFbGpiMjVPWVcxbEtHTnNhV1Z1ZENsOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiR0Z6YzA1aGJXVTlYQ0ozYjNKcmMzQmhZMlZmWW5WMGRHOXVYMmxqYjI1Y0lseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDa3BmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUM4K1hHNGdJQ0FnS1NrN1hHNTlPMXh1WEc1amIyNXpkQ0JYYjNKcmMzQmhZMlZDZFhSMGIyNGdQU0FvZDI5eWEzTndZV05sT2lCSWVYQnliR0Z1WkM1WGIzSnJjM0JoWTJVcElEMCtJSHRjYmlBZ2NtVjBkWEp1SUNoY2JpQWdJQ0E4WW5WMGRHOXVYRzRnSUNBZ0lDQjNhV1IwYUZKbGNYVmxjM1E5ZTJkbGRFSjFkSFJ2YmxkcFpIUm9LSGR2Y210emNHRmpaU2w5WEc0Z0lDQWdJQ0JqYkdGemMwNWhiV1U5ZTNkdmNtdHpjR0ZqWlhOV2FXVjNUVzlrWld4Y2JpQWdJQ0FnSUNBZ0xtZGxkRVp2WTNWelpXUlhiM0pyYzNCaFkyVW9LVnh1SUNBZ0lDQWdJQ0F1WVhNb1hHNGdJQ0FnSUNBZ0lDQWdLR1p2WTNWelpXUlhiM0pyYzNCaFkyVTZJRWg1Y0hKc1lXNWtMbGR2Y210emNHRmpaU2tnUFQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ2QzYjNKcmMzQmhZMlZmWW5WMGRHOXVKeUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQW9abTlqZFhObFpGZHZjbXR6Y0dGalpTNW5aWFJmYVdRb0tTQTlQVDBnZDI5eWEzTndZV05sTG1kbGRGOXBaQ2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRDhnSnlCbWIyTjFjMlZrSjF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0E2SUNjbktTeGNiaUFnSUNBZ0lDQWdLWDFjYmlBZ0lDQWdJR05vYVd4a1BYdFhiM0pyYzNCaFkyVkNkWFIwYjI1RGIyNTBaVzUwS0hkdmNtdHpjR0ZqWlNsOVhHNGdJQ0FnSUNCdmJrTnNhV05yUFhzb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUd4dloyZGxjaTVrWldKMVp5aGNiaUFnSUNBZ0lDQWdJQ0JnVUhKbGMzTnBibWNnWW5WMGRHOXVJR1p2Y2lCM2IzSnJjM0JoWTJVZ0pIdDNiM0pyYzNCaFkyVXVaMlYwWDJsa0tDbDlMQ0J6ZDJsMFkyaHBibWNnZEc4Z2FYUmdMRnh1SUNBZ0lDQWdJQ0FwTzF4dUlDQWdJQ0FnSUNCM2IzSnJjM0JoWTJWelZtbGxkMDF2WkdWc0xuTjNhWFJqYUZSdlYyOXlhM053WVdObEtIZHZjbXR6Y0dGalpTNW5aWFJmYVdRb0tTazdYRzRnSUNBZ0lDQjlmVnh1SUNBZ0lDOCtYRzRnSUNrN1hHNTlPMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJYYjNKcmMzQmhZMlZ6UW1GeUtIQnliM0J6T2lCWGIzSnJjM0JoWTJWelFtRnlVSEp2Y0hNcElIdGNiaUFnWTI5dWMzUWdaMlJyYlc5dWFYUnZjam9nUjJSckxrMXZibWwwYjNJZ1BTQndjbTl3Y3k1blpHdHRiMjVwZEc5eU8xeHVYRzRnSUd4dloyZGxjaTVrWldKMVp5aGNiaUFnSUNCZ1YyOXlhM053WVdObGMwSmhjaUJqY21WaGRHVmtJRzl1SUcxdmJtbDBiM0lnSkh0blpHdHRiMjVwZEc5eUxtZGxkRjl0WVc1MVptRmpkSFZ5WlhJb0tYMWdMRnh1SUNBcE8xeHVYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnYUdGc2FXZHVQWHRIZEdzdVFXeHBaMjR1VTFSQlVsUjlYRzRnSUNBZ0lDQjJZV3hwWjI0OWUwZDBheTVCYkdsbmJpNVRWRUZTVkgxY2JpQWdJQ0FnSUdOc1lYTnpUbUZ0WlQxY0luZHZjbXR6Y0dGalpYTmZZbUZ5WDJOdmJuUmhhVzVsY2x3aVhHNGdJQ0FnSUNCamMzTTllMmRsZEZkdmNtdHpjR0ZqWlhOQ1lYSlhhV1IwYUNoblpHdHRiMjVwZEc5eUtTNWhjeWhjYmlBZ0lDQWdJQ0FnS0hkcFpIUm9PaUJ1ZFcxaVpYSXBJRDArSUdCdGFXNHRkMmxrZEdnNklDUjdkMmxrZEdoOWNIZzdZQ3hjYmlBZ0lDQWdJQ2w5WEc0Z0lDQWdJQ0JqYUdsc1pEMTdkMjl5YTNOd1lXTmxjMVpwWlhkTmIyUmxiRnh1SUNBZ0lDQWdJQ0F1WjJWMFVHVnlUVzl1YVhSdmNsZHZjbXR6Y0dGalpYTW9aMlJyYlc5dWFYUnZjaWxjYmlBZ0lDQWdJQ0FnTG1GektDaDNiM0pyYzNCaFkyVnpPaUJJZVhCeWJHRnVaQzVYYjNKcmMzQmhZMlZiWFNrZ1BUNGdLRnh1SUNBZ0lDQWdJQ0FnSUR4aWIzZ2dZMmhwYkdSeVpXNDllM2R2Y210emNHRmpaWE11YldGd0tGZHZjbXR6Y0dGalpVSjFkSFJ2YmlsOUlDOCtYRzRnSUNBZ0lDQWdJQ2twZlZ4dUlDQWdJQzgrWEc0Z0lDazdYRzU5WEc0aUxDQWlhVzF3YjNKMElGUnlZWGtnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hVY21GNVhDSTdYRzVwYlhCdmNuUWdURzluWjJWeUlHWnliMjBnWENJdUxpOXNiMmRuWlhJdlRHOW5aMlZ5WENJN1hHNXBiWEJ2Y25RZ2V5QmlhVzVrTENCQ2FXNWthVzVuTENCV1lYSnBZV0pzWlNCOUlHWnliMjBnWENKaGMzUmhiRndpTzF4dVhHNWxlSEJ2Y25RZ1kyeGhjM01nVTNsemRHVnRWSEpoZVZacFpYZE5iMlJsYkNCN1hHNGdJSEJ5YVhaaGRHVWdjbVZoWkc5dWJIa2dkSEpoZVNBOUlGUnlZWGt1WjJWMFgyUmxabUYxYkhRb0tUdGNiaUFnY0hKcGRtRjBaU0J5WldGa2IyNXNlU0JzYjJkblpYSTZJRXh2WjJkbGNpQTlJRzVsZHlCTWIyZG5aWElvZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTV1WVcxbEtUdGNiaUFnY0hKcGRtRjBaU0JtYjJOMWMyVmtWSEpoZVVsMFpXMDZJRlpoY21saFlteGxQRlJ5WVhrdVZISmhlVWwwWlcwZ2ZDQnVkV3hzUGlBOUlHNWxkeUJXWVhKcFlXSnNaU2h1ZFd4c0tUdGNibHh1SUNCamIyNXpkSEoxWTNSdmNpZ3BJSHQ5WEc1Y2JpQWdjSFZpYkdsaklHZGxkRlJ5WVhsSmRHVnRjeWdwT2lCQ2FXNWthVzVuUEZSeVlYa3VWSEpoZVVsMFpXMWJYVDRnZTF4dUlDQWdJSEpsZEhWeWJpQmlhVzVrS0hSb2FYTXVkSEpoZVN3Z1hDSnBkR1Z0YzF3aUtUdGNiaUFnZlZ4dUlDQndkV0pzYVdNZ1oyVjBSbTlqZFhObFpGUnlZWGxKZEdWdEtDazZJRUpwYm1ScGJtYzhWSEpoZVM1VWNtRjVTWFJsYlNCOElHNTFiR3crSUh0Y2JpQWdJQ0J5WlhSMWNtNGdZbWx1WkNoMGFHbHpMbVp2WTNWelpXUlVjbUY1U1hSbGJTazdYRzRnSUgxY2JseHVJQ0J3ZFdKc2FXTWdjMlYwUm05amRYTmxaRlJ5WVhsSmRHVnRLR2wwWlcwNklGUnlZWGt1VkhKaGVVbDBaVzBnZkNCdWRXeHNLVG9nZG05cFpDQjdYRzRnSUNBZ2FXWWdLQ0ZwZEdWdEtTQjdYRzRnSUNBZ0lDQjBhR2x6TG14dloyZGxjaTVrWldKMVp5aGNJa05zWldGeWFXNW5JR1p2WTNWelpXUWdkSEpoZVNCcGRHVnRYQ0lwTzF4dUlDQWdJQ0FnZEdocGN5NW1iMk4xYzJWa1ZISmhlVWwwWlcwdWMyVjBLRzUxYkd3cE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0IwYUdsekxteHZaMmRsY2k1a1pXSjFaeWhjSWtadlkzVnphVzVuSUhSeVlYa2dhWFJsYlZ3aUxDQnBkR1Z0TG1kbGRGOTBhWFJzWlNncEtUdGNiaUFnSUNBZ0lIUm9hWE11Wm05amRYTmxaRlJ5WVhsSmRHVnRMbk5sZENocGRHVnRLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J3ZFdKc2FXTWdjbVZtY21WemFGUnlZWGxKZEdWdEtHbDBaVzA2SUZSeVlYa3VWSEpoZVVsMFpXMHBPaUIyYjJsa0lIdGNiaUFnSUNCMGFHbHpMbXh2WjJkbGNpNWtaV0oxWnloY2JpQWdJQ0FnSUZ3aVVtVm1jbVZ6YUdsdVp5QjBjbUY1SUdsMFpXMWNJaXhjYmlBZ0lDQWdJR2wwWlcwdVoyVjBYM1JwZEd4bEtDa3NYRzRnSUNBZ0lDQnBkR1Z0TG1kbGRGOTBiMjlzZEdsd0tDay9MbVJsYzJOeWFYQjBhVzl1TEZ4dUlDQWdJQ0FnYVhSbGJTNW5aWFJmYVdOdmJsOXVZVzFsS0NsY2JpQWdJQ0FwTzF4dUlDQWdJR2wwWlcwdVlXSnZkWFJmZEc5ZmMyaHZkeWdwTzF4dUlDQjlYRzU5WEc0aUxDQWlhVzF3YjNKMElIc2dRWE4wWVd3c0lFZGtheUI5SUdaeWIyMGdYQ0poYzNSaGJDOW5kR3N6WENJN1hHNWNiaThxS2x4dUlDb2dRMmhsWTJ0eklHbG1JR0Z1SUdWMlpXNTBJR2x6SUdFZ2NISnBiV0Z5ZVNCamJHbGphMXh1SUNvZ1FIQmhjbUZ0SUdWMlpXNTBJQzBnVkdobElHTnNhV05ySUdWMlpXNTBJSFJ2SUdOb1pXTnJYRzRnS2lCQWNtVjBkWEp1Y3lCVWNuVmxJR2xtSUhSb1pTQmxkbVZ1ZENCcGN5QmhJSEJ5YVcxaGNua2dZMnhwWTJzc0lHWmhiSE5sSUc5MGFHVnlkMmx6WlZ4dUlDb3ZYRzVsZUhCdmNuUWdZMjl1YzNRZ2FYTlFjbWx0WVhKNVEyeHBZMnNnUFNBb1pYWmxiblE2SUVGemRHRnNMa05zYVdOclJYWmxiblFwT2lCaWIyOXNaV0Z1SUQwK1hHNGdJR1YyWlc1MExtSjFkSFJ2YmlBOVBUMGdSMlJyTGtKVlZGUlBUbDlRVWtsTlFWSlpPMXh1WEc0dktpcGNiaUFxSUVOb1pXTnJjeUJwWmlCaGJpQmxkbVZ1ZENCcGN5QmhJSE5sWTI5dVpHRnllU0JqYkdsamExeHVJQ29nUUhCaGNtRnRJR1YyWlc1MElDMGdWR2hsSUdOc2FXTnJJR1YyWlc1MElIUnZJR05vWldOclhHNGdLaUJBY21WMGRYSnVjeUJVY25WbElHbG1JSFJvWlNCbGRtVnVkQ0JwY3lCaElITmxZMjl1WkdGeWVTQmpiR2xqYXl3Z1ptRnNjMlVnYjNSb1pYSjNhWE5sWEc0Z0tpOWNibVY0Y0c5eWRDQmpiMjV6ZENCcGMxTmxZMjl1WkdGeWVVTnNhV05ySUQwZ0tHVjJaVzUwT2lCQmMzUmhiQzVEYkdsamEwVjJaVzUwS1RvZ1ltOXZiR1ZoYmlBOVBseHVJQ0JsZG1WdWRDNWlkWFIwYjI0Z1BUMDlJRWRrYXk1Q1ZWUlVUMDVmVTBWRFQwNUVRVkpaTzF4dVhHNHZLaXBjYmlBcUlFTm9aV05yY3lCcFppQmhiaUJsZG1WdWRDQnBjeUJoSUcxcFpHUnNaU0JqYkdsamExeHVJQ29nUUhCaGNtRnRJR1YyWlc1MElDMGdWR2hsSUdOc2FXTnJJR1YyWlc1MElIUnZJR05vWldOclhHNGdLaUJBY21WMGRYSnVjeUJVY25WbElHbG1JSFJvWlNCbGRtVnVkQ0JwY3lCaElHMXBaR1JzWlNCamJHbGpheXdnWm1Gc2MyVWdiM1JvWlhKM2FYTmxYRzRnS2k5Y2JtVjRjRzl5ZENCamIyNXpkQ0JwYzAxcFpHUnNaVU5zYVdOcklEMGdLR1YyWlc1ME9pQkJjM1JoYkM1RGJHbGphMFYyWlc1MEtUb2dZbTl2YkdWaGJpQTlQbHh1SUNCbGRtVnVkQzVpZFhSMGIyNGdQVDA5SUVka2F5NUNWVlJVVDA1ZlRVbEVSRXhGTzF4dVhHNHZLaXBjYmlBcUlFTm9aV05yY3lCcFppQmhiaUJsZG1WdWRDQnBjeUJoSUhOamNtOXNiQ0IxY0Z4dUlDb2dRSEJoY21GdElHVjJaVzUwSUMwZ1ZHaGxJSE5qY205c2JDQmxkbVZ1ZENCMGJ5QmphR1ZqYTF4dUlDb2dRSEpsZEhWeWJuTWdWSEoxWlNCcFppQjBhR1VnWlhabGJuUWdhWE1nWVNCelkzSnZiR3dnZFhBc0lHWmhiSE5sSUc5MGFHVnlkMmx6WlZ4dUlDb3ZYRzVsZUhCdmNuUWdZMjl1YzNRZ2FYTlRZM0p2Ykd4VmNDQTlJQ2hsZG1WdWREb2dSMlJyTGtWMlpXNTBLVG9nWW05dmJHVmhiaUE5UGlCN1hHNGdJR052Ym5OMElGdGthWEpsWTNScGIyNVRkV05qWlhOekxDQmthWEpsWTNScGIyNWRJRDBnWlhabGJuUXVaMlYwWDNOamNtOXNiRjlrYVhKbFkzUnBiMjRvS1R0Y2JpQWdZMjl1YzNRZ1cyUmxiSFJoVTNWalkyVnpjeXdnTENCNVUyTnliMnhzWFNBOUlHVjJaVzUwTG1kbGRGOXpZM0p2Ykd4ZlpHVnNkR0Z6S0NrN1hHNWNiaUFnYVdZZ0tHUnBjbVZqZEdsdmJsTjFZMk5sYzNNZ0ppWWdaR2x5WldOMGFXOXVJRDA5UFNCSFpHc3VVMk55YjJ4c1JHbHlaV04wYVc5dUxsVlFLU0I3WEc0Z0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lIMWNibHh1SUNCcFppQW9aR1ZzZEdGVGRXTmpaWE56SUNZbUlIbFRZM0p2Ykd3Z1BDQXdLU0I3WEc0Z0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lIMWNibHh1SUNCeVpYUjFjbTRnWm1Gc2MyVTdYRzU5TzF4dVhHNHZLaXBjYmlBcUlFTm9aV05yY3lCcFppQmhiaUJsZG1WdWRDQnBjeUJoSUhOamNtOXNiQ0JrYjNkdVhHNGdLaUJBY0dGeVlXMGdaWFpsYm5RZ0xTQlVhR1VnYzJOeWIyeHNJR1YyWlc1MElIUnZJR05vWldOclhHNGdLaUJBY21WMGRYSnVjeUJVY25WbElHbG1JSFJvWlNCbGRtVnVkQ0JwY3lCaElITmpjbTlzYkNCa2IzZHVMQ0JtWVd4elpTQnZkR2hsY25kcGMyVmNiaUFxTDF4dVpYaHdiM0owSUdOdmJuTjBJR2x6VTJOeWIyeHNSRzkzYmlBOUlDaGxkbVZ1ZERvZ1IyUnJMa1YyWlc1MEtUb2dZbTl2YkdWaGJpQTlQaUI3WEc0Z0lHTnZibk4wSUZ0a2FYSmxZM1JwYjI1VGRXTmpaWE56TENCa2FYSmxZM1JwYjI1ZElEMGdaWFpsYm5RdVoyVjBYM05qY205c2JGOWthWEpsWTNScGIyNG9LVHRjYmlBZ1kyOXVjM1FnVzJSbGJIUmhVM1ZqWTJWemN5d2dMQ0I1VTJOeWIyeHNYU0E5SUdWMlpXNTBMbWRsZEY5elkzSnZiR3hmWkdWc2RHRnpLQ2s3WEc1Y2JpQWdhV1lnS0dScGNtVmpkR2x2YmxOMVkyTmxjM01nSmlZZ1pHbHlaV04wYVc5dUlEMDlQU0JIWkdzdVUyTnliMnhzUkdseVpXTjBhVzl1TGtSUFYwNHBJSHRjYmlBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ2ZWeHVYRzRnSUdsbUlDaGtaV3gwWVZOMVkyTmxjM01nSmlZZ2VWTmpjbTlzYkNBK0lEQXBJSHRjYmlBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUJtWVd4elpUdGNibjA3WEc0aUxDQWlhVzF3YjNKMElIc2dZbWx1WkN3Z1IybHZMQ0JXWVhKcFlXSnNaU0I5SUdaeWIyMGdYQ0poYzNSaGJGd2lPMXh1YVcxd2IzSjBJSHNnVkhKaGVVbDBaVzFPYjNSamFGQnliM0J6SUgwZ1puSnZiU0JjSWk0dlUzbHpkR1Z0VkhKaGVWd2lPMXh1YVcxd2IzSjBJSHNnUjJSckxDQkhkR3NnZlNCbWNtOXRJRndpWVhOMFlXd3ZaM1JyTTF3aU8xeHVhVzF3YjNKMElIdGNiaUFnYVhOTmFXUmtiR1ZEYkdsamF5eGNiaUFnYVhOUWNtbHRZWEo1UTJ4cFkyc3NYRzRnSUdselUyVmpiMjVrWVhKNVEyeHBZMnNzWEc1OUlHWnliMjBnWENJdUxpOXNhV0l2WlhabGJuUnpMMjF2ZFhObFhDSTdYRzVwYlhCdmNuUWdRWE4wWVd4VWNtRjVJR1p5YjIwZ1hDSm5hVG92TDBGemRHRnNWSEpoZVZ3aU8xeHVYRzVtZFc1amRHbHZiaUJuWlhSVWNtRjVTWFJsYlU1dmRHTm9RMnhoYzNOT1lXMWxLR1p2WTNWelpXUkpkR1Z0T2lCaGJua2dmQ0J1ZFd4c0tUb2djM1J5YVc1bklIdGNiaUFnY21WMGRYSnVJRndpWENJN1hHNTlYRzVjYm1sdWRHVnlabUZqWlNCTlpXNTFSVzUwY25sUWNtOXdjeUI3WEc0Z0lHbDBaVzA2SUVGemRHRnNWSEpoZVM1VWNtRjVTWFJsYlR0Y2JuMWNibHh1WTI5dWMzUWdUV1Z1ZFVWdWRISjVJRDBnS0hzZ2FYUmxiU0I5T2lCTlpXNTFSVzUwY25sUWNtOXdjeWs2SUVwVFdDNUZiR1Z0Wlc1MElEMCtJSHRjYmlBZ2NtVjBkWEp1SUNoY2JpQWdJQ0E4WW5WMGRHOXVYRzRnSUNBZ0lDQmpiR0Z6YzA1aGJXVTlYQ0p6ZVhOMFpXMWZkSEpoZVY5aVlYSmZibTkwWTJoZlpXNTBjbmxjSWx4dUlDQWdJQ0FnWTNWeWMyOXlQVndpY0c5cGJuUmxjbHdpWEc0Z0lDQWdJQ0J2YmtOc2FXTnJQWHNvYzJWc1ppd2daWFpsYm5RcElEMCtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHbHpVSEpwYldGeWVVTnNhV05yS0dWMlpXNTBLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lHbDBaVzB1WVdOMGFYWmhkR1VvTUN3Z01DazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9hWE5UWldOdmJtUmhjbmxEYkdsamF5aGxkbVZ1ZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0JqYjI1emRDQnRaVzUxVFc5a1pXd2dQU0JwZEdWdExtZGxkRjl0Wlc1MVgyMXZaR1ZzS0NrN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1lXTjBhVzl1UjNKdmRYQWdQU0JwZEdWdExtZGxkRjloWTNScGIyNWZaM0p2ZFhBb0tUdGNibHh1SUNBZ0lDQWdJQ0FnSUdsbUlDaHRaVzUxVFc5a1pXd2dKaVlnWVdOMGFXOXVSM0p2ZFhBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRzFsYm5VZ1BTQkhkR3N1VFdWdWRTNXVaWGRmWm5KdmJWOXRiMlJsYkNodFpXNTFUVzlrWld3cE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldWdWRTNXBibk5sY25SZllXTjBhVzl1WDJkeWIzVndLRndpWkdKMWMyMWxiblZjSWl3Z1lXTjBhVzl1UjNKdmRYQXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXVnVkUzV3YjNCMWNGOWhkRjkzYVdSblpYUW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lITmxiR1lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRWRrYXk1SGNtRjJhWFI1TGs1UFVsUklYMWRGVTFRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUVka2F5NUhjbUYyYVhSNUxsTlBWVlJJWDFkRlUxUXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHNTFiR3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDazdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOWZWeHVJQ0FnSUNBZ1kyaHBiR1E5ZTF4dUlDQWdJQ0FnSUNBOFltOTRYRzRnSUNBZ0lDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFZ3aWMzbHpkR1Z0WDNSeVlYbGZZbUZ5WDI1dmRHTm9YMk52Ym5SbGJuUmNJbHh1SUNBZ0lDQWdJQ0FnSUhabGNuUnBZMkZzUFh0MGNuVmxmVnh1SUNBZ0lDQWdJQ0FnSUdOb2FXeGtjbVZ1UFh0YlhHNGdJQ0FnSUNBZ0lDQWdJQ0E4YkdGaVpXeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2JHRmlaV3c5ZTJKcGJtUW9hWFJsYlN3Z1hDSjBhWFJzWlZ3aUtTNWhjeWhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvZEdsMGJHVXBJRDArSUhScGRHeGxJSHg4SUdsMFpXMHVaMlYwWDNSdmIyeDBhWEFvS1Q4dWRHbDBiR1VnZkh3Z1hDSmNJbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQXBmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0x6NHNYRzRnSUNBZ0lDQWdJQ0FnSUNBOGJHRmlaV3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0ZpWld3OWUySnBibVFvYVhSbGJTd2dYQ0owYjI5c2RHbHdYQ0lwTG1GektGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDaDBiMjlzZEdsd0tTQTlQaUIwYjI5c2RHbHdQeTVrWlhOamNtbHdkR2x2YmlCOGZDQmNJbHdpWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ2w5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZQaXhjYmlBZ0lDQWdJQ0FnSUNCZGZWeHVJQ0FnSUNBZ0lDQXZQbHh1SUNBZ0lDQWdmVnh1SUNBZ0lDOCtYRzRnSUNrN1hHNTlPMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJVY21GNVNYUmxiVTV2ZEdOb0tIQnliM0J6T2lCVWNtRjVTWFJsYlU1dmRHTm9VSEp2Y0hNcElIdGNiaUFnWTI5dWMzUWdleUJ6ZVhOMFpXMVVjbUY1Vm1sbGQwMXZaR1ZzSUgwZ1BTQndjbTl3Y3p0Y2JpQWdZMjl1YzNRZ1ptOWpkWE5sWkVsMFpXMGdQU0J6ZVhOMFpXMVVjbUY1Vm1sbGQwMXZaR1ZzTG1kbGRFWnZZM1Z6WldSVWNtRjVTWFJsYlNncE8xeHVYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFh0Y0luTjVjM1JsYlY5MGNtRjVYMkpoY2w5dWIzUmphQ0JtYjJOMWMyVmtYQ0o5WEc0Z0lDQWdJQ0IyWlhKMGFXTmhiRDE3ZEhKMVpYMWNiaUFnSUNBZ0lHTm9hV3hrUFh0bWIyTjFjMlZrU1hSbGJTNWhjeWdvYVhSbGJTa2dQVDRnZTF4dUlDQWdJQ0FnSUNCcFppQW9JV2wwWlcwZ2ZId2dJV2wwWlcwdVoyVjBYMjFsYm5WZmJXOWtaV3dvS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQThZbTk0SUM4K08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQThUV1Z1ZFVWdWRISjVJR2wwWlcwOWUybDBaVzE5SUM4K08xeHVJQ0FnSUNBZ2ZTbDlYRzRnSUNBZ0x6NWNiaUFnS1R0Y2JuMWNiaUlzSUNKcGJYQnZjblFnVTNsemRHVnRWSEpoZVZOMFlYUmxWbWxsZDAxdlpHVnNJR1p5YjIwZ1hDSXVMMU41YzNSbGJWUnlZWGxUZEdGMFpWWnBaWGROYjJSbGJGd2lPMXh1YVcxd2IzSjBJRlJ5WVhrZ1puSnZiU0JjSW1kcE9pOHZRWE4wWVd4VWNtRjVYQ0k3WEc1cGJYQnZjblFnZXlCVGVYTjBaVzFVY21GNVZtbGxkMDF2WkdWc0lIMGdabkp2YlNCY0lpNHZVM2x6ZEdWdFZISmhlVlpwWlhkTmIyUmxiRndpTzF4dWFXMXdiM0owSUhzZ1ltbHVaQ3dnUW1sdVpHbHVaeXdnZEdsdFpXOTFkQ0I5SUdaeWIyMGdYQ0poYzNSaGJGd2lPMXh1WEc1amIyNXpkQ0JUV1ZOVVJVMWZWRkpCV1Y5SlZFVk5YMVJKVFVWUFZWUWdQU0F4TURBd01Ec2dMeThnTXpBZ2MyVmpiMjVrYzF4dVhHNW1kVzVqZEdsdmJpQm5aWFJVY21GNVNYUmxiVU5zWVhOektGeHVJQ0IyYVdWM1RXOWtaV3c2SUZONWMzUmxiVlJ5WVhsV2FXVjNUVzlrWld3c1hHNGdJR2wwWlcwNklHRnVlVnh1S1RvZ1FtbHVaR2x1Wnp4emRISnBibWMrSUh0Y2JpQWdZMjl1YzNRZ1pYaHBjM1JwYm1kVWNtRjVTWFJsYlhNZ1BTQjJhV1YzVFc5a1pXeGNiaUFnSUNBdVoyVjBWSEpoZVVsMFpXMXpLQ2xjYmlBZ0lDQXVaMlYwS0NsY2JpQWdJQ0F1Wm1sc2RHVnlLQ2hwZEdWdEtTQTlQaUJwZEdWdExtZGxkRjkwYVhSc1pTZ3BLVHRjYmlBZ2NtVjBkWEp1SUhacFpYZE5iMlJsYkM1blpYUkdiMk4xYzJWa1ZISmhlVWwwWlcwb0tTNWhjeWdvWm05amRYTmxaQ2tnUFQ0Z2UxeHVJQ0FnSUd4bGRDQmpiR0Z6YzJWeklEMGdYQ0p6ZVhOMFpXMWZkSEpoZVY5cGRHVnRYQ0k3WEc0Z0lDQWdhV1lnS0dadlkzVnpaV1FnSmlZZ1ptOWpkWE5sWkM1blpYUmZkR2wwYkdVb0tTQTlQVDBnYVhSbGJTNW5aWFJmZEdsMGJHVW9LU2tnZTF4dUlDQWdJQ0FnWTJ4aGMzTmxjeUFyUFNCY0lpQmhZM1JwZG1WY0lqdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnWTJ4aGMzTmxjeUFyUFNCY0lpQnViM1JqYUZ3aU8xeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb1pYaHBjM1JwYm1kVWNtRjVTWFJsYlhNdWFXNWtaWGhQWmlocGRHVnRLU0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdZMnhoYzNObGN5QXJQU0JjSWlCbWFYSnpkRndpTzF4dUlDQWdJSDFjYmlBZ0lDQnBaaUFvWlhocGMzUnBibWRVY21GNVNYUmxiWE11YVc1a1pYaFBaaWhwZEdWdEtTQTlQVDBnWlhocGMzUnBibWRVY21GNVNYUmxiWE11YkdWdVozUm9JQzBnTVNrZ2UxeHVJQ0FnSUNBZ1kyeGhjM05sY3lBclBTQmNJaUJzWVhOMFhDSTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUdOc1lYTnpaWE03WEc0Z0lIMHBPMXh1ZlZ4dVhHNWpiMjV6ZENCdmJsTjVjM1JsYlZSeVlYbEpkR1Z0UTJ4cFkydGxaQ0E5SUNoY2JpQWdjM2x6ZEdWdFZISmhlVlpwWlhkTmIyUmxiRG9nVTNsemRHVnRWSEpoZVZacFpYZE5iMlJsYkN4Y2JpQWdhWFJsYlRvZ1ZISmhlUzVVY21GNVNYUmxiVnh1S1NBOVBpQjdYRzRnSUdOdmJuTjBJR04xY25KbGJuUnNlVVp2WTNWelpXUWdQU0J6ZVhOMFpXMVVjbUY1Vm1sbGQwMXZaR1ZzTG1kbGRFWnZZM1Z6WldSVWNtRjVTWFJsYlNncExtZGxkQ2dwTzF4dUlDQnBaaUFvWTNWeWNtVnVkR3g1Um05amRYTmxaQ0FtSmlCamRYSnlaVzUwYkhsR2IyTjFjMlZrTG1kbGRGOTBhWFJzWlNncElEMDlQU0JwZEdWdExtZGxkRjkwYVhSc1pTZ3BLU0I3WEc0Z0lDQWdjM2x6ZEdWdFZISmhlVlpwWlhkTmIyUmxiQzV6WlhSR2IyTjFjMlZrVkhKaGVVbDBaVzBvYm5Wc2JDazdYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdjM2x6ZEdWdFZISmhlVlpwWlhkTmIyUmxiQzV6WlhSR2IyTjFjMlZrVkhKaGVVbDBaVzBvYVhSbGJTazdYRzRnSUNBZ2RHbHRaVzkxZENoVFdWTlVSVTFmVkZKQldWOUpWRVZOWDFSSlRVVlBWVlFzSUNncElEMCtYRzRnSUNBZ0lDQnplWE4wWlcxVWNtRjVWbWxsZDAxdlpHVnNMbk5sZEVadlkzVnpaV1JVY21GNVNYUmxiU2h1ZFd4c0tWeHVJQ0FnSUNrN1hHNGdJSDFjYm4wN1hHNWNiblI1Y0dVZ1UzbHpkR1Z0VkhKaGVVbDBaVzFDZFhSMGIyNVFjbTl3Y3lBOUlIdGNiaUFnYzNsemRHVnRWSEpoZVZacFpYZE5iMlJsYkRvZ1UzbHpkR1Z0VkhKaGVWWnBaWGROYjJSbGJEdGNiaUFnYVhSbGJUb2dWSEpoZVM1VWNtRjVTWFJsYlR0Y2JuMDdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJRk41YzNSbGJWUnlZWGxKZEdWdFFuVjBkRzl1S0hCeWIzQnpPaUJUZVhOMFpXMVVjbUY1U1hSbGJVSjFkSFJ2YmxCeWIzQnpLU0I3WEc0Z0lHTnZibk4wSUhzZ2MzbHpkR1Z0VkhKaGVWWnBaWGROYjJSbGJDd2dhWFJsYlNCOUlEMGdjSEp2Y0hNN1hHNGdJR052Ym5OMElIUnlZWGxKZEdWdGMwbGtUbUZ0WlhOTllYQTZJRkpsWTI5eVpEeHpkSEpwYm1jc0lIc2dhV052YmpvZ2MzUnlhVzVuSUgwK0lEMGdlMzA3WEc0Z0lIUnlZWGxKZEdWdGMwbGtUbUZ0WlhOTllYQmJYQ0pqYUhKdmJXVmZjM1JoZEhWelgybGpiMjVmTVZ3aVhTQTlJSHRjYmlBZ0lDQnBZMjl1T2lCY0luTnNZV05yWENJc1hHNGdJSDA3WEc0Z0lIUnlZWGxKZEdWdGMwbGtUbUZ0WlhOTllYQmJYQ0p2Y0dWdWNtZGlYQ0pkSUQwZ2UxeHVJQ0FnSUdsamIyNDZJRndpYjNCbGJuSm5ZbHdpTEZ4dUlDQjlPMXh1WEc0Z0lISmxkSFZ5YmlBb1hHNGdJQ0FnUEdKMWRIUnZibHh1SUNBZ0lDQWdZM1Z5YzI5eVBYdGNJbkJ2YVc1MFpYSmNJbjFjYmlBZ0lDQWdJR2hsZUhCaGJtUTllM1J5ZFdWOVhHNGdJQ0FnSUNCamJHRnpjMDVoYldVOWUyZGxkRlJ5WVhsSmRHVnRRMnhoYzNNb2MzbHpkR1Z0VkhKaGVWWnBaWGROYjJSbGJDd2dhWFJsYlNsOVhHNGdJQ0FnSUNCdmJrSjFkSFJ2YmxCeVpYTnpSWFpsYm5ROWV5Z3BJRDArWEc0Z0lDQWdJQ0FnSUc5dVUzbHpkR1Z0VkhKaGVVbDBaVzFEYkdsamEyVmtLSE41YzNSbGJWUnlZWGxXYVdWM1RXOWtaV3dzSUdsMFpXMHBYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnZia2h2ZG1WeVBYc29LU0E5UGlCemVYTjBaVzFVY21GNVZtbGxkMDF2WkdWc0xuSmxabkpsYzJoVWNtRjVTWFJsYlNocGRHVnRLWDFjYmlBZ0lDQWdJR05vYVd4a1BYdGNiaUFnSUNBZ0lDQWdQR2xqYjI1Y2JpQWdJQ0FnSUNBZ0lDQnBZMjl1UFh0aWFXNWtLR2wwWlcwc0lGd2lhV052Yms1aGJXVmNJaWt1WVhNb0tHbGpiMjVPWVcxbEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdsamIyNU9ZVzFsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwY21GNVNYUmxiWE5KWkU1aGJXVnpUV0Z3VzJsMFpXMHVaMlYwWDJsa0tDbGRQeTVwWTI5dUlIeDhJRndpZFc1cmJtOTNibHdpTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsamIyNU9ZVzFsTzF4dUlDQWdJQ0FnSUNBZ0lIMHBmVnh1SUNBZ0lDQWdJQ0F2UGx4dUlDQWdJQ0FnZlZ4dUlDQWdJQzgrWEc0Z0lDazdYRzU5WEc0aUxDQWlaWGh3YjNKMElHUmxabUYxYkhRZ2UxeHVJQ0JsZUhCeVpYTnphWFpsT2lCN1hHNGdJQ0FnWm1GemRGOXpjR0YwYVdGc09pQjdYRzRnSUNBZ0lDQmpkWEoyWlRvZ1hDSmpkV0pwWXkxaVpYcHBaWElvTUM0ME1pd2dNUzQyTnl3Z01DNHlNU3dnTUM0NUtWd2lMRnh1SUNBZ0lDQWdaSFZ5WVhScGIyNDZJRE0xTUN4Y2JpQWdJQ0I5TEZ4dUlDQWdJR1JsWm1GMWJIUmZjM0JoZEdsaGJEb2dlMXh1SUNBZ0lDQWdZM1Z5ZG1VNklGd2lZM1ZpYVdNdFltVjZhV1Z5S0RBdU16Z3NJREV1TWpFc0lEQXVNaklzSURFcFhDSXNYRzRnSUNBZ0lDQmtkWEpoZEdsdmJqb2dOVEF3TEZ4dUlDQWdJSDBzWEc0Z0lDQWdjMnh2ZDE5emNHRjBhV0ZzT2lCN1hHNGdJQ0FnSUNCamRYSjJaVG9nWENKamRXSnBZeTFpWlhwcFpYSW9NQzR6T1N3Z01TNHlPU3dnTUM0ek5Td2dNQzQ1T0NsY0lpeGNiaUFnSUNBZ0lHUjFjbUYwYVc5dU9pQTJOVEFzWEc0Z0lDQWdmU3hjYmlBZ0lDQm1ZWE4wWDJWbVptVmpkSE02SUh0Y2JpQWdJQ0FnSUdOMWNuWmxPaUJjSW1OMVltbGpMV0psZW1sbGNpZ3dMak14TENBd0xqazBMQ0F3TGpNMExDQXhLVndpTEZ4dUlDQWdJQ0FnWkhWeVlYUnBiMjQ2SURFMU1DeGNiaUFnSUNCOUxGeHVJQ0FnSUdSbFptRjFiSFJmWldabVpXTjBjem9nZTF4dUlDQWdJQ0FnWTNWeWRtVTZJRndpWTNWaWFXTXRZbVY2YVdWeUtEQXVNelFzSURBdU9Dd2dNQzR6TkN3Z01TbGNJaXhjYmlBZ0lDQWdJR1IxY21GMGFXOXVPaUF5TURBc1hHNGdJQ0FnZlN4Y2JpQWdJQ0J6Ykc5M1gyVm1abVZqZEhNNklIdGNiaUFnSUNBZ0lHTjFjblpsT2lCY0ltTjFZbWxqTFdKbGVtbGxjaWd3TGpNMExDQXdMamc0TENBd0xqTTBMQ0F4S1Z3aUxGeHVJQ0FnSUNBZ1pIVnlZWFJwYjI0NklETXdNQ3hjYmlBZ0lDQjlMRnh1SUNCOUxGeHVmVHRjYmlJc0lDSnBiWEJ2Y25RZ1RHOW5aMlZ5SUdaeWIyMGdKeTR1TDJ4dloyZGxjaTlNYjJkblpYSW5PMXh1YVcxd2IzSjBJSHNnVTNsemRHVnRWSEpoZVZacFpYZE5iMlJsYkNCOUlHWnliMjBnSnk0dlUzbHpkR1Z0VkhKaGVWWnBaWGROYjJSbGJDYzdYRzVwYlhCdmNuUWdleUJpYVc1a0lIMGdabkp2YlNBbllYTjBZV3duTzF4dWFXMXdiM0owSUZSeVlYbEpkR1Z0VG05MFkyZ2dabkp2YlNBbkxpOVVjbUY1U1hSbGJVNXZkR05vSnp0Y2JtbHRjRzl5ZENCN0lFZDBheUI5SUdaeWIyMGdKMkZ6ZEdGc0wyZDBhek1uTzF4dWFXMXdiM0owSUZONWMzUmxiVlJ5WVhsSmRHVnRRblYwZEc5dUlHWnliMjBnSnk0dlUzbHpkR1Z0VkhKaGVVbDBaVzFDZFhSMGIyNG5PMXh1YVcxd2IzSjBJR0Z1YVcxaGRHbHZibk1nWm5KdmJTQW5MaTR2YkdsaUwyMWhkR1Z5YVdGc0wyRnVhVzFoZEdsdmJuTW5PMXh1WEc1amIyNXpkQ0JzYjJkblpYSWdQU0J1WlhjZ1RHOW5aMlZ5S0NkVWNtRjVTWFJsYlU1dmRHTm9KeWs3WEc1amIyNXpkQ0J6ZVhOMFpXMVVjbUY1Vm1sbGQwMXZaR1ZzSUQwZ2JtVjNJRk41YzNSbGJWUnlZWGxXYVdWM1RXOWtaV3dvS1R0Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlGTjVjM1JsYlZSeVlYa29LU0I3WEc0Z0lISmxkSFZ5YmlBb1hHNGdJQ0FnUEdKdmVGeHVJQ0FnSUNBZ1kyeGhjM05PWVcxbFBYdGlhVzVrS0hONWMzUmxiVlJ5WVhsV2FXVjNUVzlrWld3dVoyVjBSbTlqZFhObFpGUnlZWGxKZEdWdEtDa3BMbUZ6S0Z4dUlDQWdJQ0FnSUNBb1ptOWpkWE5sWkZSeVlYbEpkR1Z0S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lDZHplWE4wWlcxZmRISmhlVjlqYjI1emRHRnVkRjlpWVdOclozSnZkVzVrSnlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FvWm05amRYTmxaRlJ5WVhsSmRHVnRJRDhnSnlCbWIyTjFjMlZrSnlBNklDY25LVnh1SUNBZ0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQXBmVnh1SUNBZ0lDQWdZMmhwYkdROWUxeHVJQ0FnSUNBZ0lDQThZbTk0WEc0Z0lDQWdJQ0FnSUNBZ1kyeGhjM05PWVcxbFBYdGlhVzVrS0hONWMzUmxiVlJ5WVhsV2FXVjNUVzlrWld3dVoyVjBSbTlqZFhObFpGUnlZWGxKZEdWdEtDa3BMbUZ6S0Z4dUlDQWdJQ0FnSUNBZ0lDQWdLR1p2WTNWelpXUlVjbUY1U1hSbGJTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdKM041YzNSbGJWOTBjbUY1SnlBcklDaG1iMk4xYzJWa1ZISmhlVWwwWlcwZ1B5QW5JR1p2WTNWelpXUW5JRG9nSnljcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQXBmVnh1SUNBZ0lDQWdJQ0FnSUhabGNuUnBZMkZzUFh0MGNuVmxmVnh1SUNBZ0lDQWdJQ0FnSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtWT1JIMWNiaUFnSUNBZ0lDQWdJQ0IyWVd4cFoyNDllMGQwYXk1QmJHbG5iaTVUVkVGU1ZIMWNiaUFnSUNBZ0lDQWdJQ0JqYUdsc1pISmxiajE3VzF4dUlDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JqYkdGemMwNWhiV1U5ZXlkemVYTjBaVzFmZEhKaGVWOXBkR1Z0YzE5c2FYTjBKMzFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhwYkdSeVpXNDllM041YzNSbGJWUnlZWGxXYVdWM1RXOWtaV3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1WjJWMFZISmhlVWwwWlcxektDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVZWE1vS0dsMFpXMXpLU0E5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiWE5jYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtWnBiSFJsY2lnb2FYUmxiU2tnUFQ0Z2FYUmxiUzVuWlhSZmRHbDBiR1VvS1NBaFBUMGdiblZzYkNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbTFoY0Nnb2FYUmxiU3dnYVc1a1pYZ3BJRDArSUNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4VTNsemRHVnRWSEpoZVVsMFpXMUNkWFIwYjI1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhONWMzUmxiVlJ5WVhsV2FXVjNUVzlrWld3OWUzTjVjM1JsYlZSeVlYbFdhV1YzVFc5a1pXeDlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0UFh0cGRHVnRmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDbDlYRzRnSUNBZ0lDQWdJQ0FnSUNBdlBpeGNiaUFnSUNBZ0lDQWdJQ0FnSUR4eVpYWmxZV3hsY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1Vkhsd1pUMTdSM1JyTGxKbGRtVmhiR1Z5VkhKaGJuTnBkR2x2YmxSNWNHVXVVMHhKUkVWZlJFOVhUbjFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5OcGRHbHZia1IxY21GMGFXOXVQWHRoYm1sdFlYUnBiMjV6TG1WNGNISmxjM05wZG1VdVptRnpkRjlsWm1abFkzUnpMbVIxY21GMGFXOXVmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFpsWVd4RGFHbHNaRDE3YzNsemRHVnRWSEpoZVZacFpYZE5iMlJsYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1blpYUkdiMk4xYzJWa1ZISmhlVWwwWlcwb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNWhjeWdvWm05amRYTmxaRlJ5WVhsSmRHVnRLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptOWpkWE5sWkZSeVlYbEpkR1Z0SUNFOVBTQnVkV3hzTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcGZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCamFHbHNaRDE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEZSeVlYbEpkR1Z0VG05MFkyZ2djM2x6ZEdWdFZISmhlVlpwWlhkTmIyUmxiRDE3YzNsemRHVnRWSEpoZVZacFpYZE5iMlJsYkgwZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnTHo0c1hHNGdJQ0FnSUNBZ0lDQWdYWDFjYmlBZ0lDQWdJQ0FnTHo1Y2JpQWdJQ0FnSUgxY2JpQWdJQ0F2UGx4dUlDQXBPMXh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQkNZWFIwWlhKNUlHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1FtRjBkR1Z5ZVZ3aU8xeHVhVzF3YjNKMElFeHZaMmRsY2lCbWNtOXRJRndpTGk0dkxpNHZiRzluWjJWeUwweHZaMmRsY2x3aU8xeHVhVzF3YjNKMElIc2dZbWx1WkN3Z1FtbHVaR2x1WnlCOUlHWnliMjBnWENKaGMzUmhiRndpTzF4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCamJHRnpjeUJDWVhSMFpYSjVWbWxsZDAxdlpHVnNJSHRjYmlBZ0lDQndjbWwyWVhSbElHeHZaMmRsY2lBOUlHNWxkeUJNYjJkblpYSW9kR2hwY3k1amIyNXpkSEoxWTNSdmNpNXVZVzFsS1R0Y2JpQWdJQ0J3Y21sMllYUmxJR0poZEhSbGNua2dQU0JDWVhSMFpYSjVMbWRsZEY5a1pXWmhkV3gwS0NrN1hHNWNiaUFnSUNCd2RXSnNhV01nWjJWMFFtRjBkR1Z5ZVZCbGNtTmxiblJoWjJVb0tUb2dRbWx1WkdsdVp6eHVkVzFpWlhJK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHSnBibVFvZEdocGN5NWlZWFIwWlhKNUxDQmNJbkJsY21ObGJuUmhaMlZjSWlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY0hWaWJHbGpJR2RsZEVKaGRIUmxjbmxUZEdGMFpTZ3BPaUJDYVc1a2FXNW5QRUpoZEhSbGNua3VVM1JoZEdVK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHSnBibVFvZEdocGN5NWlZWFIwWlhKNUxDQmNJbk4wWVhSbFhDSXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIQjFZbXhwWXlCblpYUkNZWFIwWlhKNVNXTnZiaWdwT2lCQ2FXNWthVzVuUEhOMGNtbHVaejRnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWW1sdVpDaDBhR2x6TG1KaGRIUmxjbmtzSUZ3aWFXTnZibDl1WVcxbFhDSXBPMXh1SUNBZ0lIMWNibHh1ZlNJc0lDSnBiWEJ2Y25RZ2V5QkJjM1JoYkN3Z1IyUnJMQ0JIZEdzZ2ZTQm1jbTl0SUNkaGMzUmhiQzluZEdzekp6dGNibWx0Y0c5eWRDQkNZWFIwWlhKNVZtbGxkMDF2WkdWc0lHWnliMjBnSnk0dlFtRjBkR1Z5ZVZacFpYZE5iMlJsYkNjN1hHNXBiWEJ2Y25RZ1RHOW5aMlZ5SUdaeWIyMGdKeTR1THk0dUwyeHZaMmRsY2k5TWIyZG5aWEluTzF4dWFXMXdiM0owSUhzZ1NXTnZibE52ZFhKalpTQjlJR1p5YjIwZ0p5NHVMeTR1TDJ4cFlpOXBZMjl1Y3k5SlkyOXVWWFJwYkhNbk8xeHVYRzVtZFc1amRHbHZiaUJDWVhSMFpYSjVUR1YyWld4RGFYSmpkV3hoY2xCeWIyZHlaWE56S0NrZ2UxeHVJQ0JqYjI1emRDQnNiMmRuWlhJZ1BTQnVaWGNnVEc5bloyVnlLQ2RDWVhSMFpYSjVUR1YyWld4RGFYSmpkV3hoY2xCeWIyZHlaWE56SnlrN1hHNGdJR052Ym5OMElHSmhkSFJsY25sV2FXVjNUVzlrWld3Z1BTQnVaWGNnUW1GMGRHVnllVlpwWlhkTmIyUmxiQ2dwTzF4dUlDQnlaWFIxY200Z0tGeHVJQ0FnSUR4amFYSmpkV3hoY25CeWIyZHlaWE56WEc0Z0lDQWdJQ0JqYkdGemMwNWhiV1U5ZXlkaVlYUjBaWEo1WDJ4bGRtVnNYMk5wY21OMWJHRnlYM0J5YjJkeVpYTnpKMzFjYmlBZ0lDQWdJSEp2ZFc1a1pXUTllM1J5ZFdWOVhHNGdJQ0FnSUNCMllXeDFaVDE3WW1GMGRHVnllVlpwWlhkTmIyUmxiQzVuWlhSQ1lYUjBaWEo1VUdWeVkyVnVkR0ZuWlNncExtRnpLQ2h3WlhKalpXNTBZV2RsS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR3h2WjJkbGNpNWtaV0oxWnloZ1FtRjBkR1Z5ZVNCd1pYSmpaVzUwWVdkbE9pQWtlM0JsY21ObGJuUmhaMlY5WUNrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCd1pYSmpaVzUwWVdkbE8xeHVJQ0FnSUNBZ2ZTbDlYRzRnSUNBZ0lDQnpkR0Z5ZEVGMFBYc3dmVnh1SUNBZ0lDQWdaVzVrUVhROWV6RjlYRzRnSUNBZ0lDQmphR2xzWkQxN1BHbGpiMjRnYVdOdmJqMTdZbUYwZEdWeWVWWnBaWGROYjJSbGJDNW5aWFJDWVhSMFpYSjVTV052YmlncGZTQXZQbjFjYmlBZ0lDQXZQbHh1SUNBcE8xeHVmVnh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJUZVhOMFpXMUVaWFJoYVd4elFtRnlUVzlrZFd4bEtDa2dlMXh1SUNCamIyNXpkQ0JzYjJkblpYSWdQU0J1WlhjZ1RHOW5aMlZ5S0NkVGVYTjBaVzFFWlhSaGFXeHpKeWs3WEc0Z0lHTnZibk4wSUdKaGRIUmxjbmxXYVdWM1RXOWtaV3dnUFNCdVpYY2dRbUYwZEdWeWVWWnBaWGROYjJSbGJDZ3BPMXh1SUNCc2IyZG5aWEl1WkdWaWRXY29KMU41YzNSbGJVUmxkR0ZwYkhNZ1kyOXRjRzl1Wlc1MElHTnlaV0YwWldRbktUdGNiaUFnY21WMGRYSnVJQ2hjYmlBZ0lDQThZbTk0WEc0Z0lDQWdJQ0IyWVd4cFoyNDllMGQwYXk1QmJHbG5iaTVUVkVGU1ZIMWNiaUFnSUNBZ0lHaGhiR2xuYmoxN1IzUnJMa0ZzYVdkdUxrVk9SSDFjYmlBZ0lDQWdJR05zWVhOelRtRnRaVDFjSW5ONWMzUmxiVjlrWlhSaGFXeHpYMk52Ym5SaGFXNWxjbHdpWEc0Z0lDQWdJQ0JqYUdsc1pISmxiajE3V3p4Q1lYUjBaWEo1VEdWMlpXeERhWEpqZFd4aGNsQnliMmR5WlhOeklDOCtYWDFjYmlBZ0lDQXZQbHh1SUNBcE8xeHVmVnh1SWl3Z0ltbHRjRzl5ZENCQmMzUmhiRTV2ZEdsbVpDQm1jbTl0SUNkbmFUb3ZMMEZ6ZEdGc1RtOTBhV1prUDNabGNuTnBiMjQ5TUM0eEp6dGNibWx0Y0c5eWRDQkhkR3NnWm5KdmJTQW5aMms2THk5SGRHcy9kbVZ5YzJsdmJqMHpMakFuTzF4dWFXMXdiM0owSUhzZ1RtOU9aWGRPYjNScFptbGpZWFJwYjI1UWIzQjFjQ0I5SUdaeWIyMGdKeTR2VG05T1pYZE9iM1JwWm1sallYUnBiMjVRYjNCMWNDYzdYRzVjYm5SNWNHVWdUbVYzVG05MGFXWnBZMkYwYVc5dVVHOXdkWEJRY205d2N5QTlJSHRjYmlBZ2JtOTBhV1pwWTJGMGFXOXVPaUJCYzNSaGJFNXZkR2xtWkM1T2IzUnBabWxqWVhScGIyNGdmQ0J1ZFd4c08xeHVmVHRjYmx4dVkyOXVjM1FnVG05MGFXWnBZMkYwYVc5dVNXMWhaMlVnUFNBb2JtOTBhV1pwWTJGMGFXOXVPaUJCYzNSaGJFNXZkR2xtWkM1T2IzUnBabWxqWVhScGIyNHBJRDArSUh0Y2JpQWdjbVYwZFhKdUlDaGNiaUFnSUNBOGFXTnZiaUJwWTI5dVBYdHViM1JwWm1sallYUnBiMjR1WjJWMFgybHRZV2RsS0NsOUlHTnNZWE56VG1GdFpUMWNJbTV2ZEdsbWFXTmhkR2x2Ymw5aGNIQmZhV052Ymx3aUlDOCtYRzRnSUNrN1hHNTlPMXh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnVG1WM1RtOTBhV1pwWTJGMGFXOXVVRzl3ZFhBb2NISnZjSE02SUU1bGQwNXZkR2xtYVdOaGRHbHZibEJ2Y0hWd1VISnZjSE1wSUh0Y2JpQWdZMjl1YzNRZ2JtOTBhV1pwWTJGMGFXOXVJRDBnY0hKdmNITXVibTkwYVdacFkyRjBhVzl1TzF4dUlDQnBaaUFvSVc1dmRHbG1hV05oZEdsdmJpa2dlMXh1SUNBZ0lISmxkSFZ5YmlBOFRtOU9aWGRPYjNScFptbGpZWFJwYjI1UWIzQjFjQ0F2UGp0Y2JpQWdmVnh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHhpYjNoY2JpQWdJQ0FnSUdOc1lYTnpUbUZ0WlQxN0oyNWxkMTl1YjNScFptbGpZWFJwYjI1ZlkyRnlaRjl3Y21WMmFXVjNKMzFjYmlBZ0lDQWdJSFpsZUhCaGJtUTllM1J5ZFdWOVhHNGdJQ0FnSUNCb1lXeHBaMjQ5ZTBkMGF5NUJiR2xuYmk1RFJVNVVSVko5WEc0Z0lDQWdJQ0IyWVd4cFoyNDllMGQwYXk1QmJHbG5iaTVEUlU1VVJWSjlYRzRnSUNBZ0lDQmphR2xzWkQxN1hHNGdJQ0FnSUNBZ0lEeGliM2hjYmlBZ0lDQWdJQ0FnSUNCamFHbHNaSEpsYmoxN1cxeHVJQ0FnSUNBZ0lDQWdJQ0FnYm05MGFXWnBZMkYwYVc5dUxtZGxkRjlwYldGblpTZ3BJRDhnS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlBOGFXTnZiaUJwWTI5dVBYdHViM1JwWm1sallYUnBiMjR1WjJWMFgyRndjRjlwWTI5dUtDbDlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRTV2ZEdsbWFXTmhkR2x2YmtsdFlXZGxLRzV2ZEdsbWFXTmhkR2x2YmlsY2JpQWdJQ0FnSUNBZ0lDQWdJQ2tnT2lBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUR4cFkyOXVJR2xqYjI0OWV5ZHViM1JwWm1sallYUnBiMjRuZlNBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJDQnNZV0psYkQxN2JtOTBhV1pwWTJGMGFXOXVMbWRsZEY5emRXMXRZWEo1S0NsOUlDOCtMRnh1SUNBZ0lDQWdJQ0FnSUYxOVhHNGdJQ0FnSUNBZ0lDOCtYRzRnSUNBZ0lDQjlYRzRnSUNBZ0x6NWNiaUFnS1R0Y2JuMWNiaUlzSUNKcGJYQnZjblFnUjNScklHWnliMjBnWENKbmFUb3ZMMGQwYXo5MlpYSnphVzl1UFRNdU1Gd2lPMXh1YVcxd2IzSjBJSHNnVG05MGFXWnBZMkYwYVc5dVZtbGxkMDF2WkdWc0lIMGdabkp2YlNCY0lpNHZUbTkwYVdacFkyRjBhVzl1Vm1sbGQwMXZaR1ZzWENJN1hHNXBiWEJ2Y25RZ1RHOW5aMlZ5SUdaeWIyMGdYQ0l1TGk5c2IyZG5aWEl2VEc5bloyVnlYQ0k3WEc1amIyNXpkQ0JPVDFSSlJrbERRVlJKVDA1VFgxSkZRVVJmUkU1RVgwbERUMDRnUFNCY0ltbHVaR2xqWVhSdmNpMXViM1JwWm1sallYUnBiMjR0Y21WaFpDMWtibVJjSWp0Y2JtTnZibk4wSUU1UFZFbEdTVU5CVkVsUFRsTmZWVTVTUlVGRVgwUk9SRjlKUTA5T0lEMGdYQ0pwYm1ScFkyRjBiM0l0Ym05MGFXWnBZMkYwYVc5dUxYVnVjbVZoWkMxa2JtUmNJanRjYmx4dVkyOXVjM1FnVGs5VVNVWkpRMEZVU1U5T1UxOVNSVUZFWDBsRFQwNGdQU0JjSW1sdVpHbGpZWFJ2Y2kxdWIzUnBabWxqWVhScGIyNHRjbVZoWkZ3aU8xeHVZMjl1YzNRZ1RrOVVTVVpKUTBGVVNVOU9VMTlWVGxKRlFVUmZTVU5QVGlBOUlGd2lhVzVrYVdOaGRHOXlMVzV2ZEdsbWFXTmhkR2x2YmkxMWJuSmxZV1JjSWp0Y2JtTnZibk4wSUc1dmRHbG1hV05oZEdsdmJsWnBaWGROYjJSbGJDQTlJRzVsZHlCT2IzUnBabWxqWVhScGIyNVdhV1YzVFc5a1pXd29LVHRjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUU1dlRtVjNUbTkwYVdacFkyRjBhVzl1VUc5d2RYQW9LU0I3WEc0Z0lHTnZibk4wSUd4dloyZGxjaUE5SUc1bGR5Qk1iMmRuWlhJb1hDSk9iMDVsZDA1dmRHbG1hV05oZEdsdmJsQnZjSFZ3WENJcE8xeHVJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lEeGliM2hjYmlBZ0lDQWdJR05zWVhOelRtRnRaVDE3WENKdWIxOXViM1JwWm1sallYUnBiMjVjSW4xY2JpQWdJQ0FnSUhabGVIQmhibVE5ZTNSeWRXVjlYRzRnSUNBZ0lDQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNURSVTVVUlZKOVhHNGdJQ0FnSUNCMllXeHBaMjQ5ZTBkMGF5NUJiR2xuYmk1RFJVNVVSVko5WEc0Z0lDQWdJQ0JqYUdsc1pEMTdibTkwYVdacFkyRjBhVzl1Vm1sbGQwMXZaR1ZzTG1kbGRFbHpSRzlPYjNSRWFYTjBkWEppS0NrdVlYTW9LR2x6Ukc5T2IzUkVhWE4wZFhKaUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUFvWEc0Z0lDQWdJQ0FnSUNBZ1BHSjFkSFJ2Ymx4dUlDQWdJQ0FnSUNBZ0lDQWdZM1Z5YzI5eVBYdGNJbkJ2YVc1MFpYSmNJbjFjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNZWE56VG1GdFpUMWNJbWxqYjI1ZlluVjBkRzl1SUhoemJXRnNiQ0JjSWx4dUlDQWdJQ0FnSUNBZ0lDQWdiMjVDZFhSMGIyNVFjbVZ6YzBWMlpXNTBQWHNvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdselJHOU9iM1JFYVhOMGRYSmlJRDBnYm05MGFXWnBZMkYwYVc5dVZtbGxkMDF2WkdWc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtZGxkRWx6Ukc5T2IzUkVhWE4wZFhKaUtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVaMlYwS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUd4dloyZGxjaTVrWldKMVp5aGdWRzluWjJ4cGJtY2dSRzhnVG05MElFUnBjM1IxY21JZ2JXOWtaVG9nSkhzaGFYTkViMDV2ZEVScGMzUjFjbUo5WUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUc1dmRHbG1hV05oZEdsdmJsWnBaWGROYjJSbGJDNXpaWFJFYjA1dmRFUnBjM1IxY21Jb0lXbHpSRzlPYjNSRWFYTjBkWEppS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDE5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmphR2xzWkQxN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUR4cFkyOXVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV052YmoxN2JtOTBhV1pwWTJGMGFXOXVWbWxsZDAxdlpHVnNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1WjJWMFNYTkViMDV2ZEVScGMzUjFjbUlvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtRnpLQ2hwYzBSdlRtOTBSR2x6ZEhWeVlpa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdWIzUnBabWxqWVhScGIyNXpRMjkxYm5RZ1BTQnViM1JwWm1sallYUnBiMjVXYVdWM1RXOWtaV3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVaMlYwVG05MGFXWnBZMkYwYVc5dWN5Z3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtZGxkQ2dwTG14bGJtZDBhRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2x6Ukc5T2IzUkVhWE4wZFhKaUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1dmRHbG1hV05oZEdsdmJuTkRiM1Z1ZENBK0lEQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEOGdUazlVU1VaSlEwRlVTVTlPVTE5VlRsSkZRVVJmUkU1RVgwbERUMDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRG9nVGs5VVNVWkpRMEZVU1U5T1UxOVNSVUZFWDBST1JGOUpRMDlPTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1YjNScFptbGpZWFJwYjI1elEyOTFiblFnUGlBd1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBL0lFNVBWRWxHU1VOQlZFbFBUbE5mVlU1U1JVRkVYMGxEVDA1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURvZ1RrOVVTVVpKUTBGVVNVOU9VMTlTUlVGRVgwbERUMDQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUM4K1hHNGdJQ0FnSUNBZ0lDazdYRzRnSUNBZ0lDQjlLWDFjYmlBZ0lDQXZQbHh1SUNBcE8xeHVmVnh1SWl3Z0ltbHRjRzl5ZENCN0lHSnBibVFzSUVKcGJtUnBibWNzSUZaaGNtbGhZbXhsSUgwZ1puSnZiU0JjSW1GemRHRnNYQ0k3WEc1cGJYQnZjblFnVG05MGFXWmtJR1p5YjIwZ1hDSm5hVG92TDBGemRHRnNUbTkwYVdaa1hDSTdYRzVjYm1WNGNHOXlkQ0JqYkdGemN5Qk9iM1JwWm1sallYUnBiMjVXYVdWM1RXOWtaV3dnZTF4dUlDQndjbWwyWVhSbElHNXZkR2xtYVdRZ1BTQk9iM1JwWm1RdVoyVjBYMlJsWm1GMWJIUW9LVHRjYmlBZ2NISnBkbUYwWlNCb1lYTk9aWGRPYjNScFptbGpZWFJwYjI0Z1BTQldZWEpwWVdKc1pUeGliMjlzWldGdVBpaG1ZV3h6WlNrN1hHNGdJSEJ5YVhaaGRHVWdkSEpoYm5OcGRHbHZibFJwYldWeU9pQnVkVzFpWlhJZ2ZDQnVkV3hzSUQwZ2JuVnNiRHRjYmx4dUlDQmpiMjV6ZEhKMVkzUnZjaWdwSUh0Y2JpQWdJQ0IwYUdsekxtNXZkR2xtYVdRdVkyOXVibVZqZENoY0ltNXZkR2xtYVdWa1hDSXNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lIUm9hWE11YUdGdVpHeGxUbVYzVG05MGFXWnBZMkYwYVc5dUtDazdYRzRnSUNBZ2ZTazdYRzRnSUgxY2JseHVJQ0J3Y21sMllYUmxJR2hoYm1Sc1pVNWxkMDV2ZEdsbWFXTmhkR2x2YmlncElIdGNiaUFnSUNCcFppQW9kR2hwY3k1MGNtRnVjMmwwYVc5dVZHbHRaWElwSUh0Y2JpQWdJQ0FnSUdOc1pXRnlWR2x0Wlc5MWRDaDBhR2x6TG5SeVlXNXphWFJwYjI1VWFXMWxjaWs3WEc0Z0lDQWdmVnh1SUNBZ0lIUm9hWE11YUdGelRtVjNUbTkwYVdacFkyRjBhVzl1TG5ObGRDaDBjblZsS1R0Y2JpQWdmVnh1WEc0Z0lIQjFZbXhwWXlCblpYUk9iM1JwWm1sallYUnBiMjV6S0Z4dUlDQWdJSE52Y25RNklHSnZiMnhsWVc0Z2ZDQnVkV3hzSUQwZ2RISjFaVnh1SUNBcE9pQkNhVzVrYVc1blBFNXZkR2xtWkM1T2IzUnBabWxqWVhScGIyNWJYVDRnZTF4dUlDQWdJSEpsZEhWeWJpQmlhVzVrS0hSb2FYTXVibTkwYVdacFpDd2dYQ0p1YjNScFptbGpZWFJwYjI1elhDSXBMbUZ6S0NodWIzUnBabWxqWVhScGIyNXpLU0E5UGlCN1hHNGdJQ0FnSUNCcFppQW9jMjl5ZENrZ2UxeHVJQ0FnSUNBZ0lDQnViM1JwWm1sallYUnBiMjV6SUQwZ2JtOTBhV1pwWTJGMGFXOXVjeTV6YjNKMEtDaGhMQ0JpS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0l1WjJWMFgzUnBiV1VvS1NBdElHRXVaMlYwWDNScGJXVW9LVHRjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCeVpYUjFjbTRnYm05MGFXWnBZMkYwYVc5dWN6dGNiaUFnSUNCOUtUdGNiaUFnZlZ4dVhHNGdJSEIxWW14cFl5QmpiMjV1WldOMFRtVjNUbTkwYVdacFkyRjBhVzl1UTJGc2JHSmhZMnNvWEc0Z0lDQWdZMkZzYkdKaFkyczZJQ2h6Wld4bU9pQk9iM1JwWm1RdVRtOTBhV1prTENCcFpEb2diblZ0WW1WeUtTQTlQaUIyYjJsa1hHNGdJQ2tnZTF4dUlDQWdJSFJvYVhNdWJtOTBhV1pwWkM1amIyNXVaV04wS0Z3aWJtOTBhV1pwWldSY0lpd2dLSE5sYkdZc0lHbGtLU0E5UGlCN1hHNGdJQ0FnSUNCallXeHNZbUZqYXloelpXeG1MQ0JwWkNrN1hHNGdJQ0FnZlNrN1hHNGdJSDFjYmx4dUlDQndkV0pzYVdNZ1oyVjBUbTkwYVdacFkyRjBhVzl1UW5sSlpDaHBaRG9nYm5WdFltVnlLVG9nVG05MGFXWmtMazV2ZEdsbWFXTmhkR2x2YmlCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOTBhV1pwWkM1blpYUmZibTkwYVdacFkyRjBhVzl1S0dsa0tUdGNiaUFnZlZ4dVhHNGdJSEIxWW14cFl5Qm5aWFJKYzBSdlRtOTBSR2x6ZEhWeVlpZ3BPaUJDYVc1a2FXNW5QR0p2YjJ4bFlXNCtJSHRjYmlBZ0lDQnlaWFIxY200Z1ltbHVaQ2gwYUdsekxtNXZkR2xtYVdRc0lGd2laRzl1ZEVScGMzUjFjbUpjSWlrN1hHNGdJSDFjYmx4dUlDQndkV0pzYVdNZ2MyVjBSRzlPYjNSRWFYTjBkWEppS0haaGJIVmxPaUJpYjI5c1pXRnVLU0I3WEc0Z0lDQWdkR2hwY3k1dWIzUnBabWxrTG5ObGRGOWtiMjUwWDJScGMzUjFjbUlvZG1Gc2RXVXBPMXh1SUNCOVhHNTlYRzRpTENBaWFXMXdiM0owSUhzZ1ZtRnlhV0ZpYkdVc0lIUnBiV1Z2ZFhRc0lFSnBibVJwYm1jc0lHSnBibVFnZlNCbWNtOXRJRndpWVhOMFlXeGNJanRjYm1sdGNHOXlkQ0JIZEdzZ1puSnZiU0JjSW1kcE9pOHZSM1JyUDNabGNuTnBiMjQ5TXk0d1hDSTdYRzVwYlhCdmNuUWdURzluWjJWeUlHWnliMjBnWENJdUxpOXNiMmRuWlhJdlRHOW5aMlZ5WENJN1hHNXBiWEJ2Y25RZ2V5Qk9aWGRPYjNScFptbGpZWFJwYjI1UWIzQjFjQ0I5SUdaeWIyMGdYQ0l1TDA1bGQwNXZkR2xtYVdOaGRHbHZibEJ2Y0hWd1hDSTdYRzVwYlhCdmNuUWdleUJPYjA1bGQwNXZkR2xtYVdOaGRHbHZibEJ2Y0hWd0lIMGdabkp2YlNCY0lpNHZUbTlPWlhkT2IzUnBabWxqWVhScGIyNVFiM0IxY0Z3aU8xeHVhVzF3YjNKMElIc2dUbTkwYVdacFkyRjBhVzl1Vm1sbGQwMXZaR1ZzSUgwZ1puSnZiU0JjSWk0dlRtOTBhV1pwWTJGMGFXOXVWbWxsZDAxdlpHVnNYQ0k3WEc1Y2JtVjRjRzl5ZENCamJHRnpjeUJPWlhkT2IzUnBabWxqWVhScGIyNVdhV1YzVFc5a1pXd2dlMXh1SUNCd2NtbDJZWFJsSUc1dmRHbG1hV05oZEdsdmJsWnBaWGROYjJSbGJDQTlJRzVsZHlCT2IzUnBabWxqWVhScGIyNVdhV1YzVFc5a1pXd29LVHRjYmlBZ2NISnBkbUYwWlNCeVpYTjFiSFJwYm1kWGFXUm5aWFJXWVhKcFlXSnNaU0E5SUc1bGR5QldZWEpwWVdKc1pUeEhkR3N1VjJsa1oyVjBQaWh1ZFd4c0lTazdYRzRnSUhCeWFYWmhkR1VnYUdGelRtVjNUbTkwYVdacFkyRjBhVzl1Vm1GeWFXRmliR1VnUFNCdVpYY2dWbUZ5YVdGaWJHVThZbTl2YkdWaGJqNG9abUZzYzJVcE8xeHVJQ0J3Y21sMllYUmxJR3h2WjJkbGNpQTlJRzVsZHlCTWIyZG5aWElvZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTV1WVcxbEtUdGNibHh1SUNCd2NtbDJZWFJsSUhOMFlYUnBZeUJFUlVaQlZVeFVYMDVQVkVsR1NVTkJWRWxQVGw5VVNVMUZUMVZVSUQwZ05UQXdNRHRjYmlBZ1kyOXVjM1J5ZFdOMGIzSW9LU0I3WEc0Z0lDQWdkR2hwY3k1eVpYTjFiSFJwYm1kWGFXUm5aWFJXWVhKcFlXSnNaUzV6WlhRb1BFNXZUbVYzVG05MGFXWnBZMkYwYVc5dVVHOXdkWEFnTHo0cE8xeHVJQ0FnSUhSb2FYTXVjMlYwZFhCT1pYZE9iM1JwWm1sallYUnBiMjVNYVhOMFpXNWxjaWdwTzF4dUlDQjlYRzVjYmlBZ2NISnBkbUYwWlNCelpYUjFjRTVsZDA1dmRHbG1hV05oZEdsdmJreHBjM1JsYm1WeUtDazZJSFp2YVdRZ2UxeHVJQ0FnSUhSb2FYTXVibTkwYVdacFkyRjBhVzl1Vm1sbGQwMXZaR1ZzTG1OdmJtNWxZM1JPWlhkT2IzUnBabWxqWVhScGIyNURZV3hzWW1GamF5aGNiaUFnSUNBZ0lDaHViM1JwWm1sallYUnBiMjVEYkdsbGJuUXNJRzV2ZEdsbWFXTmhkR2x2Ymtsa0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRzV2ZEdsbWFXTmhkR2x2YmlBOVhHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabWxqWVhScGIyNVdhV1YzVFc5a1pXd3VaMlYwVG05MGFXWnBZMkYwYVc5dVFubEpaQ2h1YjNScFptbGpZWFJwYjI1SlpDazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWNtVnpkV3gwYVc1blYybGtaMlYwVm1GeWFXRmliR1V1YzJWMEtGeHVJQ0FnSUNBZ0lDQWdJRHhPWlhkT2IzUnBabWxqWVhScGIyNVFiM0IxY0NCdWIzUnBabWxqWVhScGIyNDllMjV2ZEdsbWFXTmhkR2x2Ym4wZ0x6NWNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NW9ZWE5PWlhkT2IzUnBabWxqWVhScGIyNVdZWEpwWVdKc1pTNXpaWFFvZEhKMVpTazdYRzRnSUNBZ0lDQWdJR052Ym5OMElHNXZkR2xtYVdOaGRHbHZibFJwYldWdmRYUWdQVnh1SUNBZ0lDQWdJQ0FnSUc1dmRHbG1hV05oZEdsdmJpNW5aWFJmWlhod2FYSmxYM1JwYldWdmRYUW9LU0ErSURCY2JpQWdJQ0FnSUNBZ0lDQWdJRDhnYm05MGFXWnBZMkYwYVc5dUxtZGxkRjlsZUhCcGNtVmZkR2x0Wlc5MWRDZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNBNklFNWxkMDV2ZEdsbWFXTmhkR2x2YmxacFpYZE5iMlJsYkM1RVJVWkJWVXhVWDA1UFZFbEdTVU5CVkVsUFRsOVVTVTFGVDFWVU8xeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHOW5aMlZ5TG1SbFluVm5LRnh1SUNBZ0lDQWdJQ0FnSUdCT1pYY2dibTkwYVdacFkyRjBhVzl1SUhKbFkyVnBkbVZrT2lBa2UyNXZkR2xtYVdOaGRHbHZiaTVuWlhSZllYQndYMjVoYldVb0tYMGdkMmwwYUNCMGFXMWxiM1YwSUNSN2JtOTBhV1pwWTJGMGFXOXVWR2x0Wlc5MWRIMWdYRzRnSUNBZ0lDQWdJQ2s3WEc0Z0lDQWdJQ0FnSUhScGJXVnZkWFFvYm05MGFXWnBZMkYwYVc5dVZHbHRaVzkxZEN3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11Y21WemRXeDBhVzVuVjJsa1oyVjBWbUZ5YVdGaWJHVXVjMlYwS0R4T2IwNWxkMDV2ZEdsbWFXTmhkR2x2YmxCdmNIVndJQzgrS1R0Y2JpQWdJQ0FnSUNBZ0lDQjBhR2x6TG1oaGMwNWxkMDV2ZEdsbWFXTmhkR2x2YmxaaGNtbGhZbXhsTG5ObGRDaG1ZV3h6WlNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDazdYRzRnSUgxY2JpQWdjSFZpYkdsaklHZGxkRkpsYzNWc2RHbHVaMWRwWkdkbGRDZ3BPaUJDYVc1a2FXNW5QRWQwYXk1WGFXUm5aWFErSUh0Y2JpQWdJQ0J5WlhSMWNtNGdZbWx1WkNoMGFHbHpMbkpsYzNWc2RHbHVaMWRwWkdkbGRGWmhjbWxoWW14bEtUdGNiaUFnZlZ4dUlDQndkV0pzYVdNZ1oyVjBTR0Z6VG1WM1RtOTBhV1pwWTJGMGFXOXVLQ2s2SUVKcGJtUnBibWM4WW05dmJHVmhiajRnZTF4dUlDQWdJSEpsZEhWeWJpQmlhVzVrS0hSb2FYTXVhR0Z6VG1WM1RtOTBhV1pwWTJGMGFXOXVWbUZ5YVdGaWJHVXBPMXh1SUNCOVhHNTlYRzRpTENBaWFXMXdiM0owSUhzZ1IzUnJJSDBnWm5KdmJTQW5ZWE4wWVd3dlozUnJNeWM3WEc1cGJYQnZjblFnZXlCT1pYZE9iM1JwWm1sallYUnBiMjVXYVdWM1RXOWtaV3dnZlNCbWNtOXRJQ2N1TDA1bGQwNXZkR2xtYVdOaGRHbHZibFpwWlhkTmIyUmxiQ2M3WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCT2IzUnBabWxqWVhScGIyNXpVRzl3ZFhBb0tTQjdYRzRnSUdOdmJuTjBJRzVsZDA1dmRHbG1hV05oZEdsdmJsWnBaWGROYjJSbGJDQTlJRzVsZHlCT1pYZE9iM1JwWm1sallYUnBiMjVXYVdWM1RXOWtaV3dvS1R0Y2JpQWdjbVYwZFhKdUlDaGNiaUFnSUNBOFltOTRYRzRnSUNBZ0lDQmpiR0Z6YzA1aGJXVTllMjVsZDA1dmRHbG1hV05oZEdsdmJsWnBaWGROYjJSbGJGeHVJQ0FnSUNBZ0lDQXVaMlYwU0dGelRtVjNUbTkwYVdacFkyRjBhVzl1S0NsY2JpQWdJQ0FnSUNBZ0xtRnpLQ2hvWVhOT1pYZE9iM1JwWm1sallYUnBiMjRwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0JzWlhRZ1kyeGhjM05PWVcxbElEMGdKMjV2ZEdsbWFXTmhkR2x2Ymw5aVlYSW5PMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaG9ZWE5PWlhkT2IzUnBabWxqWVhScGIyNHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNZWE56VG1GdFpTQXJQU0FuSUdoaGMxOXVaWGRmYm05MGFXWnBZMkYwYVc5dUp6dGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOc1lYTnpUbUZ0WlR0Y2JpQWdJQ0FnSUNBZ2ZTbDlYRzRnSUNBZ0lDQjJaWGh3WVc1a1BYdDBjblZsZlZ4dUlDQWdJQ0FnYUdWNGNHRnVaRDE3ZEhKMVpYMWNiaUFnSUNBZ0lHaGhiR2xuYmoxN1IzUnJMa0ZzYVdkdUxrVk9SSDFjYmlBZ0lDQWdJSFpoYkdsbmJqMTdSM1JyTGtGc2FXZHVMbE5VUVZKVWZWeHVJQ0FnSUNBZ1kyaHBiR1E5ZTI1bGQwNXZkR2xtYVdOaGRHbHZibFpwWlhkTmIyUmxiQzVuWlhSU1pYTjFiSFJwYm1kWGFXUm5aWFFvS1gxY2JpQWdJQ0F2UGx4dUlDQXBPMXh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQjdJRUZ6ZEdGc0xDQkJjSEFzSUVka2F5d2dSM1JySUgwZ1puSnZiU0FuWVhOMFlXd3ZaM1JyTXljN1hHNXBiWEJ2Y25RZ1RHOW5aMlZ5SUdaeWIyMGdKeTR1THk0dUwyeHZaMmRsY2k5TWIyZG5aWEluTzF4dWFXMXdiM0owSUZkdmNtdHpjR0ZqWlhOQ1lYSWdabkp2YlNBbkxpNHZMaTR2YUhsd2NteGhibVF2ZDI5eWEzTndZV05sY3k5WGIzSnJjM0JoWTJWelFtRnlKenRjYm1sdGNHOXlkQ0I3SUZONWMzUmxiVlJ5WVhrZ2ZTQm1jbTl0SUNjdUxpOHVMaTkwY21GNUwxTjVjM1JsYlZSeVlYa25PMXh1YVcxd2IzSjBJSHNnVTNsemRHVnRWSEpoZVZacFpYZE5iMlJsYkNCOUlHWnliMjBnSnk0dUx5NHVMM1J5WVhrdlUzbHpkR1Z0VkhKaGVWWnBaWGROYjJSbGJDYzdYRzVwYlhCdmNuUWdVM2x6ZEdWdFJHVjBZV2xzYzBKaGNrMXZaSFZzWlNCbWNtOXRJQ2N1TGk4dUxpOXplWE4wWlcxZmMzUmhkSE12WW1GMGRHVnllUzlUZVhOMFpXMUVaWFJoYVd4ekp6dGNibWx0Y0c5eWRDQjdJRTV2ZEdsbWFXTmhkR2x2Ym5OUWIzQjFjQ0I5SUdaeWIyMGdKeTR1THk0dUwyNXZkR2xtYVdOaGRHbHZiaTlPYjNScFptbGpZWFJwYjI0bk8xeHVYRzVtZFc1amRHbHZiaUJTYVdkb2RGTnBaR1ZDWVhJb0tTQjdYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFhzbmFIbHdjbTV2ZEdOb1gySmhjbDl6YVdSbEozMWNiaUFnSUNBZ0lIWmxjblJwWTJGc1BYdG1ZV3h6WlgxY2JpQWdJQ0FnSUdobGVIQmhibVE5ZTNSeWRXVjlYRzRnSUNBZ0lDQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNUZUa1I5WEc0Z0lDQWdJQ0JqYUdsc1pISmxiajE3VzF4dUlDQWdJQ0FnSUNBOFUzbHpkR1Z0UkdWMFlXbHNjMEpoY2sxdlpIVnNaU0F2UGl4Y2JpQWdJQ0FnSUNBZ1BGTjVjM1JsYlZSeVlYa2dMejRzWEc0Z0lDQWdJQ0FnSUR4T2IzUnBabWxqWVhScGIyNXpVRzl3ZFhBZ0x6NHNYRzRnSUNBZ0lDQmRmVnh1SUNBZ0lDOCtYRzRnSUNrN1hHNTlYRzVjYm5SNWNHVWdUR1ZtZEZOcFpHVkNZWEpRY205d2N5QTlJSHRjYmlBZ1oyUnJiVzl1YVhSdmNqb2dSMlJyTGsxdmJtbDBiM0k3WEc1OU8xeHVYRzVtZFc1amRHbHZiaUJNWldaMFUybGtaVUpoY2loN0lHZGthMjF2Ym1sMGIzSWdmVG9nVEdWbWRGTnBaR1ZDWVhKUWNtOXdjeWtnZTF4dUlDQnlaWFIxY200Z0tGeHVJQ0FnSUR4aWIzZ2dkbVY0Y0dGdVpEMTdkSEoxWlgwZ1kyaHBiR1E5ZXp4WGIzSnJjM0JoWTJWelFtRnlJR2RrYTIxdmJtbDBiM0k5ZTJka2EyMXZibWwwYjNKOUlDOCtmU0F2UGx4dUlDQXBPMXh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1UzbHpkR1Z0VkhKaGVWZHBibVJ2ZHloblpHdHRiMjVwZEc5eU9pQkhaR3N1VFc5dWFYUnZjaWtnZTF4dUlDQmpiMjV6ZENCc2IyZG5aWElnUFNCdVpYY2dURzluWjJWeUtDZFRlWE4wWlcxVWNtRjVKeWs3WEc0Z0lHeHZaMmRsY2k1a1pXSjFaeWduVTNsemRHVnRWSEpoZVNCM2FXNWtiM2NnWTNKbFlYUmxaQ2NwTzF4dVhHNGdJR052Ym5OMElITjVjM1JsYlZSeVlYbFdhV1YzVFc5a1pXd2dQU0J1WlhjZ1UzbHpkR1Z0VkhKaGVWWnBaWGROYjJSbGJDZ3BPMXh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHgzYVc1a2IzZGNiaUFnSUNBZ0lHTnNZWE56VG1GdFpUMWNJbk41YzNSbGJWOTBjbUY1WDNkcGJtUnZkMXdpWEc0Z0lDQWdJQ0JuWkd0dGIyNXBkRzl5UFh0blpHdHRiMjVwZEc5eWZWeHVJQ0FnSUNBZ1lXNWphRzl5UFh0QmMzUmhiQzVYYVc1a2IzZEJibU5vYjNJdVZFOVFJSHdnUVhOMFlXd3VWMmx1Wkc5M1FXNWphRzl5TGxKSlIwaFVmVnh1SUNBZ0lDQWdaWGhqYkhWemFYWnBkSGs5ZTBGemRHRnNMa1Y0WTJ4MWMybDJhWFI1TGtsSFRrOVNSWDFjYmlBZ0lDQWdJR05vYVd4a1BYczhVM2x6ZEdWdFZISmhlU0J6ZVhOMFpXMVVjbUY1Vm1sbGQwMXZaR1ZzUFh0emVYTjBaVzFVY21GNVZtbGxkMDF2WkdWc2ZTQXZQbjFjYmlBZ0lDQXZQbHh1SUNBcE8xeHVmVnh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJDWVhJb1oyUnJiVzl1YVhSdmNqb2dSMlJyTGsxdmJtbDBiM0lwSUh0Y2JpQWdZMjl1YzNRZ2JHOW5aMlZ5SUQwZ2JtVjNJRXh2WjJkbGNpZ25RbUZ5SnlrN1hHNGdJR3h2WjJkbGNpNWtaV0oxWnlnblFtRnlJSGRwYm1SdmR5QmpjbVZoZEdWa0p5azdYRzVjYmlBZ2NtVjBkWEp1SUNoY2JpQWdJQ0E4ZDJsdVpHOTNYRzRnSUNBZ0lDQmpiR0Z6YzA1aGJXVTlYQ0pvZVhCeWJtOTBZMmhmWW1GeVhDSmNiaUFnSUNBZ0lHNWhiV1Z6Y0dGalpUMWNJbWg1Y0hKdWIzUmphRndpWEc0Z0lDQWdJQ0JuWkd0dGIyNXBkRzl5UFh0blpHdHRiMjVwZEc5eWZWeHVJQ0FnSUNBZ1lXNWphRzl5UFh0Y2JpQWdJQ0FnSUNBZ1FYTjBZV3d1VjJsdVpHOTNRVzVqYUc5eUxsUlBVQ0I4WEc0Z0lDQWdJQ0FnSUVGemRHRnNMbGRwYm1SdmQwRnVZMmh2Y2k1TVJVWlVJSHhjYmlBZ0lDQWdJQ0FnUVhOMFlXd3VWMmx1Wkc5M1FXNWphRzl5TGxKSlIwaFVYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQmxlR05zZFhOcGRtbDBlVDE3UVhOMFlXd3VSWGhqYkhWemFYWnBkSGt1U1VkT1QxSkZmVnh1SUNBZ0lDQWdZWEJ3YkdsallYUnBiMjQ5ZTBGd2NIMWNiaUFnSUNBZ0lHTm9hV3hrUFh0Y2JpQWdJQ0FnSUNBZ1BHTmxiblJsY21KdmVGeHVJQ0FnSUNBZ0lDQWdJR05zWVhOelRtRnRaVDE3SjJoNWNISnViM1JqYUY5aVlYSmZZMjl1ZEdGcGJtVnlKMzFjYmlBZ0lDQWdJQ0FnSUNCemRHRnlkRmRwWkdkbGREMTdQRXhsWm5SVGFXUmxRbUZ5SUdka2EyMXZibWwwYjNJOWUyZGthMjF2Ym1sMGIzSjlJQzgrZlZ4dUlDQWdJQ0FnSUNBZ0lHTmxiblJsY2xkcFpHZGxkRDE3UEdKdmVDQXZQbjFjYmlBZ0lDQWdJQ0FnSUNCbGJtUlhhV1JuWlhROWV6eFNhV2RvZEZOcFpHVkNZWElnWjJScmJXOXVhWFJ2Y2oxN1oyUnJiVzl1YVhSdmNuMGdMejU5WEc0Z0lDQWdJQ0FnSUM4K1hHNGdJQ0FnSUNCOVhHNGdJQ0FnTHo1Y2JpQWdLVHRjYm4xY2JpSXNJQ0pwYlhCdmNuUWdleUJCY0hBc0lFRnpkR0ZzTENCSFpHc2dmU0JtY205dElGd2lZWE4wWVd3dlozUnJNMXdpTzF4dWFXMXdiM0owSUV4dloyZGxjaUJtY205dElGd2lMaTR2TGk0dmJHOW5aMlZ5TDB4dloyZGxjbHdpTzF4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCQ1lYSkRiMjUwWVdsdVpYSkNZV05yWjNKdmRXNWtLR2RrYTIxdmJtbDBiM0k2SUVka2F5NU5iMjVwZEc5eUtTQjdYRzRnSUdOdmJuTjBJR3h2WjJkbGNpQTlJRzVsZHlCTWIyZG5aWElvWENKQ1lYSkRiMjUwWVdsdVpYSkNZV05yWjNKdmRXNWtYQ0lwTzF4dUlDQnNiMmRuWlhJdVpHVmlkV2NvWENKQ1lYSkRiMjUwWVdsdVpYSkNZV05yWjNKdmRXNWtJSGRwYm1SdmR5QmpjbVZoZEdWa1hDSXBPMXh1WEc0Z0lISmxkSFZ5YmlBb1hHNGdJQ0FnUEhkcGJtUnZkMXh1SUNBZ0lDQWdZMnhoYzNOT1lXMWxQVndpYUhsd2NtNXZkR05vWENKY2JpQWdJQ0FnSUc1aGJXVnpjR0ZqWlQxY0ltaDVjSEp1YjNSamFGd2lYRzRnSUNBZ0lDQmhibU5vYjNJOWUxeHVJQ0FnSUNBZ0lDQkJjM1JoYkM1WGFXNWtiM2RCYm1Ob2IzSXVWRTlRSUh4Y2JpQWdJQ0FnSUNBZ1FYTjBZV3d1VjJsdVpHOTNRVzVqYUc5eUxreEZSbFFnZkZ4dUlDQWdJQ0FnSUNCQmMzUmhiQzVYYVc1a2IzZEJibU5vYjNJdVVrbEhTRlJjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJR1Y0WTJ4MWMybDJhWFI1UFh0QmMzUmhiQzVGZUdOc2RYTnBkbWwwZVM1RldFTk1WVk5KVmtWOVhHNGdJQ0FnSUNCaGNIQnNhV05oZEdsdmJqMTdRWEJ3ZlZ4dUlDQWdJQ0FnWjJScmJXOXVhWFJ2Y2oxN1oyUnJiVzl1YVhSdmNuMWNiaUFnSUNBZ0lHTm9hV3hrUFhzOFltOTRJR05zWVhOelRtRnRaVDFjSW1oNWNISnViM1JqYUY5aVlYSmZZMjl1ZEdGcGJtVnlYMkpoWTJ0bmNtOTFibVJjSWlBdlBuMWNiaUFnSUNBdlBseHVJQ0FwTzF4dWZWeHVJaXdnSWk4cUlGQnlhVzFoY25rZ1VHRnNaWFIwWlNBcUwxeHVMeW9nVTJWamIyNWtZWEo1SUZCaGJHVjBkR1VnS2k5Y2JpOHFJRlJsY25ScFlYSjVJRkJoYkdWMGRHVWdLaTljYmk4cUlGTjFjbVpoWTJVZ0ppQkNZV05yWjNKdmRXNWtJQ292WEc0dktpQkZjbkp2Y2lCUVlXeGxkSFJsSUNvdlhHNHZLaUJOYVhOaklDb3ZYRzR2S2lCUGNIUnBiMjVoYkRvZ1EzVnpkRzl0SUdadmJuUWdLaTljYmk4cUlFRnVhVzFoZEdsdmJpQkRkWEoyWlhNZ0tpOWNiaThxSUVWNGNISmxjM05wZG1VZ0tpOWNiaThxSUZOMFlXNWtZWEprSUNvdlhHNHVhV052Ymw5aWRYUjBiMjRnZTF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCaWIzSmtaWEk2SUc1dmJtVTdYRzRnSUhSeVlXNXphWFJwYjI0NklHSmhZMnRuY205MWJtUXRZMjlzYjNJZ01DNHljeUJsWVhObExDQmliM0prWlhJdGNtRmthWFZ6SURBdU1uTWdaV0Z6WlN3Z1ltOTRMWE5vWVdSdmR5QXdMakp6SUdWaGMyVTdYRzRnSUcxcGJpMTNhV1IwYURvZ05EQndlRHRjYmlBZ2JXbHVMV2hsYVdkb2REb2dOREJ3ZUR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ09UazVPWEI0TzF4dWZWeHVMbWxqYjI1ZlluVjBkRzl1SUd4aFltVnNMRnh1TG1samIyNWZZblYwZEc5dUlHbHRZV2RsSUh0Y2JpQWdiV0Z5WjJsdU9pQXdjSGc3WEc0Z0lIQmhaR1JwYm1jNklEQndlRHRjYm4xY2JpNXBZMjl1WDJKMWRIUnZiaUJwYldGblpTQjdYRzRnSUcxcGJpMTNhV1IwYURvZ01qUndlRHRjYmlBZ2JXbHVMV2hsYVdkb2REb2dNalJ3ZUR0Y2JuMWNiaTVwWTI5dVgySjFkSFJ2YmpwbWIyTjFjeUI3WEc0Z0lHOTFkR3hwYm1VNklESndlQ0J6YjJ4cFpDQWpZbU5qWW1Jd08xeHVJQ0J2ZFhSc2FXNWxMVzltWm5ObGREb2dNbkI0TzF4dWZWeHVMbWxqYjI1ZlluVjBkRzl1T21ScGMyRmliR1ZrTENBdVpHbHpZV0pzWldRdWFXTnZibDlpZFhSMGIyNGdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySW9NVFl1TVRVc0lERTJMakUxTENBeE5pNHhOU2s3WEc0Z0lHTnZiRzl5T2lCeVoySW9PVGN1TmpZc0lEazNMalkyTENBNU55NDJOaWs3WEc0Z0lHOXdZV05wZEhrNklEQXVNemc3WEc1OVhHNHVhV052Ymw5aWRYUjBiMjQ2WkdsellXSnNaV1E2YUc5MlpYSXNJQzVwWTI5dVgySjFkSFJ2Ympwa2FYTmhZbXhsWkRwaFkzUnBkbVVzSUM1a2FYTmhZbXhsWkM1cFkyOXVYMkoxZEhSdmJqcG9iM1psY2l3Z0xtUnBjMkZpYkdWa0xtbGpiMjVmWW5WMGRHOXVPbUZqZEdsMlpTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKbllpZ3hOaTR4TlN3Z01UWXVNVFVzSURFMkxqRTFLVHRjYmlBZ1kyOXNiM0k2SUhKbllpZzVOeTQyTml3Z09UY3VOallzSURrM0xqWTJLVHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nT1RrNU9YQjRPMXh1ZlZ4dVhHNHVhV052Ymw5aWRYUjBiMjRnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpPV0ZrTmpnd08xeHVJQ0JqYjJ4dmNqb2dJekJqTXprd01EdGNibjFjYmk1cFkyOXVYMkoxZEhSdmJqcG9iM1psY2lCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSEpuWWlneE5qUXVNU3dnTWpFNExqRXNJREUwTUM0M0tUdGNibjFjYmk1cFkyOXVYMkoxZEhSdmJqcGhZM1JwZG1VZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJJb01UYzBMaklzSURJeU1pNHlMQ0F4TlRNdU5DazdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRGh3ZUR0Y2JuMWNibHh1TG1samIyNWZZblYwZEc5dUxuaHpiV0ZzYkNCN1hHNGdJRzFwYmkxM2FXUjBhRG9nTXpKd2VEdGNiaUFnYldsdUxXaGxhV2RvZERvZ016SndlRHRjYm4xY2JpNXBZMjl1WDJKMWRIUnZiaTU0YzIxaGJHd2dhVzFoWjJVZ2UxeHVJQ0J0YVc0dGQybGtkR2c2SURJd2NIZzdYRzRnSUcxcGJpMW9aV2xuYUhRNklESXdjSGc3WEc1OVhHNHVhV052Ymw5aWRYUjBiMjR1YldWa2FYVnRJSHRjYmlBZ2JXbHVMWGRwWkhSb09pQTBPSEI0TzF4dUlDQnRhVzR0YUdWcFoyaDBPaUEwT0hCNE8xeHVmVnh1TG1samIyNWZZblYwZEc5dUxteGhjbWRsSUh0Y2JpQWdiV2x1TFhkcFpIUm9PaUExTm5CNE8xeHVJQ0J0YVc0dGFHVnBaMmgwT2lBMU5uQjRPMXh1ZlZ4dUxtbGpiMjVmWW5WMGRHOXVMbXhoY21kbElHbHRZV2RsSUh0Y2JpQWdiV2x1TFhkcFpIUm9PaUF5T0hCNE8xeHVJQ0J0YVc0dGFHVnBaMmgwT2lBeU9IQjRPMXh1ZlZ4dUxtbGpiMjVmWW5WMGRHOXVMbmhzWVhKblpTQjdYRzRnSUcxcGJpMTNhV1IwYURvZ05qUndlRHRjYmlBZ2JXbHVMV2hsYVdkb2REb2dOalJ3ZUR0Y2JuMWNiaTVwWTI5dVgySjFkSFJ2Ymk1NGJHRnlaMlVnYVcxaFoyVWdlMXh1SUNCdGFXNHRkMmxrZEdnNklESTRjSGc3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREk0Y0hnN1hHNTlYRzR1YVdOdmJsOWlkWFIwYjI0dWJtRnljbTkzSUh0Y2JpQWdjR0ZrWkdsdVp6b2dOSEI0TzF4dWZWeHVMbWxqYjI1ZlluVjBkRzl1TG5kcFpHVWdlMXh1SUNCd1lXUmthVzVuT2lBeE5IQjRPMXh1ZlZ4dVhHNHVhV052Ymw5aWRYUjBiMjR1YzNGMVlYSmxJSHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRKd2VEdGNibjFjYmk1cFkyOXVYMkoxZEhSdmJpNXpjWFZoY21VNllXTjBhWFpsSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpS0RFM05DNHlMQ0F5TWpJdU1pd2dNVFV6TGpRcE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTRjSGc3WEc1OVhHNHVhV052Ymw5aWRYUjBiMjR1YzNGMVlYSmxMblJ2WjJkc1pTNWphR1ZqYTJWa0lIdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dPVGs1T1hCNE8xeHVmVnh1WEc0dWFXTnZibDlpZFhSMGIyNHVabWxzYkdWa0lIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpsaFpEWTRNRHRjYmlBZ1kyOXNiM0k2SUNNd1l6TTVNREE3WEc1OVhHNHVhV052Ymw5aWRYUjBiMjR1ZEc5dVlXd2dlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak0yUTBZak0yTzF4dUlDQmpiMnh2Y2pvZ0kyUTRaVGRqWWp0Y2JuMWNiaTVwWTI5dVgySjFkSFJ2Ymk1MGIyNWhiRHBvYjNabGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKbllpZzRNQzQwTENBNU15d2dOelF1TVNrN1hHNTlYRzR1YVdOdmJsOWlkWFIwYjI0dWRHOXVZV3c2WVdOMGFYWmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlLRGs1TGpnc0lERXhNU3dnT1RRdU1pazdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRGh3ZUR0Y2JuMWNiaTVwWTI5dVgySjFkSFJ2Ymk1dmRYUnNhVzVsWkNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQmpiMnh2Y2pvZ0l6bGhaRFk0TUR0Y2JpQWdZbTk0TFhOb1lXUnZkem9nYVc1elpYUWdNQ0F3SURBZ01uQjRJQ001WVdRMk9EQTdYRzU5WEc0dWFXTnZibDlpZFhSMGIyNHViM1YwYkdsdVpXUTZhRzkyWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJJb01qUTVMamsxTENBeU5USXVPVFVzSURJME9DNDJOU2s3WEc1OVhHNHVhV052Ymw5aWRYUjBiMjR1YjNWMGJHbHVaV1E2WVdOMGFYWmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlLREkwTkM0NUxDQXlOVEF1T1N3Z01qUXlMak1wTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBNGNIZzdYRzU5WEc0dWFXTnZibDlpZFhSMGIyNHViM1YwYkdsdVpXUTZhRzkyWlhJZ2UxeHVJQ0JpYjNndGMyaGhaRzkzT2lCcGJuTmxkQ0F3SURBZ01DQXljSGdnSXpsaFpEWTRNRHRjYm4xY2JpNXBZMjl1WDJKMWRIUnZiaTV2ZFhSc2FXNWxaRHBoWTNScGRtVWdlMXh1SUNCaWIzZ3RjMmhoWkc5M09pQnBibk5sZENBd0lEQWdNQ0F5Y0hnZ0l6bGhaRFk0TUR0Y2JuMWNiaTVwWTI5dVgySjFkSFJ2Ymk1emRHRnVaR0Z5WkNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQmpiMnh2Y2pvZ0kyTTJZelpqTmp0Y2JuMWNiaTVwWTI5dVgySjFkSFJ2Ymk1emRHRnVaR0Z5WkRwb2IzWmxjaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISm5ZaWd5TlRJdU1UVXNJREkxTWk0eE5Td2dNalV5TGpFMUtUdGNibjFjYmk1cFkyOXVYMkoxZEhSdmJpNXpkR0Z1WkdGeVpEcGhZM1JwZG1VZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJJb01qUTVMak1zSURJME9TNHpMQ0F5TkRrdU15azdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRGh3ZUR0Y2JuMWNibHh1TG1samIyNWZZblYwZEc5dUxuUnZaMmRzWlNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ014WmpGbU1XWTdYRzRnSUdOdmJHOXlPaUFqWXpaak5tTTJPMXh1ZlZ4dUxtbGpiMjVmWW5WMGRHOXVMblJ2WjJkc1pTNWphR1ZqYTJWa0lIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpsaFpEWTRNRHRjYmlBZ1kyOXNiM0k2SUNNd1l6TTVNREE3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURFeWNIZzdYRzU5WEc0dWFXTnZibDlpZFhSMGIyNHVkRzluWjJ4bExuTnhkV0Z5WlM1amFHVmphMlZrSUh0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ09UazVPWEI0TzF4dWZWeHVYRzR1YVdOdmJsOWlkWFIwYjI1ZlozSnZkWEFnTG1samIyNWZZblYwZEc5dUlIdGNiaUFnYldGeVoybHVPaUF3Y0hnZ01uQjRPMXh1ZlZ4dUxtbGpiMjVmWW5WMGRHOXVYMmR5YjNWd0lDNXBZMjl1WDJKMWRIUnZianBtYVhKemRDMWphR2xzWkNCN1hHNGdJRzFoY21kcGJpMXNaV1owT2lBd2NIZzdYRzU5WEc0dWFXTnZibDlpZFhSMGIyNWZaM0p2ZFhBZ0xtbGpiMjVmWW5WMGRHOXVPbXhoYzNRdFkyaHBiR1FnZTF4dUlDQnRZWEpuYVc0dGNtbG5hSFE2SURCd2VEdGNibjFjYmx4dWMyTmhiR1VnZTF4dUlDQnRhVzR0ZDJsa2RHZzZJREl3Y0hnN1hHNGdJRzFwYmkxb1pXbG5hSFE2SURFd01IQjRPMXh1SUNCdFlYSm5hVzQ2SURCd2VEdGNibjFjYm5OallXeGxJSFJ5YjNWbmFDQjdYRzRnSUcxcGJpMTNhV1IwYURvZ01qQndlRHRjYmlBZ2JXbHVMV2hsYVdkb2REb2dNVEF3Y0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05rT0dVM1kySTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRGh3ZUR0Y2JuMWNibk5qWVd4bElHaHBaMmhzYVdkb2RDQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNNNVlXUTJPREE3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURFeWNIZzdYRzU5WEc1elkyRnNaU0J6Ykdsa1pYSWdlMXh1SUNCdGFXNHRkMmxrZEdnNklESXljSGc3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREp3ZUR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ09IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak9XRmtOamd3TzF4dUlDQmliM0prWlhJNklESndlQ0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ2JXRnlaMmx1T2lBdE0zQjRJQzB4TTNCNE8xeHVmVnh1YzJOaGJHVTZhRzkyWlhJZ2MyeHBaR1Z5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMkpqWTJKaU1EdGNiaUFnWW05eVpHVnlMV052Ykc5eU9pQWpNamN6TkRJeE8xeHVmVnh1YzJOaGJHVTZZV04wYVhabElITnNhV1JsY2lCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05oTUdObVpEQTdYRzU5WEc1elkyRnNaU0JqYjI1MFpXNTBjeUIwYUhKdmRXZG9JSHRjYmlBZ2JXbHVMWGRwWkhSb09pQXpNSEI0TzF4dWZWeHVYRzVqYVhKamRXeGhjbkJ5YjJkeVpYTnpJSHRjYmlBZ1kyOXNiM0k2SUNNNVlXUTJPREE3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXpaRFJpTXpZN1hHNGdJR1p2Ym5RdGMybDZaVG9nTm5CNE8xeHVJQ0J0YVc0dGQybGtkR2c2SURNeWNIZzdYRzU5WEc1Y2JpNW9lWEJ5Ym05MFkyZ3RZblYwZEc5dUxXRnlaV0VnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNVE14TXpFek8xeHVJQ0JqYjJ4dmNqb2dJMlV5WlRKbE1qdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2JXbHVMWGRwWkhSb0lETTFNRzF6SUdOMVltbGpMV0psZW1sbGNpZ3dMalF5TENBeExqWTNMQ0F3TGpJeExDQXdMamtwTENCdGFXNHRhR1ZwWjJoMElETTFNRzF6SUdOMVltbGpMV0psZW1sbGNpZ3dMalF5TENBeExqWTNMQ0F3TGpJeExDQXdMamtwTENCd1lXUmthVzVuSURNMU1HMXpJR04xWW1sakxXSmxlbWxsY2lnd0xqUXlMQ0F4TGpZM0xDQXdMakl4TENBd0xqa3BPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF3Y0hnZ01IQjRJREV5Y0hnZ01USndlRHRjYm4xY2JseHVMbWg1Y0hKdWIzUmphQzFpZFhSMGIyNHRZWEpsWVNCN1hHNGdJSEJoWkdScGJtYzZJREJ3ZUR0Y2JpQWdiV0Z5WjJsdU9pQXdjSGc3WEc0Z0lHSnZjbVJsY2pvZ01IQjRPMXh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nT0hCNE8xeHVJQ0J0YVc0dGQybGtkR2c2SURNd01IQjRPMXh1SUNCdGFXNHRhR1ZwWjJoME9pQXpNbkI0TzF4dWZWeHVMbWg1Y0hKdWIzUmphQzFpZFhSMGIyNHRZWEpsWVM1bGVIQmhibVJsWkNCN1hHNGdJSEJoWkdScGJtYzZJREJ3ZUNBeU5IQjRJREV5Y0hnZ01qUndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUhCNElEQndlQ0F5T0hCNElESTRjSGc3WEc1OVhHNHVhSGx3Y201dmRHTm9MV0oxZEhSdmJpMWhjbVZoTG5OdmRXNWtYM05sZEhScGJtZHpJSHRjYmlBZ2NHRmtaR2x1WnpvZ01IQjRJREkwY0hnZ01USndlQ0F5TkhCNE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdjSGdnTUhCNElESTRjSGdnTWpod2VEdGNiaUFnYldsdUxYZHBaSFJvT2lBMk1EQndlRHRjYmlBZ2JXbHVMV2hsYVdkb2REb2dNakF3Y0hnN1hHNTlYRzVjYmk1M2IzSnJjM0JoWTJWelgySmhjbDlqYjI1MFlXbHVaWElnZTF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJ0YVc0dGQybGtkR2dnTXpVd2JYTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5ESXNJREV1Tmpjc0lEQXVNakVzSURBdU9Ta3NJRzFwYmkxb1pXbG5hSFFnTXpVd2JYTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5ESXNJREV1Tmpjc0lEQXVNakVzSURBdU9Ta3NJSEJoWkdScGJtY2dNelV3YlhNZ1kzVmlhV010WW1WNmFXVnlLREF1TkRJc0lERXVOamNzSURBdU1qRXNJREF1T1NrN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ014TXpFek1UTTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREJ3ZUNBd2NIZ2dNVFp3ZUNBd2NIZzdYRzU5WEc1Y2JpNTNiM0pyYzNCaFkyVnpYMkpoY2lCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ014TXpFek1UTTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRGs1T1Rsd2VEdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ05UQXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNemdzSURFdU1qRXNJREF1TWpJc0lERXBPMXh1ZlZ4dVhHNHVkMjl5YTNOd1lXTmxYMkoxZEhSdmJpQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHMXBiaTEzYVdSMGFDQTFNREJ0Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzR6T0N3Z01TNHlNU3dnTUM0eU1pd2dNU2tzSUcxcGJpMW9aV2xuYUhRZ05UQXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNemdzSURFdU1qRXNJREF1TWpJc0lERXBMQ0J3WVdSa2FXNW5JRFV3TUcxeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpNNExDQXhMakl4TENBd0xqSXlMQ0F4S1R0Y2JpQWdkSEpoYm5OcGRHbHZiam9nY0dGa1pHbHVaeUExTURCdGN5QmpkV0pwWXkxaVpYcHBaWElvTUM0ek9Dd2dNUzR5TVN3Z01DNHlNaXdnTVNrc0lHSmhZMnRuY205MWJtUXRZMjlzYjNJZ01qQXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNelFzSURBdU9Dd2dNQzR6TkN3Z01TazdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRGs1T1Rsd2VEdGNiaUFnYldGeVoybHVPaUEwY0hnN1hHNGdJSEJoWkdScGJtYzZJREJ3ZUNBMGNIZzdYRzRnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6bGhaRFk0TUR0Y2JpQWdZMjlzYjNJNklDTXdZek01TURBN1hHNTlYRzR1ZDI5eWEzTndZV05sWDJKMWRIUnZianBvYjNabGNpQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHMXBiaTEzYVdSMGFDQTFNREJ0Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzR6T0N3Z01TNHlNU3dnTUM0eU1pd2dNU2tzSUcxcGJpMW9aV2xuYUhRZ05UQXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNemdzSURFdU1qRXNJREF1TWpJc0lERXBMQ0J3WVdSa2FXNW5JRFV3TUcxeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpNNExDQXhMakl4TENBd0xqSXlMQ0F4S1R0Y2JpQWdkSEpoYm5OcGRHbHZiam9nY0dGa1pHbHVaeUExTURCdGN5QmpkV0pwWXkxaVpYcHBaWElvTUM0ek9Dd2dNUzR5TVN3Z01DNHlNaXdnTVNrc0lHSmhZMnRuY205MWJtUXRZMjlzYjNJZ01qQXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNelFzSURBdU9Dd2dNQzR6TkN3Z01TazdYRzRnSUhCaFpHUnBibWM2SURCd2VDQXhNbkI0TzF4dWZWeHVMbmR2Y210emNHRmpaVjlpZFhSMGIyNHVabTlqZFhObFpDQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHMXBiaTEzYVdSMGFDQTFNREJ0Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzR6T0N3Z01TNHlNU3dnTUM0eU1pd2dNU2tzSUcxcGJpMW9aV2xuYUhRZ05UQXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNemdzSURFdU1qRXNJREF1TWpJc0lERXBMQ0J3WVdSa2FXNW5JRFV3TUcxeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpNNExDQXhMakl4TENBd0xqSXlMQ0F4S1R0Y2JpQWdkSEpoYm5OcGRHbHZiam9nY0dGa1pHbHVaeUExTURCdGN5QmpkV0pwWXkxaVpYcHBaWElvTUM0ek9Dd2dNUzR5TVN3Z01DNHlNaXdnTVNrc0lHSmhZMnRuY205MWJtUXRZMjlzYjNJZ01qQXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNelFzSURBdU9Dd2dNQzR6TkN3Z01TazdYRzRnSUhCaFpHUnBibWM2SURCd2VDQXhNbkI0TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpZbU5qWW1Jd08xeHVmVnh1TG5kdmNtdHpjR0ZqWlY5aWRYUjBiMjRnYkdGaVpXd2dlMXh1SUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lIQmhaR1JwYm1jNklEQndlRHRjYm4xY2JpNTNiM0pyYzNCaFkyVmZZblYwZEc5dUlHbGpiMjRnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREl3Y0hnN1hHNGdJSEJoWkdScGJtYzZJREJ3ZUNBeWNIZzdYRzU5WEc1Y2JpNXplWE4wWlcxZmRISmhlVjlqYjI1emRHRnVkRjlpWVdOclozSnZkVzVrSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJekV6TVRNeE16dGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNSEI0TzF4dWZWeHVMbk41YzNSbGJWOTBjbUY1WDJOdmJuTjBZVzUwWDJKaFkydG5jbTkxYm1RdVptOWpkWE5sWkNCN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklEQndlQ0F3Y0hnZ01qaHdlQ0F5T0hCNE8xeHVmVnh1WEc0dWMzbHpkR1Z0WDNSeVlYbGZhWFJsYlNCN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUcxcGJpMTNhV1IwYUNBMU1EQnRjeUJqZFdKcFl5MWlaWHBwWlhJb01DNHpPQ3dnTVM0eU1Td2dNQzR5TWl3Z01Ta3NJRzFwYmkxb1pXbG5hSFFnTlRBd2JYTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU16Z3NJREV1TWpFc0lEQXVNaklzSURFcExDQndZV1JrYVc1bklEVXdNRzF6SUdOMVltbGpMV0psZW1sbGNpZ3dMak00TENBeExqSXhMQ0F3TGpJeUxDQXhLVHRjYmlBZ2NHRmtaR2x1WnpvZ01DQTBjSGc3WEc0Z0lHMWhjbWRwYmpvZ01DQXhjSGc3WEc0Z0lHMXBiaTFvWldsbmFIUTZJRE13Y0hnN1hHNTlYRzR1YzNsemRHVnRYM1J5WVhsZmFYUmxiU0JwWTI5dUlIdGNiaUFnWm05dWRDMXphWHBsT2lBeU1uQjRPMXh1ZlZ4dUxuTjVjM1JsYlY5MGNtRjVYMmwwWlcwNmFHOTJaWElzSUM1aFkzUnBkbVV1YzNsemRHVnRYM1J5WVhsZmFYUmxiU0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJRzFwYmkxM2FXUjBhQ0ExTURCdGN5QmpkV0pwWXkxaVpYcHBaWElvTUM0ek9Dd2dNUzR5TVN3Z01DNHlNaXdnTVNrc0lHMXBiaTFvWldsbmFIUWdOVEF3YlhNZ1kzVmlhV010WW1WNmFXVnlLREF1TXpnc0lERXVNakVzSURBdU1qSXNJREVwTENCd1lXUmthVzVuSURVd01HMXpJR04xWW1sakxXSmxlbWxsY2lnd0xqTTRMQ0F4TGpJeExDQXdMakl5TENBeEtUdGNiaUFnYldsdUxYZHBaSFJvT2lBME1IQjRPMXh1ZlZ4dVhHNHVjM2x6ZEdWdFgzUnlZWGxmYVhSbGJTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNNNVlXUTJPREE3WEc0Z0lHTnZiRzl5T2lBak1HTXpPVEF3TzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBNGNIZzdYRzU5WEc0dWMzbHpkR1Z0WDNSeVlYbGZhWFJsYlRwb2IzWmxjaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTmlZMk5pWWpBN1hHNGdJR052Ykc5eU9pQWpNamN6TkRJeE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhObkI0TzF4dWZWeHVMbk41YzNSbGJWOTBjbUY1WDJsMFpXMHVZV04wYVhabElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpFek1UTXhNenRjYmlBZ1kyOXNiM0k2SUNNNVlXUTJPREE3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURJNGNIZ2dNamh3ZUNBd2NIZ2dNSEI0TzF4dWZWeHVMbk41YzNSbGJWOTBjbUY1WDJsMFpXMHVabWx5YzNRZ2UxeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhObkI0SURod2VDQTRjSGdnTVRad2VEdGNibjFjYmk1emVYTjBaVzFmZEhKaGVWOXBkR1Z0TG1acGNuTjBPbWh2ZG1WeUxDQXVjM2x6ZEdWdFgzUnlZWGxmYVhSbGJTNW1hWEp6ZEM1aFkzUnBkbVVnZTF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBeE5uQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1UTXhNekV6TzF4dWZWeHVMbk41YzNSbGJWOTBjbUY1WDJsMFpXMHViR0Z6ZENCN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklEaHdlQ0F4Tm5CNElERTJjSGdnT0hCNE8xeHVmVnh1TG5ONWMzUmxiVjkwY21GNVgybDBaVzB1YkdGemREcG9iM1psY2l3Z0xuTjVjM1JsYlY5MGNtRjVYMmwwWlcwdWJHRnpkQzVoWTNScGRtVWdlMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF4Tm5CNE8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTVRNeE16RXpPMXh1ZlZ4dVhHNHVjM2x6ZEdWdFgzUnlZWGtnZTF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJ0YVc0dGQybGtkR2dnTXpVd2JYTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5ESXNJREV1Tmpjc0lEQXVNakVzSURBdU9Ta3NJRzFwYmkxb1pXbG5hSFFnTXpVd2JYTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5ESXNJREV1Tmpjc0lEQXVNakVzSURBdU9Ta3NJSEJoWkdScGJtY2dNelV3YlhNZ1kzVmlhV010WW1WNmFXVnlLREF1TkRJc0lERXVOamNzSURBdU1qRXNJREF1T1NrN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ014TXpFek1UTTdYRzRnSUhCaFpHUnBibWM2SURKd2VEdGNiaUFnYldGeVoybHVPaUF3Y0hnN1hHNGdJRzFwYmkxb1pXbG5hSFE2SURNeWNIZzdYRzU5WEc0dWMzbHpkR1Z0WDNSeVlYa3VabTlqZFhObFpDQjdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREk0Y0hnN1hHNTlYRzVjYmk1emVYTjBaVzFmZEhKaGVWOWlZWEpmYm05MFkyZ2dlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQnRhVzR0ZDJsa2RHZ2dNelV3YlhNZ1kzVmlhV010WW1WNmFXVnlLREF1TkRJc0lERXVOamNzSURBdU1qRXNJREF1T1Nrc0lHMXBiaTFvWldsbmFIUWdNelV3YlhNZ1kzVmlhV010WW1WNmFXVnlLREF1TkRJc0lERXVOamNzSURBdU1qRXNJREF1T1Nrc0lIQmhaR1JwYm1jZ016VXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVORElzSURFdU5qY3NJREF1TWpFc0lEQXVPU2s3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCdGFXNHRhR1ZwWjJoME9pQXdjSGc3WEc0Z0lIQmhaR1JwYm1jNklEQndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUhCNE8xeHVJQ0J2Y0dGamFYUjVPaUF3TzF4dWZWeHVMbk41YzNSbGJWOTBjbUY1WDJKaGNsOXViM1JqYUM1bWIyTjFjMlZrSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJekV6TVRNeE16dGNiaUFnYldsdUxXaGxhV2RvZERvZ05EQndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTWpod2VEdGNiaUFnY0dGa1pHbHVaem9nTW5CNE8xeHVJQ0J2Y0dGamFYUjVPaUF4TzF4dWZWeHVYRzR1YzNsemRHVnRYM1J5WVhsZlltRnlYMjV2ZEdOb1gyVnVkSEo1SUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nYldsdUxYZHBaSFJvSURNMU1HMXpJR04xWW1sakxXSmxlbWxsY2lnd0xqUXlMQ0F4TGpZM0xDQXdMakl4TENBd0xqa3BMQ0J0YVc0dGFHVnBaMmgwSURNMU1HMXpJR04xWW1sakxXSmxlbWxsY2lnd0xqUXlMQ0F4TGpZM0xDQXdMakl4TENBd0xqa3BMQ0J3WVdSa2FXNW5JRE0xTUcxeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpReUxDQXhMalkzTENBd0xqSXhMQ0F3TGprcE8xeHVJQ0J3WVdSa2FXNW5PaUF3Y0hnZ05IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnWTI5c2IzSTZJQ001WVdRMk9EQTdYRzRnSUc5d1lXTnBkSGs2SURBN1hHNTlYRzR1YzNsemRHVnRYM1J5WVhsZlltRnlYMjV2ZEdOb0xtWnZZM1Z6WldRZ0xuTjVjM1JsYlY5MGNtRjVYMkpoY2w5dWIzUmphRjlsYm5SeWVTQjdYRzRnSUc5d1lXTnBkSGs2SURFN1hHNTlYRzVjYmk1emVYTjBaVzFmZEhKaGVWOWlZWEpmYm05MFkyaGZZMjl1ZEdWdWRDQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHMXBiaTEzYVdSMGFDQXpOVEJ0Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzQwTWl3Z01TNDJOeXdnTUM0eU1Td2dNQzQ1S1N3Z2JXbHVMV2hsYVdkb2RDQXpOVEJ0Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzQwTWl3Z01TNDJOeXdnTUM0eU1Td2dNQzQ1S1N3Z2NHRmtaR2x1WnlBek5UQnRjeUJqZFdKcFl5MWlaWHBwWlhJb01DNDBNaXdnTVM0Mk55d2dNQzR5TVN3Z01DNDVLVHRjYm4xY2JseHVMbTV2ZEdsbWFXTmhkR2x2Ymw5aVlYSWdlMXh1SUNCdGFXNHRhR1ZwWjJoME9pQXpObkI0TzF4dUlDQnRhVzR0ZDJsa2RHZzZJRE0yY0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ014TXpFek1UTTdYRzRnSUdOdmJHOXlPaUFqT1dGa05qZ3dPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQnRhVzR0ZDJsa2RHZ2dOalV3YlhNZ1kzVmlhV010WW1WNmFXVnlLREF1TXprc0lERXVNamtzSURBdU16VXNJREF1T1RncExDQnRhVzR0YUdWcFoyaDBJRFkxTUcxeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpNNUxDQXhMakk1TENBd0xqTTFMQ0F3TGprNEtTd2djR0ZrWkdsdVp5QTJOVEJ0Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzR6T1N3Z01TNHlPU3dnTUM0ek5Td2dNQzQ1T0NrN1hHNTlYRzR1Ym05MGFXWnBZMkYwYVc5dVgySmhjaTVvWVhOZmJtVjNYMjV2ZEdsbWFXTmhkR2x2YmlCN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUcxcGJpMTNhV1IwYUNBMk5UQnRjeUJqZFdKcFl5MWlaWHBwWlhJb01DNHpPU3dnTVM0eU9Td2dNQzR6TlN3Z01DNDVPQ2tzSUcxcGJpMW9aV2xuYUhRZ05qVXdiWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVNemtzSURFdU1qa3NJREF1TXpVc0lEQXVPVGdwTENCd1lXUmthVzVuSURZMU1HMXpJR04xWW1sakxXSmxlbWxsY2lnd0xqTTVMQ0F4TGpJNUxDQXdMak0xTENBd0xqazRLVHRjYmlBZ2JXbHVMWGRwWkhSb09pQXlNREJ3ZUR0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWW1GamEyZHliM1Z1WkMxamIyeHZjaUF6TURCdGN5QmpkV0pwWXkxaVpYcHBaWElvTUM0MExDQXdMQ0F3TGpJc0lERXBMQ0JqYjJ4dmNpQXpNREJ0Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzQwTENBd0xDQXdMaklzSURFcExDQnRhVzR0YUdWcFoyaDBJRE13TUcxeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpRc0lEQXNJREF1TWl3Z01Ta3NJRzFwYmkxM2FXUjBhQ0F6TURCdGN5QmpkV0pwWXkxaVpYcHBaWElvTUM0MExDQXdMQ0F3TGpJc0lERXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBallUQmpabVF3TzF4dUlDQmpiMnh2Y2pvZ0l6QXdNemN6T0R0Y2JuMWNibHh1TG01bGQxOXViM1JwWm1sallYUnBiMjVmWTJGeVpGOXdjbVYyYVdWM0lHbGpiMjRnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRE0yY0hnN1hHNTlYRzVjYmk1dWIxOXViM1JwWm1sallYUnBiMjRnZTF4dUlDQmpiMnh2Y2pvZ0l6STNNelF5TVR0Y2JuMWNiaTV1YjE5dWIzUnBabWxqWVhScGIyNGdhV052YmlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTXpKd2VEdGNibjFjYmx4dUxtSmhkSFJsY25sZmJHVjJaV3hmWTJseVkzVnNZWEpmY0hKdlozSmxjM01nZTF4dUlDQnRhVzR0YUdWcFoyaDBPaUF4Tm5CNE8xeHVmVnh1TG1KaGRIUmxjbmxmYkdWMlpXeGZZMmx5WTNWc1lYSmZjSEp2WjNKbGMzTWdhV052YmlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNibjFjYmk1aVlYUjBaWEo1WDJ4bGRtVnNYMk5wY21OMWJHRnlYM0J5YjJkeVpYTnpMbXh2ZHkxaVlYUjBaWEo1SUh0Y2JpQWdZMjlzYjNJNklDTm1abUkwWVdJN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSEpuWWlnME1pNDJMQ0F6TlM0eExDQXpOQzR5S1R0Y2JuMWNibHh1TG5ONWMzUmxiVjlrWlhSaGFXeHpYMk52Ym5SaGFXNWxjaUI3WEc0Z0lIQmhaR1JwYm1jNklESndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6RXpNVE14TXp0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01IQjRJREJ3ZUNBd2NIZ2dNVFp3ZUR0Y2JuMWNibHh1TG1Kc2RXVjBiMjkwYUY5elpYUjBhVzVuYzE5dFpXNTFYMk52Ym5SaGFXNWxjaUI3WEc0Z0lIQmhaR1JwYm1jNklERXdjSGc3WEc1OVhHNWNiaTVpYkhWbGRHOXZkR2hmYzJWMGRHbHVaM05mYldWdWRTQjdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREUyY0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ016WkRSaU16WTdYRzRnSUcxcGJpMTNhV1IwYURvZ01UQXdjSGc3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREV3TUhCNE8xeHVJQ0J3WVdSa2FXNW5PaUF4TUhCNE8xeHVmVnh1WEc0dVlteDFaWFJ2YjNSb1gyUmxkbWxqWlY5aVlYUjBaWEo1WDJ4bGRtVnNJSHRjYmlBZ2JXbHVMWGRwWkhSb09pQTBPSEI0TzF4dUlDQnRhVzR0YUdWcFoyaDBPaUEwT0hCNE8xeHVJQ0JqYjJ4dmNqb2dJMlE0WlRkallqdGNibjFjYmk1aWJIVmxkRzl2ZEdoZlpHVjJhV05sWDJKaGRIUmxjbmxmYkdWMlpXd2dZMmx5WTNWc1lYSndjbTluY21WemN5QjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNOaVkyTmlZakE3WEc0Z0lHTnZiRzl5T2lBalpEaGxOMk5pTzF4dWZWeHVMbUpzZFdWMGIyOTBhRjlrWlhacFkyVmZZbUYwZEdWeWVWOXNaWFpsYkNCcFkyOXVJSHRjYmlBZ2NHRmtaR2x1WnpvZ01UQndlRHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXpObkI0TzF4dUlDQmpiMnh2Y2pvZ2QyaHBkR1U3WEc1OVhHNWNiaTV2ZFhSd2RYUmZaR1YyYVdObGMxOXpZM0p2Ykd4aFlteGxJSHRjYmlBZ2JXbHVMWGRwWkhSb09pQXpNREJ3ZUR0Y2JpQWdZbTk0TFhOb1lXUnZkem9nYm05dVpUdGNiaUFnWW05eVpHVnlPaUF3Y0hnN1hHNTlYRzVjYmk1dmRYUndkWFJmWkdWMmFXTmxYMkoxZEhSdmJpQjdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREUyY0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ001WVdRMk9EQTdYRzRnSUdOdmJHOXlPaUFqTUdNek9UQXdPMXh1SUNCd1lXUmthVzVuT2lBNGNIZzdYRzU5WEc0dWIzVjBjSFYwWDJSbGRtbGpaVjlpZFhSMGIyNHVjMlZzWldOMFpXUWdlMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF5T0hCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWVRCalptUXdPMXh1SUNCamIyeHZjam9nSXpBd016Y3pPRHRjYm4xY2JseHVMbWg1Y0hKdWIzUmphRjlpWVhKZmMybGtaU0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJRzFwYmkxM2FXUjBhQ0EyTlRCdGN5QmpkV0pwWXkxaVpYcHBaWElvTUM0ek9Td2dNUzR5T1N3Z01DNHpOU3dnTUM0NU9Da3NJRzFwYmkxb1pXbG5hSFFnTmpVd2JYTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU16a3NJREV1TWprc0lEQXVNelVzSURBdU9UZ3BMQ0J3WVdSa2FXNW5JRFkxTUcxeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpNNUxDQXhMakk1TENBd0xqTTFMQ0F3TGprNEtUdGNibjFjYmx4dWQybHVaRzkzTGtKaGNpQjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dUlDQnRhVzR0YUdWcFoyaDBPaUF6TUhCNE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXlOSEI0TzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTVRCd2VEdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQXhNSEI0TzF4dUlDQndZV1JrYVc1bkxXeGxablE2SURFd2NIZzdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJREV3Y0hnN1hHNTlYRzUzYVc1a2IzY3VRbUZ5SUQ0Z1kyVnVkR1Z5WW05NElIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREJ3ZUNBd2NIZ2dNalJ3ZUNBeU5IQjRPMXh1ZlZ4dVhHNHVhSGx3Y201dmRHTm9YMkpoY2w5amIyNTBZV2x1WlhKZlltRmphMmR5YjNWdVpDQjdYRzRnSUcxcGJpMW9aV2xuYUhRNklETTBjSGc3WEc1OUlpd2dJbWx0Y0c5eWRDQjdJRUZ3Y0NCOUlHWnliMjBnSjJGemRHRnNMMmQwYXpNbk8xeHVhVzF3YjNKMElFaDVjSEp1YjNSamFDQm1jbTl0SUNjdUwzTnlZeTkyYVdWM0wwaDVjSEp1YjNSamFDYzdYRzVwYlhCdmNuUWdRbUZ5SUdaeWIyMGdKeTR2YzNKakwzWnBaWGN2WW1GeUwwSmhjaWM3WEc1cGJYQnZjblFnUW1GeVEyOXVkR0ZwYm1WeVVHRmtaR2x1WnlCbWNtOXRJQ2N1TDNOeVl5OTJhV1YzTDJKaGNpOUNZWEpEYjI1MFlXbHVaWEpDWVdOclozSnZkVzVrSnp0Y2JtbHRjRzl5ZENCemRIbHNaU0JtY205dElDY3VMM04wZVd4bEwyMWhhVzR1YzJOemN5YzdYRzVwYlhCdmNuUWdTSGx3Y214aGJtUWdabkp2YlNBbloyazZMeTlCYzNSaGJFaDVjSEpzWVc1a0p6dGNibHh1WTI5dWMzUWdhSGx3Y214aGJtUWdQU0JJZVhCeWJHRnVaQzVuWlhSZlpHVm1ZWFZzZENncE8xeHVYRzVCY0hBdWMzUmhjblFvZTF4dUlDQmpjM002SUhOMGVXeGxMRnh1SUNCdFlXbHVLQ2tnZTF4dUlDQWdJRUZ3Y0M1blpYUmZiVzl1YVhSdmNuTW9LUzV0WVhBb0tHMXZibWwwYjNJcElEMCtJSHRjYmlBZ0lDQWdJRUpoY2tOdmJuUmhhVzVsY2xCaFpHUnBibWNvYlc5dWFYUnZjaWs3WEc0Z0lDQWdJQ0JDWVhJb2JXOXVhWFJ2Y2lrN1hHNGdJQ0FnSUNCSWVYQnlibTkwWTJnb2V5Qm5aR3R0YjI1cGRHOXlPaUJ0YjI1cGRHOXlJSDBwTzF4dUlDQWdJSDBwTzF4dUlDQjlMRnh1ZlNrN1hHNGlYU3dLSUNBaWJXRndjR2x1WjNNaU9pQWlPMEZCUVVFc1QwRkJUMEVzV1VGQlZ6dEJRVU5zUWl4UFFVRlBReXhWUVVGVE8wRkJRMmhDTEU5QlFVOHNVMEZCVXpzN08wRkRSbWhDTEU5QlFVOURMRmxCUVZjN096dEJRMEZZTEVsQlFVMHNWMEZCVnl4RFFVRkRMRkZCUVdkQ0xFbEJRM0JETEZGQlFWRXNiVUpCUVcxQ0xFOUJRVThzUlVGRGJFTXNWMEZCVnl4TFFVRkxMRWRCUVVjc1JVRkRia0lzV1VGQldUdEJRVVZXTEVsQlFVMHNWMEZCVnl4RFFVRkRMRkZCUVdkQ0xFbEJRM0JETEZGQlFWRXNiVUpCUVcxQ0xFOUJRVThzUlVGRGJFTXNWMEZCVnl4TFFVRkxMRWRCUVVjc1JVRkRia0lzV1VGQldUdEJRV05XTEVsQlFVMHNWVUZCVGl4TlFVRk5MRk5CUVdVN1FVRkJRU3hGUVdsQ2FFSXNXVUZCV1N4VFFVRTBReXhOUVVGbE8wRkJhRUl2UlN4VFFVRlJMR05CUVdNc1EwRkJReXhOUVVGWE8wRkJhVUk1UWl4VFFVRkxMRmRCUVZjN1FVRkRhRUlzVTBGQlN5eFJRVUZSTEZGQlFWRXNVMEZCVXl4SlFVRkpPMEZCUVVFc1JVRkRkRU03UVVGQlFTeEZRV3BDUVR0QlFVRkJMRVZCUTBFN1FVRkJRU3hGUVZOQkxFOUJRVThzUzBGQlN5eFRRVUZ4UXl4TlFVRmxPMEZCUXpWRUxGZEJRVThzU1VGQlNTeFRRVUZSTEZOQlFWTXNTVUZCU1R0QlFVRkJMRVZCUTNCRE8wRkJRVUVzUlVGUFFTeFhRVUZYTzBGQlExQXNWMEZCVHl4WFFVRlhMRXRCUVVzc1VVRkJVU3hIUVVGSExFdEJRVXNzVVVGQlVTeE5RVUZOTEV0QlFVc3NTMEZCU3l4TlFVRk5MRVZCUVVVN1FVRkJRU3hGUVVNelJUdEJRVUZCTEVWQlJVRXNSMEZCVFN4SlFVRnBRenRCUVVOdVF5eFZRVUZOUXl4UlFVRlBMRWxCUVVrc1UwRkJVU3hMUVVGTExGVkJRVlVzUzBGQlN5eExRVUZMTzBGQlEyeEVMRWxCUVVGQkxFMUJRVXNzWTBGQll5eERRVUZETEUxQlFXRXNSMEZCUnl4TFFVRkxMRmxCUVZrc1EwRkJReXhEUVVGRE8wRkJRM1pFTEZkQlFVOUJPMEZCUVVFc1JVRkRXRHRCUVVGQkxFVkJSVUVzVFVGQllUdEJRVU5VTEZGQlFVa3NUMEZCVHl4TFFVRkxMRk5CUVZNc1VVRkJVVHRCUVVNM1FpeGhRVUZQTEV0QlFVc3NXVUZCV1N4TFFVRkxMRk5CUVZNc1NVRkJTU3hEUVVGRE8wRkJSUzlETEZGQlFVa3NUMEZCVHl4TFFVRkxMRlZCUVZVc1ZVRkJWVHRCUVVOb1F5eFpRVUZOTEZOQlFWTXNUMEZCVHl4VFFVRlRMRXRCUVVzc1MwRkJTeXhEUVVGRE8wRkJRekZETEZWQlFVa3NUMEZCVHl4TFFVRkxMRk5CUVZNc1RVRkJUU3hOUVVGTk8wRkJRMnBETEdWQlFVOHNTMEZCU3l4WlFVRlpMRXRCUVVzc1UwRkJVeXhOUVVGTkxFVkJRVVVzUTBGQlF6dEJRVVZ1UkN4aFFVRlBMRXRCUVVzc1dVRkJXU3hMUVVGTExGTkJRVk1zUzBGQlN5eExRVUZMTEVOQlFVTTdRVUZCUVN4SlFVTnlSRHRCUVVWQkxGVkJRVTBzVFVGQlRTdzRRa0ZCT0VJN1FVRkJRU3hGUVVNNVF6dEJRVUZCTEVWQlJVRXNWVUZCVlN4VlFVRTRRenRCUVVOd1JDeFJRVUZKTEU5QlFVOHNTMEZCU3l4VFFVRlRMR05CUVdNc1dVRkJXVHRCUVVNdlF5eGhRVUZQTEV0QlFVc3NVMEZCVXl4VlFVRlZMRTFCUVUwN1FVRkRha01zYVVKQlFWTXNTMEZCU3l4SlFVRkpMRU5CUVVNN1FVRkJRU3hOUVVOMlFpeERRVUZETzBGQlFVRXNTVUZEVEN4WFFVRlhMRTlCUVU4c1MwRkJTeXhUUVVGVExGbEJRVmtzV1VGQldUdEJRVU53UkN4WlFVRk5MRk5CUVZNc1YwRkJWeXhMUVVGTExFdEJRVXM3UVVGRGNFTXNXVUZCVFN4TFFVRkxMRXRCUVVzc1UwRkJVeXhSUVVGUkxGRkJRVkVzVFVGQlRUdEJRVU16UXl4cFFrRkJVeXhMUVVGTExFbEJRVWtzUTBGQlF6dEJRVUZCTEUxQlEzWkNMRU5CUVVNN1FVRkRSQ3hoUVVGUExFMUJRVTA3UVVGRFZDeFJRVUZETEV0QlFVc3NVMEZCVXl4WFFVRjVReXhGUVVGRk8wRkJRVUVzVFVGRE9VUTdRVUZCUVN4SlFVTktPMEZCUTBFc1ZVRkJUU3hOUVVGTkxFZEJRVWNzUzBGQlN5eFJRVUZSTEd0Q1FVRnJRanRCUVVGQkxFVkJRMnhFTzBGQlEwbzdRVUZGVHl4SlFVRk5MRVZCUVVVc1MwRkJTeXhKUVVGSk8wRkJRM2hDTEVsQlFVOHNhMEpCUVZFN096dEJRM2hHWml4UFFVRlBMRmRCUVZjN1FVRkhXQ3hKUVVGTkxFOUJRVThzVFVGQlRUdEJRVVZ1UWl4VFFVRlRMRk5CUVZORExGZEJRV3RDTEZWQlFYVkNPMEZCUXpsRUxGTkJRVThzVFVGQlRTeExRVUZMTEZOQlFWTkJMRmRCUVZVc1RVRkJUU3hMUVVGTExGZEJRVmNzUTBGQlF6dEJRVU5vUlR0QlFVVlBMRk5CUVZNc1VVRkJVVU1zVlVGQmFVSXNWVUZCZFVJN1FVRkROVVFzVTBGQlR5eE5RVUZOTEV0QlFVc3NVVUZCVVVFc1ZVRkJVeXhOUVVGTkxFdEJRVXNzVjBGQlZ5eERRVUZETzBGQlF6bEVPenM3UVVOWVFTeFBRVUZQUXl4WlFVRlhPMEZCVTFnc1NVRkJUU3hWUVVGVlFTeFBRVUZOTzBGQlZYUkNMRk5CUVZNc1YwRkRXaXhYUVVOQkxGRkJRV3RETEU5QlEyeERMRkZCUVd0RExGVkJRM0JETzBGQlEwVXNVVUZCVFN4UFFVRlBMRTFCUVUwc1VVRkJVU3hUUVVGVExFdEJRVXNzVDBGQlR5eGpRVUZqTzBGQlF6bEVMRkZCUVUwc1JVRkJSU3hMUVVGTExFdEJRVXNzU1VGQlNTeEpRVUZKTzBGQlFVRXNTVUZEZEVJc1MwRkJTeXhQUVVGUExGbEJRVmtzVlVGQlZUdEJRVUZCTEVsQlEyeERMRXRCUVVzc1QwRkJUeXhSUVVGUkxGVkJRVlVzVDBGQlR6dEJRVUZCTEVsQlEzSkRMRXRCUVVzc1QwRkJUeXhSUVVGUkxGVkJRVlVzVDBGQlR6dEJRVUZCTEVWQlEzcERPMEZCUlVFc1VVRkJUU3hQUVVGUExFMUJRVTBzVVVGQlVTeEhRVUZITEVsQlEzaENRU3hQUVVGTkxGRkJRVkVzV1VGQldTeEhRVUZITEVsQlF6ZENRU3hQUVVGTkxGRkJRVkVzVjBGQlZ5eEhRVUZITzBGQlJXeERMRTlCUVVzc1VVRkJVU3hWUVVGVkxFTkJRVU1zUjBGQlJ5eFhRVUZ0UWl4SlFVRkpMRTFCUVUwc1EwRkJRenRCUVVONlJDeFBRVUZMTEZGQlFWRXNWVUZCVlN4RFFVRkRMRWRCUVVjc1YwRkJiVUlzU1VGQlNTeE5RVUZOTEVOQlFVTTdRVUZEZWtRc1UwRkJUenRCUVVOWU8wRkJVMDhzVTBGQlV5eFZRVUZWTEV0QlFYbERPMEZCUXk5RUxGTkJRVThzU1VGQlNTeFJRVUZSTEVOQlFVTXNVMEZCVXl4WFFVRlhPMEZCUTNCRExGRkJRVWtzVFVGQlRTeFJRVUZSTEVkQlFVY3NSMEZCUnp0QlFVTndRaXhOUVVGQlF5eFBRVUZOTEZGQlFWRXNXVUZCV1N4TFFVRkxMRU5CUVVNc1IwRkJSeXhSUVVGUk8wRkJRM1pETEZsQlFVazdRVUZEUVN4clFrRkJVVUVzVDBGQlRTeFJRVUZSTEcxQ1FVRnRRaXhIUVVGSExFTkJRVU03UVVGQlFTeFJRVU5xUkN4VFFVRlRMRTlCUVU4N1FVRkRXaXhwUWtGQlR5eExRVUZMTzBGQlFVRXNVVUZEYUVJN1FVRkJRU3hOUVVOS0xFTkJRVU03UVVGQlFTeEpRVU5NTEU5QlFVODdRVUZEU0N4TlFVRkJRU3hQUVVGTkxGRkJRVkVzVjBGQlZ5eExRVUZMTEVOQlFVTXNSMEZCUnl4UlFVRlJPMEZCUTNSRExGbEJRVWs3UVVGRFFTeHJRa0ZCVVVFc1QwRkJUU3hSUVVGUkxGbEJRVmtzUjBGQlJ5eERRVUZETzBGQlFVRXNVVUZETVVNc1UwRkJVeXhQUVVGUE8wRkJRMW9zYVVKQlFVOHNTMEZCU3p0QlFVRkJMRkZCUTJoQ08wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVER0QlFVRkJMRVZCUTBvc1EwRkJRenRCUVVOTU96czdRVWc1UkVFc1NVRkJUU3hyUWtGQlRpeGpRVUZwUXl4VFFVRlRPMEZCUVVFc1JVRm5RblJETEZsQlFWa3NUVUZCVXp0QlFVTnFRaXhWUVVGTk8wRkJabFlzVTBGQlVTeGhRVUZqTEZGQlFWRTdRVUZOT1VJc1UwRkJVU3hsUVVGbE8wRkJWVzVDTEZOQlFVc3NVMEZCVXp0QlFVTmtMRk5CUVVzc1YwRkJWeXhKUVVGSlF5eFBRVUZOTEdGQlFXRTdRVUZEZGtNc1UwRkJTeXhUUVVGVExGRkJRVkVzVjBGQlZ5eE5RVUZOTzBGQlEyNURMRmRCUVVzc1ZVRkJWVHRCUVVObUxGZEJRVXNzVTBGQlV6dEJRVUZCTEVsQlEyeENMRU5CUVVNN1FVRkRSQ3hUUVVGTExGTkJRVk1zVVVGQlVTeFRRVUZUTEVOQlFVTXNSMEZCUnl4UlFVRlJMRXRCUVVzc1lVRkJZU3hIUVVGSExFTkJRVU03UVVGRGFrVXNWMEZCVHl4SlFVRkpMRTFCUVUwc1RVRkJUVHRCUVVGQkxFMUJRMjVDTEU5QlFVOHNRMEZCUXl4UlFVRlJMRWRCUVVjc1UwRkJVeXhQUVVGUExFMUJRVTBzUzBGQlN5eERRVUZETEVOQlFVTTdRVUZCUVN4SlFVTndSQ3hEUVVGRE8wRkJRVUVzUlVGRFREdEJRVUZCTEVWQlJWRXNUVUZCWVN4WFFVRjVRenRCUVVNeFJDeFZRVUZOTEVsQlFVa3NaMEpCUVZFc1MwRkJTeXhKUVVGSk8wRkJRek5DTEZkQlFVOHNXVUZCV1N4RlFVRkZMRWRCUVVjc1UwRkJVeXhKUVVGSk8wRkJRVUVzUlVGRGVrTTdRVUZCUVN4RlFVVkJMRmRCUVZjN1FVRkRVQ3hYUVVGUExFOUJRVThzV1VGQldTeExRVUZMTEVsQlFVa3NRMEZCUXl4SFFVRkhPMEZCUVVFc1JVRkRNME03UVVGQlFTeEZRVVZCTEUxQlFWTTdRVUZCUlN4WFFVRlBMRXRCUVVzN1FVRkJRU3hGUVVGUE8wRkJRVUVzUlVGRE9VSXNTVUZCU1N4UFFVRlZPMEZCUTFZc1VVRkJTU3hWUVVGVkxFdEJRVXNzVVVGQlVUdEJRVU4yUWl4WFFVRkxMRk5CUVZNN1FVRkRaQ3hYUVVGTExGTkJRVk1zUzBGQlN5eFRRVUZUTzBGQlFVRXNTVUZEYUVNN1FVRkJRU3hGUVVOS08wRkJRVUVzUlVGRlFTeFpRVUZaTzBGQlExSXNVVUZCU1N4TFFVRkxPMEZCUTB3N1FVRkZTaXhSUVVGSkxFdEJRVXNzVVVGQlVUdEJRVU5pTEZkQlFVc3NVVUZCVVN4VFFVRlRMRXRCUVVzc1kwRkJZeXhOUVVGTk8wRkJRek5ETEdOQlFVMHNTVUZCU1N4TFFVRkxMRTlCUVZFc1MwRkJTeXhKUVVGSkxFTkJRVU03UVVGRGFrTXNXVUZCU1N4aFFVRmhMRk5CUVZNN1FVRkRkRUlzV1VGQlJTeExRVUZMTEVOQlFVRkRMRTlCUVVzc1MwRkJTeXhKUVVGSlFTeEZRVUZETEVOQlFVTXNSVUZEYkVJc1RVRkJUU3hUUVVGUExFdEJRVXNzVTBGQlV5eExRVUZMTEZOQlFWTXNSMEZCUnl4RFFVRkRPMEZCUVVFc1VVRkRkRVFzVDBGQlR6dEJRVU5JTEdWQlFVc3NTVUZCU1N4RFFVRkRPMEZCUVVFc1VVRkRaRHRCUVVGQkxFMUJRMG9zUTBGQlF6dEJRVUZCTEVsQlEwd3NWMEZCVnl4TFFVRkxMRlZCUVZVN1FVRkRkRUlzVjBGQlN5eFJRVUZSTEZOQlFWTXNTMEZCU3l4alFVRmpMRTFCUVUwN1FVRkRNME1zYTBKQlFWVXNTMEZCU3l4UlFVRlRMRVZCUTI1Q0xFdEJRVXNzVDBGQlN5eExRVUZMTEVsQlFVa3NTMEZCU3l4alFVRmxMRWRCUVVjc1MwRkJTeXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlEzUkVMRTFCUVUwc1UwRkJUeXhMUVVGTExGTkJRVk1zUzBGQlN5eFRRVUZUTEVkQlFVY3NRMEZCUXp0QlFVRkJMRTFCUTNSRUxFTkJRVU03UVVGQlFTeEpRVU5NTzBGQlFVRXNSVUZEU2p0QlFVRkJMRVZCUlVFc1lVRkJZVHRCUVVOVUxGRkJRVWtzUzBGQlN6dEJRVU5NTzBGQlJVb3NVMEZCU3l4VFFVRlRMRmRCUVZjN1FVRkJRU3hOUVVOeVFpeExRVUZMTEV0QlFVczdRVUZCUVN4TlFVTldMRXRCUVVzc1UwRkJUeXhMUVVGTExFbEJRVWtzUzBGQlN5eGxRVUZuUWl4TFFVRkxMRXRCUVVzc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGQlFTeE5RVU14UkN4TFFVRkxMRk5CUVU4c1MwRkJTeXhUUVVGVExFdEJRVXNzVTBGQlV5eEhRVUZITzBGQlFVRXNTVUZETDBNc1EwRkJRenRCUVVGQkxFVkJRMHc3UVVGQlFTeEZRVVZCTEZkQlFWYzdRVUZEVUN4VFFVRkxMRTlCUVU4c1QwRkJUenRCUVVOdVFpeFhRVUZQTEV0QlFVczdRVUZCUVN4RlFVTm9RanRCUVVGQkxFVkJSVUVzV1VGQldUdEJRVU5TTEZOQlFVc3NVVUZCVVN4TFFVRkxPMEZCUTJ4Q0xGZEJRVThzUzBGQlN6dEJRVUZCTEVWQlEyaENPMEZCUVVFc1JVRkZRU3haUVVGWk8wRkJRVVVzVjBGQlR5eERRVUZETEVOQlFVTXNTMEZCU3p0QlFVRkJMRVZCUVUwN1FVRkJRU3hGUVVOc1F5eGhRVUZoTzBGQlFVVXNWMEZCVHl4RFFVRkRMRU5CUVVNc1MwRkJTenRCUVVGQkxFVkJRVTg3UVVGQlFTeEZRVVZ3UXl4UFFVRlBPMEZCUTBnc1UwRkJTeXhUUVVGVExFdEJRVXNzVTBGQlV6dEJRVUZCTEVWQlEyaERPMEZCUVVFc1JVRkZRU3hWUVVGVkxGVkJRWE5DTzBGQlF6VkNMRk5CUVVzc1UwRkJVeXhSUVVGUkxGZEJRVmNzVVVGQlVUdEJRVU42UXl4WFFVRlBPMEZCUVVFc1JVRkRXRHRCUVVGQkxFVkJSVUVzVVVGQlVTeFZRVUZwUXp0QlFVTnlReXhYUVVGUExFdEJRVXM3UVVGRFdpeFRRVUZMTEZOQlFWTXNVVUZCVVN4VFFVRlRMRU5CUVVNc1IwRkJSeXhSUVVGUkxGTkJRVk1zUjBGQlJ5eERRVUZETzBGQlEzaEVMRmRCUVU4N1FVRkJRU3hGUVVOWU8wRkJRVUVzUlVGRlFTeFZRVUZWTEZWQlFUaENPMEZCUTNCRExGVkJRVTBzUzBGQlN5eExRVUZMTEZOQlFWTXNVVUZCVVN4WFFVRlhMRTFCUVUwN1FVRkRPVU1zWlVGQlV5eExRVUZMTEVsQlFVa3NRMEZCUXp0QlFVRkJMRWxCUTNaQ0xFTkJRVU03UVVGRFJDeFhRVUZQTEUxQlFVMHNTMEZCU3l4VFFVRlRMRmRCUVZjc1JVRkJSVHRCUVVGQkxFVkJRelZETzBGQlFVRXNSVUZoUVN4TFFVTkpReXhYUVVOQkxFMUJRMEVzV1VGQk5FTXNVMEZCVHl4TFFVTnlSRHRCUVVORkxGTkJRVXNzVTBGQlV6dEJRVU5rTEZOQlFVc3NaVUZCWlVFN1FVRkRjRUlzVTBGQlN5eG5Ra0ZCWjBJN1FVRkRja0lzVVVGQlNTeFBRVUZQTEZOQlFWTXNXVUZCV1R0QlFVTTFRaXhYUVVGTExGTkJRVk03UVVGRFpDeGhRVUZQTEV0QlFVczdRVUZCUVN4SlFVTm9RaXhQUVVGUE8wRkJRMGdzVjBGQlN5eFhRVUZYTzBGQlEyaENMR0ZCUVU4c1MwRkJTenRCUVVGQkxFbEJRMmhDTzBGQlEwRXNVMEZCU3l4VlFVRlZPMEZCUTJZc1YwRkJUenRCUVVGQkxFVkJRMWc3UVVGQlFTeEZRVVZCTEUxQlEwa3NUVUZEUVN4WlFVRTBReXhUUVVGUExFdEJRM0pFTzBGQlEwVXNVMEZCU3l4VlFVRlZPMEZCUTJZc1UwRkJTeXhaUVVGWk8wRkJRMnBDTEZOQlFVc3NhVUpCUVdsQ08wRkJRM1JDTEZOQlFVc3NWMEZCVnp0QlFVTm9RaXhYUVVGUE8wRkJRVUVzUlVGRFdEdEJRVUZCTEVWQllVRXNVVUZEU1N4TlFVTkJMRk5CUTBFc1ZVRkRSanRCUVVORkxGVkJRVTBzU1VGQlNTeFBRVUZQTEZsQlFWa3NZVUZCWVN4VlFVRlZMR0ZCUVdFc1RVRkJUU3hMUVVGTExFbEJRVWs3UVVGRGFFWXNWVUZCVFN4TlFVRk5MRU5CUVVNc1VVRkJjVUlzVTBGQlowSXNTMEZCU3l4SlFVRkpMRVZCUVVVc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF6dEJRVVV4UlN4UlFVRkpMRTFCUVUwc1VVRkJVU3hKUVVGSkxFZEJRVWM3UVVGRGNrSXNhVUpCUVZjc1QwRkJUeXhOUVVGTk8wRkJRM0JDTEdOQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTVHRCUVVObUxHTkJRVTBzUzBGQlN5eEZRVUZGTEZGQlFWRXNSMEZCUnl4SFFVRkhPMEZCUXpOQ0xHRkJRVXNzVlVGQlZTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRU5CUVVNN1FVRkJRU3hOUVVONlF6dEJRVUZCTEVsQlEwb3NUMEZCVHp0QlFVTklMRlZCUVVrc1QwRkJUeXhaUVVGWkxGVkJRVlU3UVVGRE4wSXNZMEZCVFN4TFFVRkxMRXRCUVVzc1VVRkJVU3hUUVVGVExFZEJRVWM3UVVGRGNFTXNZVUZCU3l4VlFVRlZMRTFCUVUwc1MwRkJTeXhYUVVGWExFVkJRVVVzUTBGQlF6dEJRVUZCTEUxQlF6VkRPMEZCUVVFc1NVRkRTanRCUVVWQkxGZEJRVTg3UVVGQlFTeEZRVU5ZTzBGQlFVRXNSVUZGUVN4UFFVRlBMRTlCVFV3c1RVRkJXU3hMUVVFeVFpeEpRVUZKTEZOQlFWTXNUVUZCYzBJN1FVRkRlRVVzVlVGQlRTeFRRVUZUTEUxQlFVMHNSMEZCUnl4SFFVRkhMRXRCUVVzc1NVRkJTU3hQUVVGTExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFWTTdRVUZEZWtRc1ZVRkJUU3hWUVVGVkxFbEJRVWtzVTBGQlV5eFBRVUZQTEVOQlFVTTdRVUZEY2tNc1ZVRkJUU3hUUVVGVExFdEJRVXNzU1VGQlNTeFRRVUZQTEVsQlFVa3NWVUZCVlN4TlFVRk5MRkZCUVZFc1NVRkJTU3hQUVVGUExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEzcEZMRmxCUVZFc1ZVRkJWU3hOUVVGTkxFOUJRVThzU1VGQlNTeFhRVUZUTEUxQlFVMHNRMEZCUXl4RFFVRkRPMEZCUTNCRUxGZEJRVTg3UVVGQlFTeEZRVU5ZTzBGQlEwbzdRVUZQVHl4SlFVRk5MRmRCUVZjc1NVRkJTU3hOUVVGTkxHbENRVUYzUWp0QlFVRkJMRVZCUTNSRUxFOUJRVThzUTBGQlF5eEpRVUZKTEVsQlFVa3NVMEZCVXl4SlFVRkpMR2RDUVVGblFpeExRVUZMTEVOQlFVTXNRMEZCUXp0QlFVTjRSQ3hEUVVGRE8wRkJUVTBzU1VGQlRTeEZRVUZGTEU5QlFVOHNTVUZCU1R0QlFVTXhRaXhKUVVGUExHMUNRVUZST3pzN1FVazVUbElzU1VGQlRTeHZRa0ZCYjBJc1QwRkJUeXgzUWtGQmQwSTdRVUZEZWtRc1NVRkJUU3hqUVVGakxFOUJRVThzZDBKQlFYZENPMEZCUlc1RUxGTkJRVk1zWTBGQll5eFBRVUZqTzBGQlEzaERMRmRCUVZNc1lVRkJZU3hOUVVGaE8wRkJReTlDTEZGQlFVa3NTVUZCU1R0QlFVTlNMRmRCUVU4c1RVRkJUVHRCUVVGQkxFMUJRVWtzVjBGQlV5eHBRa0ZCYVVJc2EwSkJRM0pETEV0QlFVc3NSMEZCUnl4SlFVTlNPMEZCUVVFc1NVRkRUanRCUVVGQkxFVkJRMG83UVVGRlFTeFJRVUZOTEZkQlFWY3NUVUZCVFN4UFFVRlBMRTlCUVVzc1lVRkJZU3hsUVVGUE8wRkJSWFpFTEUxQlFVa3NVMEZCVXl4WFFVRlhPMEZCUTNCQ0xGZEJRVTg3UVVGRldDeE5RVUZKTEZOQlFWTXNWMEZCVnp0QlFVTndRaXhYUVVGUExGTkJRVk1zUTBGQlF5eEZRVUZGTEVkQlFVY3NVMEZCVXp0QlFVVnVReXhUUVVGUExHbENRVUZUTEU5QlFVOHNWVUZCVlN4VFFVRlRMRVZCUVVVN1FVRkRhRVE3UVVGRlR5eFRRVUZUTEZGQlFWRXNTMEZCVlN4TlFVRmpMRTlCUVZrN1FVRkRlRVFzVFVGQlNUdEJRVU5CTEZWQlFVMHNVMEZCVXl4UFFVRlBMRk5CUVZNc1NVRkJTU3hEUVVGRE8wRkJRM0JETEZGQlFVa3NUMEZCVHl4SlFVRkpMRTFCUVUwc1RVRkJUVHRCUVVOMlFpeGhRVUZQTEVsQlFVa3NUVUZCVFN4RlFVRkZMRXRCUVVzN1FVRkZOVUlzVjBGQlVTeEpRVUZKTEVsQlFVa3NTVUZCU1R0QlFVRkJMRVZCUTNoQ0xGTkJRVk1zVDBGQlR6dEJRVU5hTEZsQlFWRXNUVUZCVFN3eVFrRkJNa0lzU1VGQlNTeFJRVUZSTEVkQlFVY3NTMEZCU3l4TFFVRkxPMEZCUVVFc1JVRkRkRVU3UVVGRFNqdEJRVTFQTEZOQlFWTXNTMEZEV2l4UlFVTkJMRkZCUTBFc2EwSkJRMEVzVlVGRFJqdEJRVU5GTEUxQlFVa3NUMEZCVHl4UFFVRlBMRmxCUVZrc1kwRkJZeXhWUVVGVk8wRkJRMnhFTEZWQlFVMHNTMEZCU3l4UFFVRlBMRkZCUVZFc2EwSkJRV3RDTEVOQlFVTXNUVUZCVnl4VFFVRnZRanRCUVVONFJTeGhRVUZQTEZOQlFWTXNVVUZCVVN4SFFVRkhMRWxCUVVrN1FVRkJRU3hKUVVOdVF5eERRVUZETzBGQlEwUXNWMEZCVHl4UlFVRlJMRmRCUVZjc1RVRkJUVHRCUVVNMVFpeE5RVUZETEU5QlFVOHNWMEZCZVVNc1JVRkJSVHRCUVVGQkxFbEJRM1pFTEVOQlFVTTdRVUZCUVN4RlFVTk1MRmRCUVZjc1QwRkJUeXhQUVVGUExHTkJRV01zWTBGQll5eFBRVUZQTEhGQ1FVRnhRaXhaUVVGWk8wRkJRM3BHTEZWQlFVMHNVVUZCVVN4UFFVRlBMRlZCUVZVc1NVRkJTU3hUUVVGdlFqdEJRVU51UkN4MVFrRkJhVUlzVVVGQlVTeEhRVUZITEVsQlFVazdRVUZCUVN4SlFVTndReXhEUVVGRE8wRkJRMFFzVjBGQlR5eFJRVUZSTEZkQlFWY3NTMEZCU3p0QlFVRkJMRVZCUTI1RE8wRkJRMG83UVVGRlR5eFRRVUZUTEZWQlFYRkdMRkZCUVdkQ0xGRkJRV0U3UVVGRk9VZ3NUVUZCU1N4RlFVRkZMRTlCUVU4c1QwRkJUeXhYUVVGWExFTkJRVU1zUjBGQlJ5eEhRVUZITEUxQlFVMHNTVUZCU1R0QlFVVm9SQ3hOUVVGSkxHOUNRVUZ2UWl4cFFrRkJVenRCUVVNM1FpeGxRVUZYTEVOQlFVTXNVVUZCVVR0QlFVRkJMRVZCUTNoQ08wRkJSVUVzVFVGQlNTeFBRVUZQTzBGQlExQXNZVUZCVXl4UlFVRlJMRXRCUVVzN1FVRkJRU3hGUVVNeFFqdEJRVWRCTEdGQlFWY3NRMEZCUXl4TFFVRkxMRXRCUVVzc1MwRkJTeXhQUVVGUExGRkJRVkVzUzBGQlN5eEhRVUZITzBGQlF6bERMRkZCUVVrc1ZVRkJWU3hSUVVGWE8wRkJRM0pDTEdGQlFVOHNUVUZCVFN4SFFVRkhPMEZCUVVFc1NVRkRjRUk3UVVGQlFTeEZRVU5LTzBGQlIwRXNVVUZCVFN4WFFVRXdReXhQUVVNelF5eExRVUZMTEV0QlFVc3NSVUZEVml4UFFVRlBMRU5CUVVNc1MwRkJWU3hUUVVGVE8wRkJRM2hDTEZGQlFVa3NUVUZCVFN4SlFVRkpMR0ZCUVdFc2FVSkJRVk03UVVGRGFFTXNXVUZCVFN4VlFVRlZMRTFCUVUwc1NVRkJTVHRCUVVNeFFpeGhRVUZQTEUxQlFVMHNTVUZCU1R0QlFVTnFRaXhoUVVGUExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNUVUZCVFN4UFFVRlBMRU5CUVVNN1FVRkJRU3hKUVVOdVF6dEJRVU5CTEZkQlFVODdRVUZCUVN4RlFVTllMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJSMVFzVVVGQlRTeGhRVUYzUkN4UFFVTjZSQ3hMUVVGTExFdEJRVXNzUlVGRFZpeFBRVUZQTEVOQlFVTXNTMEZCVlN4UlFVRlJPMEZCUTNaQ0xGRkJRVWtzU1VGQlNTeFhRVUZYTEVsQlFVa3NSMEZCUnp0QlFVTjBRaXhaUVVGTkxFMUJRVTBzVTBGQlV5eEhRVUZITEVWQlFVVXNUVUZCVFN4SFFVRkhMRVZCUVVVc1RVRkJUU3hEUVVGRExFVkJRVVVzUzBGQlN5eEhRVUZITzBGQlEzUkVMRmxCUVUwc1ZVRkJWU3hOUVVGTkxFZEJRVWM3UVVGRGVrSXNZVUZCVHl4TlFVRk5MRWRCUVVjN1FVRkRhRUlzWVVGQlR5eERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRMRXRCUVVzc1QwRkJUeXhEUVVGRE8wRkJRVUVzU1VGRGJFTTdRVUZEUVN4WFFVRlBPMEZCUVVFc1JVRkRXQ3hIUVVGSExFTkJRVU1zUTBGQlF6dEJRVWRVTEZGQlFVMHNhVUpCUVdsQ0xHTkJRV01zVTBGQlV5eExRVUZMTEZGQlFWRXNRMEZCUXp0QlFVTTFSQ3hOUVVGSkxEQkNRVUV3UWl4cFFrRkJVenRCUVVOdVF5eFhRVUZQTEZkQlFWY3NSVUZCUlN4bFFVRmxMRWxCUVVrc1EwRkJRenRCUVVONFF5eFhRVUZQTEZGQlFWRXNWMEZCVnl4bFFVRmxMRlZCUVZVc1EwRkJReXhOUVVGTk8wRkJRM1JFTEdGQlFVOHNWMEZCVnl4RlFVRkZMRU5CUVVNN1FVRkJRU3hKUVVONlFpeERRVUZETEVOQlFVTTdRVUZCUVN4RlFVTk9MRTlCUVU4N1FVRkRTQ3hSUVVGSkxHVkJRV1VzVTBGQlV5eEhRVUZITzBGQlF6TkNMR0ZCUVU4c1YwRkJWeXhGUVVGRkxHTkJRV003UVVGQlFTeEpRVU4wUXp0QlFVRkJMRVZCUTBvN1FVRkhRU3hoUVVGWExFTkJRVU1zVVVGQlVTeFJRVUZSTEV0QlFVc3NXVUZCV1R0QlFVTjZReXhWUVVGTkxFMUJRVTBzVDBGQlR5eFhRVUZYTEZGQlFWRXNTVUZEYUVNc1QwRkJUeXhSUVVGUkxFdEJRVXNzU1VGQlNTeEpRVU40UWp0QlFVVk9MRkZCUVVrc1QwRkJUeXhoUVVGaExGbEJRVms3UVVGRGFFTXNZVUZCVHl4UlFVRlJMRXRCUVVzc1VVRkJVVHRCUVVGQkxFbEJRMmhETEU5QlFVODdRVUZEU0N4aFFVRlBMRkZCUVZFc1MwRkJTeXhOUVVGTkxGVkJRVlVzVVVGQlVTeEZRVU4yUXl4TFFVRkxMRXRCUVVzc1JVRkJSU3hOUVVGTkxGRkJRVkVzUzBGQlN5eERRVUZETzBGQlFVRXNTVUZEZWtNN1FVRkJRU3hGUVVOS08wRkJSMEVzWVVGQlZ5eERRVUZETEUxQlFVMHNUMEZCVHl4TFFVRkxMRlZCUVZVN1FVRkRjRU1zVVVGQlNTeFRRVUZUTEZkQlFWY3NVMEZCVXl4WlFVRlpPMEZCUTNwRExHRkJRVThzVVVGQlVTeFhRVUZYTEZGQlFWRXNWVUZCVlN4RFFVRkRMRTFCUVZjN1FVRkRjRVFzWlVGQlR5eFhRVUZYTEVWQlFVVXNRMEZCUXp0QlFVRkJMRTFCUTNwQ0xFTkJRVU1zUTBGQlF6dEJRVUZCTEVsQlEwNDdRVUZEUVN4WFFVRlBMRkZCUVZFc1YwRkJWeXhSUVVGUkxGVkJRVlVzUTBGQlF5eE5RVUZYTzBGQlEzQkVMR05CUVZFc1VVRkJVU3hOUVVGTkxFTkJRVU03UVVGQlFTeEpRVU16UWl4RFFVRkRMRU5CUVVNN1FVRkRSaXhaUVVGUkxGRkJRVkVzVFVGQlRTeFJRVUZSTEVsQlFVa3NRMEZCUXp0QlFVRkJMRVZCUTNaRE8wRkJSMEVzWVVGQlZ5eERRVUZETEV0QlFVc3NTMEZCU3l4TFFVRkxMRTlCUVU4c1VVRkJVU3hMUVVGTExFZEJRVWM3UVVGRE9VTXNVVUZCU1N4VlFVRlZMRkZCUVZjN1FVRkRja0lzWVVGQlR5eE5RVUZOTEVkQlFVYzdRVUZCUVN4SlFVTndRanRCUVVGQkxFVkJRMG83UVVGRlFTeFRRVUZQTEU5QlFVOHNVVUZCVVN4TFFVRkxPMEZCUXpOQ0xGVkJRVkVzVFVGQlRUdEJRVU5rTEZOQlFVODdRVUZEV0R0QlFVVkJMRk5CUVZNc1owSkJRV2RDTEUxQlFYVkRPMEZCUXpWRUxGTkJRVThzUTBGQlF5eFBRVUZQTEU5QlFVOHNUVUZCVFN4WFFVRlhPMEZCUXpORE8wRkJSVThzVTBGQlV5eEpRVU5hUXl4UlFVTkJMRTFCUTBFc1JVRkJSU3hWUVVGVkxFZEJRVWNzVFVGQlRTeEhRVU4yUWp0QlFVTkZMR1ZCUVdFc1EwRkJRenRCUVVWa0xFMUJRVWtzUTBGQlF5eE5RVUZOTEZGQlFWRXNVVUZCVVR0QlFVTjJRaXhsUVVGWExFTkJRVU1zVVVGQlVUdEJRVVY0UWl4aFFVRlhMRk5CUVZNc1QwRkJUeXhQUVVGUE8wRkJSV3hETEUxQlFVa3NVMEZCVXl4WFFVRlhPMEZCUTNCQ0xGVkJRVTBzVVVGQlVTeFRRVUZUTEVOQlFVTTdRVUZCUVN4WFFVTnVRaXhUUVVGVExGTkJRVk03UVVGRGRrSXNWVUZCVFN4WFFVRlhPMEZCUlhKQ0xFMUJRVWtzVDBGQlR5eFRRVUZUTEZWQlFWVTdRVUZETVVJc1VVRkJTU3huUWtGQlowSkJMRTlCUVUwc1NVRkJTU3hEUVVGRE8wRkJRek5DTEdGQlFVOUJMRTlCUVUwc1NVRkJTU3hGUVVGRkxFdEJRVXM3UVVGRk5VSXNWMEZCVHl4SlFVRkpRU3hQUVVGTkxFbEJRVWtzUlVGQlJTeExRVUZMTzBGQlFVRXNSVUZEYUVNN1FVRkZRU3hOUVVGSkxHZENRVUZuUWl4SlFVRkpPMEZCUTNCQ0xGZEJRVThzUzBGQlN5eExRVUZMTzBGQlJYSkNMRk5CUVU4c1NVRkJTU3hMUVVGTExFdEJRVXM3UVVGRGVrSTdPenRCUXk5TVFTeFBRVUZQUXl4WlFVRlhPMEZCUTJ4Q0xFOUJRVThzVTBGQlV6dEJRVVZvUWl4UFFVRlBMR0ZCUVdFN1FVRk5UQ3hUUVVGU0xGTkJSVXdzUzBGQlVTeFZRVUZWTEVsQlFVa3NUVUZCVFR0QlFVRkJMRVZCUXpGQ0xFMUJRVTBzWlVGQlpTeEpRVUZKTzBGQlFVRXNTVUZEY2tJc1NVRkJTU3hOUVVGak8wRkJRVVVzWVVGQlQwTXNUMEZCVFN4bFFVRmxMRWxCUVVrN1FVRkJRU3hKUVVGRk8wRkJRVUVzU1VGRGRFUXNTVUZCU1N4SlFVRkpMRXRCUVdFN1FVRkJSU3hOUVVGQlFTeFBRVUZOTEdWQlFXVXNUVUZCVFN4SFFVRkhPMEZCUVVFc1NVRkJSVHRCUVVGQkxFbEJRM1pFTEZWQlFXdENPMEZCUVVVc1lVRkJUeXhMUVVGTE8wRkJRVUVzU1VGQlNUdEJRVUZCTEVsQlEzQkRMRkZCUVZFc1MwRkJZVHRCUVVGRkxGZEJRVXNzVFVGQlRUdEJRVUZCTEVsQlFVazdRVUZCUVN4SlFVVjBReXhKUVVGSkxGbEJRVzlDTzBGQlFVVXNZVUZCVDBFc1QwRkJUU3gxUWtGQmRVSXNTVUZCU1N4RlFVRkZMRXRCUVVzc1IwRkJSenRCUVVGQkxFbEJRVVU3UVVGQlFTeEpRVU01UlN4SlFVRkpMRlZCUVZVc1YwRkJiVUk3UVVGQlJTeE5RVUZCUVN4UFFVRk5MSFZDUVVGMVFpeE5RVUZOTEZWQlFWVXNUVUZCVFN4TFFVRkxMRU5CUVVNN1FVRkJRU3hKUVVGRk8wRkJRVUVzU1VGRE9VWXNhVUpCUVhsQ08wRkJRVVVzWVVGQlR5eExRVUZMTzBGQlFVRXNTVUZCVlR0QlFVRkJMRWxCUTJwRUxHVkJRV1VzVjBGQmJVSTdRVUZCUlN4WFFVRkxMRmxCUVZrN1FVRkJRU3hKUVVGVk8wRkJRVUVzU1VGRkwwUXNTVUZCU1N4VFFVRnBRanRCUVVGRkxHRkJRVTlCTEU5QlFVMHNhMEpCUVd0Q0xFbEJRVWs3UVVGQlFTeEpRVUZaTzBGQlFVRXNTVUZEZEVVc1NVRkJTU3hQUVVGUExGRkJRV2RDTzBGQlFVVXNUVUZCUVVFc1QwRkJUU3hyUWtGQmEwSXNUVUZCVFN4TlFVRk5PMEZCUVVFc1NVRkJSVHRCUVVGQkxFbEJRMjVGTEdGQlFYRkNPMEZCUVVVc1lVRkJUeXhMUVVGTE8wRkJRVUVzU1VGQlR6dEJRVUZCTEVsQlF6RkRMRmRCUVZjc1VVRkJaMEk3UVVGQlJTeFhRVUZMTEZOQlFWTTdRVUZCUVN4SlFVRlBPMEZCUVVFc1NVRkZiRVFzU1VGQlNTeGxRVUYzUWp0QlFVRkZMR0ZCUVU5QkxFOUJRVTBzZVVKQlFYbENMRWxCUVVrN1FVRkJRU3hKUVVGRk8wRkJRVUVzU1VGRE1VVXNTVUZCU1N4aFFVRmhMR05CUVhWQ08wRkJRVVVzVFVGQlFVRXNUMEZCVFN4NVFrRkJlVUlzVFVGQlRTeFpRVUZaTzBGQlFVRXNTVUZCUlR0QlFVRkJMRWxCUXpkR0xHOUNRVUUyUWp0QlFVRkZMR0ZCUVU4c1MwRkJTenRCUVVGQkxFbEJRV0U3UVVGQlFTeEpRVU40UkN4clFrRkJhMElzWTBGQmRVSTdRVUZCUlN4WFFVRkxMR1ZCUVdVN1FVRkJRU3hKUVVGaE8wRkJRVUVzU1VGSE5VVXNTVUZCU1N4dlFrRkJOa0k3UVVGQlJTeGhRVUZQTEV0QlFVc3NhVUpCUVdsQ08wRkJRVUVzU1VGQlJUdEJRVUZCTEVsQlEyeEZMRWxCUVVrc2EwSkJRV3RDTEU5QlFXZENPMEZCUVVVc1YwRkJTeXhwUWtGQmFVSXNTVUZCU1R0QlFVRkJMRWxCUVUwN1FVRkJRU3hKUVVWNFJTeEpRVUZKTEZsQlFWa3NRMEZCUXl4UlFVRlJMRXRCUVVzc1IwRkJaMEk3UVVGQlJTeFhRVUZMTEc5Q1FVRnZRaXhSUVVGUkxFdEJRVXM3UVVGQlFTeEpRVUZGTzBGQlFVRXNTVUZEZUVZc2FVSkJRV2xDTEdGQlFUQkNPMEZCUVVVc1YwRkJTeXhqUVVGak8wRkJRVUVzU1VGQldUdEJRVUZCTEVsQlJXeEZMR05CUVdsRE8wRkJRM1pETEZWQlFVa3NaMEpCUVdkQ0xFbEJRVWtzUzBGQlN6dEJRVU42UWl4bFFVRlBMRXRCUVVzc1ZVRkJWU3hKUVVGSkxFTkJRVU1zUzBGQlN5eFZRVUZWTEVOQlFVVXNTVUZCU1N4RFFVRkRPMEZCUVVFc1RVRkRja1FzVjBGQlZ5eG5Ra0ZCWjBJc1NVRkJTU3hYUVVGWE8wRkJRM1JETEdWQlFVOHNTMEZCU3l4aFFVRmhPMEZCUVVFc1RVRkROMEk3UVVGRFFTeGhRVUZQTEVOQlFVTTdRVUZCUVN4SlFVTmFPMEZCUVVFc1NVRkZWU3haUVVGWkxGVkJRV2xDTzBGQlEyNURMR2xDUVVGWExGTkJRVk1zUzBGQlN5eFJRVUZSTEVWQlFVVXNTVUZCU1N4UlFVRk5MR05CUVdNc1NVRkJTU3hUUVVONlJDeExRVU5CTEVsQlFVa3NTVUZCU1N4TlFVRk5MRVZCUVVVc1UwRkJVeXhOUVVGTkxFOUJRVThzVDBGQlR5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUlhwRUxGVkJRVWtzWjBKQlFXZENMRWxCUVVrc1YwRkJWenRCUVVNdlFpeHRRa0ZCVnl4TlFVRk5PMEZCUTJJc1pVRkJTeXhKUVVGSkxFVkJRVVU3UVVGQlFTeE5RVU51UWl4UFFVRlBPMEZCUTBnc1kwRkJUU3hOUVVGTkxESkNRVUV5UWl4TFFVRkxMRmxCUVZrc1NVRkJTU3hGUVVGRk8wRkJRVUVzVFVGRGJFVTdRVUZCUVN4SlFVTktPMEZCUVVFc1NVRkZRU3hEUVVGRExGZEJRVmNzUlVGQlJTeFZRVUZwUWp0QlFVVXpRaXhWUVVGSkxHZENRVUZuUWl4SlFVRkpMRmRCUVZjN1FVRkRMMElzYlVKQlFWY3NUVUZCVFN4TFFVRkxMRmxCUVZrc1IwRkJSenRCUVVOcVF5eGxRVUZMTEU5QlFVOHNSVUZCUlR0QlFVTmtMR05CUVVrc1EwRkJReXhUUVVGVExGTkJRVk1zUlVGQlJTeExRVUZMTEVOQlFVTXNTMEZCU3p0QlFVTm9ReXhuUWtGQlNTeFJRVUZSTzBGQlFVRXNVVUZEY0VJN1FVRkJRU3hOUVVOS08wRkJSMEVzVjBGQlN5eFpRVUZaTEZGQlFWRTdRVUZCUVN4SlFVTTNRanRCUVVGQkxFbEJSVUVzWjBKQlFXZENMRWxCUVZrc1QwRkJUeXhOUVVGTk8wRkJRM0pETEUxQlFVRkJMRTlCUVUwc2VVSkJRWGxDTEUxQlFVMHNTVUZCU1N4SlFVRkpPMEZCUVVFc1NVRkRha1E3UVVGQlFTeEpRVmRCTEV0QlEwa3NVVUZEUVN4clFrRkRRU3hWUVVOR08wRkJRMFVzVjBGQlN5eE5RVUZOTEZGQlFWRXNhMEpCUVd0Q0xGRkJRVkU3UVVGRE4wTXNZVUZCVHp0QlFVRkJMRWxCUTFnN1FVRkJRU3hKUVVWQkxHVkJRV1VzVVVGQlpUdEJRVU14UWl4WlFVRk5PMEZCUTA0c1dVRkJUU3hSUVVGUkxFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZETlVJc1dVRkJUU3haUVVGWk8wRkJRMnhDTEdkQ1FVRlZMRTFCUVUwc1MwRkJTenRCUVVGQkxFbEJRM3BDTzBGQlFVRXNSVUZEU2p0QlFVVkJMRlZCUVZFc1kwRkJZenRCUVVGQkxFbEJRMnhDTEZkQlFWY3NVMEZCVXl4UFFVRlBPMEZCUVVFc1NVRkRNMElzV1VGQldUdEJRVUZCTEUxQlExSXNZMEZCWXl4UlFVRlJMRlZCUVZVN1FVRkJRU3hSUVVNMVFqdEJRVUZCTEZGQlFXTTdRVUZCUVN4UlFVRkpPMEZCUVVFc1VVRkJTU3hSUVVGUkxGZEJRVmM3UVVGQlFTeFJRVUZYTzBGQlFVRXNUVUZEZUVRN1FVRkJRU3hOUVVOQkxFOUJRVThzVVVGQlVTeFZRVUZWTzBGQlFVRXNVVUZEY2tJN1FVRkJRU3hSUVVGUE8wRkJRVUVzVVVGQlNUdEJRVUZCTEZGQlFVa3NVVUZCVVN4WFFVRlhPMEZCUVVFc1VVRkJWenRCUVVGQkxFMUJRMnBFTzBGQlFVRXNUVUZEUVN4VlFVRlZMRkZCUVZFc1ZVRkJWVHRCUVVGQkxGRkJRM2hDTzBGQlFVRXNVVUZCVlR0QlFVRkJMRkZCUVVrN1FVRkJRU3hSUVVGSkxGRkJRVkVzVjBGQlZ6dEJRVUZCTEZGQlFWYzdRVUZCUVN4TlFVTndSRHRCUVVGQkxFMUJRMEVzYVVKQlFXbENMRkZCUVZFc1ZVRkJWVHRCUVVGQkxGRkJReTlDTzBGQlFVRXNVVUZCYVVJN1FVRkJRU3hSUVVGSk8wRkJRVUVzVVVGQlNTeFJRVUZSTEZkQlFWYzdRVUZCUVN4UlFVRlhPMEZCUVVFc1RVRkRNMFE3UVVGQlFTeE5RVU5CTEhWQ1FVRjFRaXhSUVVGUkxGVkJRVlU3UVVGQlFTeFJRVU55UXp0QlFVRkJMRkZCUVhWQ08wRkJRVUVzVVVGQlNUdEJRVUZCTEZGQlFVa3NVVUZCVVN4WFFVRlhPMEZCUVVFc1VVRkJWenRCUVVGQkxFMUJRMnBGTzBGQlFVRXNTVUZEU2p0QlFVRkJMRVZCUTBvc1IwRkJSeXhOUVVGTk8wRkJSVlFzVTBGQlR6dEJRVU5ZT3pzN1FVTnFTVUVzVDBGQlQwTXNWVUZCVXp0QlFVTm9RaXhQUVVGUFF5eFpRVUZYT3pzN1FVTkxiRUlzU1VGQlRVTXNXVUZCVnl4RFFVRkRMRkZCUVdkQ0xFbEJRemRDTEZGQlFWRXNiVUpCUVcxQ0xFOUJRVThzUlVGRGJFTXNWMEZCVnl4TFFVRkxMRWRCUVVjc1JVRkRia0lzV1VGQldUdEJRVVZxUWl4bFFVRmxMRk5CUVZrc1MwRkJPRUpETEZGQlFYVkNPMEZCUXpWRkxGTkJRVThzU1VGQlNTeExRVUZMTEU5QlFVdEJMRTlCUVUwc1JVRkJSU3hQUVVGUExFTkJRVU1zUlVGQlJTeE5RVUZOTEUxQlFVMHNUVUZCVFR0QlFVTTNSRHRCUVVWQkxGTkJRVk1zVFVGQmQwSXNUMEZCVlN4TlFVRm5RenRCUVVOMlJTeFRRVUZQTEdWQlFXVXNUMEZCVHl4TlFVRk5PMEZCUVVFc1NVRkRMMElzVFVGQlRUdEJRVUZGTEdGQlFVOHNTMEZCU3l4UFFVRlBSQ3hWUVVGVExFbEJRVWtzUTBGQlF5eEZRVUZGTEVWQlFVVTdRVUZCUVN4SlFVRkZPMEZCUVVFc1JVRkRia1FzUTBGQlF6dEJRVU5NTzBGQlJVRXNUVUZCVFN4VFFVRlRMRTlCUVU4c1owSkJRV2RDTEVkQlFVY3NRMEZCUXl4RlFVRkZMRTFCUVUwc1dVRkJXU3hOUVVGTk8wRkJRMmhGTEZGQlFVMHNTMEZCU3l4WFFVRlhMRTFCUVUwN1FVRkROVUlzVVVGQlRTeFpRVUZaTEZkQlFWY3NWVUZCVlR0QlFVTjJReXhSUVVGTkxGbEJRVmtzVjBGQlZ5eFpRVUZaTzBGQlF6ZERMRU5CUVVNN1FVRkZSQ3hOUVVGTkxGTkJRVk1zVDBGQlR5eHRRa0ZCYlVJc1IwRkJSeXhEUVVGRExFVkJRVVVzVDBGQlR5eE5RVUZOTzBGQlEzaEVMRkZCUVUwc1QwRkJUeXhYUVVGWExGTkJRVk03UVVGRGNrTXNRMEZCUXp0QlFVVkVMRTFCUVUwc1UwRkJVeXhQUVVGUExIRkNRVUZ4UWl4SFFVRkhMRU5CUVVNc1JVRkJSU3hUUVVGVExGZEJRVUZGTEZsQlFWY3NUMEZCVHl4TlFVRk5PMEZCUXpsRkxGRkJRVTBzVVVGQlVTeFhRVUZYTEU5QlFVODdRVUZEYUVNc1VVRkJUVUVzVjBGQlZTeFhRVUZYTEZWQlFWVTdRVUZEY2tNc1VVRkJUVUVzVjBGQlZTeFhRVUZYTEZOQlFWTTdRVUZEY0VNc1VVRkJUU3hQUVVGUExGZEJRVmNzVDBGQlR6dEJRVU51UXl4RFFVRkRPMEZCUlVRc1RVRkJUU3hUUVVGVExFOUJRVThzYjBKQlFXOUNMRWRCUVVjc1EwRkJReXhGUVVGRkxGVkJRVUZETEZkQlFWVXNVMEZCVXl4VlFVRlZMRTFCUVUwN1FVRkRMMFVzVVVGQlRVRXNWVUZCVXl4WFFVRlhMRTlCUVU4N1FVRkRha01zVVVGQlRVRXNWVUZCVXl4WFFVRlhMRlZCUVZVN1FVRkRjRU1zVVVGQlRVRXNWVUZCVXl4WFFVRlhMRmxCUVZrN1FVRkRkRU1zVVVGQlRVRXNWVUZCVXl4WFFVRlhMRk5CUVZNN1FVRkRia01zVVVGQlRTeFJRVUZSTEZkQlFWY3NaMEpCUVdkQ08wRkJRM3BETEZGQlFVMHNVVUZCVVN4WFFVRlhMR2xDUVVGcFFqdEJRVU14UXl4UlFVRk5MRlZCUVZVc1YwRkJWeXhUUVVGVE8wRkJRM2hETEVOQlFVTTdRVUZGUkN4TlFVRk5MRk5CUVZNc1QwRkJUeXhwUWtGQmFVSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1QwRkJRVU1zVVVGQlR5eFBRVUZQTEUxQlFVMDdRVUZETjBRc1VVRkJUVUVzVDBGQlRTeFhRVUZYTEZOQlFWTTdRVUZEYUVNc1VVRkJUU3hQUVVGUExGZEJRVmNzZFVKQlFYVkNPMEZCUXk5RExGRkJRVTBzVDBGQlR5eFhRVUZYTEhGQ1FVRnhRanRCUVVNM1F5eFJRVUZOTEU5QlFVOHNWMEZCVnl4elFrRkJjMEk3UVVGRE9VTXNVVUZCVFN4UFFVRlBMRmRCUVZjc2IwSkJRVzlDTzBGQlF6VkRMRkZCUVUwc1QwRkJUeXhYUVVGWExGVkJRVlU3UVVGRGRFTXNRMEZCUXp0QlFVVkVMRTFCUVUwc1UwRkJVeXhQUVVGUExHMUNRVUZ0UWl4SFFVRkhMRU5CUVVNc1JVRkJSU3hMUVVGTExFMUJRVTA3UVVGRGRFUXNVVUZCVFN4TFFVRkxMRmRCUVZjc1pVRkJaVHRCUVVOeVF5eFJRVUZOTEV0QlFVc3NWMEZCVnl4alFVRmpPMEZCUTNoRExFTkJRVU03UVVGRlJDeE5RVUZOTEZOQlFWTXNUMEZCVHl4clFrRkJhMElzUjBGQlJ5eERRVUZETEVWQlFVVXNVVUZCUVVNc1UwRkJVU3hoUVVGaExFMUJRVTA3UVVGRGNrVXNVVUZCVFVFc1VVRkJUeXhYUVVGWExHVkJRV1U3UVVGRGRrTXNVVUZCVFN4aFFVRmhMRmRCUVZjc1UwRkJVenRCUVVNelF5eERRVUZETzBGQlJVUXNUVUZCVFN4VFFVRlRMRTlCUVU4c2VVSkJRWGxDTEVkQlFVY3NRMEZCUXl4RlFVRkZMR05CUVdNc1RVRkJUVHRCUVVOeVJTeFJRVUZOTEdOQlFXTXNWMEZCVnl4VFFVRlRPMEZCUXpWRExFTkJRVU03UVVGRlJDeE5RVUZOTEZOQlFWTXNUMEZCVHl4alFVRmpMRWRCUVVjc1EwRkJReXhGUVVGRkxFbEJRVUZETEV0QlFVa3NUMEZCVHl4TlFVRk5MRTFCUVUwN1FVRkROMFFzVVVGQlRVRXNTVUZCUnl4WFFVRlhMRmRCUVZjN1FVRkRMMElzVVVGQlRVRXNTVUZCUnl4WFFVRlhMRk5CUVZNN1FVRkROMElzVVVGQlRTeE5RVUZOTEZkQlFWY3NVMEZCVXp0QlFVTm9ReXhSUVVGTkxFMUJRVTBzVjBGQlZ5eFhRVUZYTzBGQlEyeERMRkZCUVUwc1RVRkJUU3hYUVVGWExHRkJRV0U3UVVGRGNFTXNVVUZCVFN4TlFVRk5MRmRCUVZjc1ZVRkJWVHRCUVVOcVF5eFJRVUZOTEUxQlFVMHNWMEZCVnl4VFFVRlRPMEZCUTJoRExGRkJRVTBzVFVGQlRTeFhRVUZYTEZOQlFWTTdRVUZEYUVNc1VVRkJUU3hOUVVGTkxGZEJRVmNzVjBGQlZ6dEJRVU5zUXl4UlFVRk5MRTFCUVUwc1YwRkJWeXhQUVVGUE8wRkJRemxDTEZGQlFVMHNUVUZCVFN4WFFVRlhMRk5CUVZNN1FVRkRhRU1zVVVGQlRTeE5RVUZOTEZkQlFWY3NVMEZCVXp0QlFVTndReXhEUVVGRE96czdRVU51UmtRc1UwRkJVeXd5UWtGQk1rSTdRVUZEY0VNc1UwRkJVeXhOUVVGTkxHMUNRVUZ0UWp0QlFVTnNReXhQUVVGUExGRkJRVkU3UVVGRFppeFBRVUZQUXl4alFVRmhPMEZCZDBOaUxGTkJRVk1zVFVGQlRTeExRVUZyUWp0QlFVTndReXhUUVVGUExFbEJRVXNzVFVGQlRTeG5Ra0ZCWjBJc1NVRkJTVHRCUVVGQkxFbEJRMnhETEU5QlFVODdRVUZCUlN4TlFVRkJRU3hUUVVGUkxHTkJRV01zUlVGQlJTeFhRVUZYTEZWQlFWVXNSMEZCUnl4SlFVRlhPMEZCUVVFc1NVRkJSVHRCUVVGQkxFbEJSWFJGTEV0QlFVc3NUVUZCTkVJN1FVRkROMElzWVVGQlR5eEpRVUZKTEZGQlFWRXNRMEZCUXl4TFFVRkxMRkZCUVZFN1FVRkROMElzV1VGQlNUdEJRVU5CTEdkQ1FVRk5MRXRCUVVzc1UwRkJVenRCUVVGQkxEQkNRVU5rTEV0QlFVc3NVMEZCVXl4SFFVRkhMRWxCUVVrc1QwRkJUeXhWUVVGVkxFbEJRVWtzUjBGQlJ6dEJRVUZCTEhWQ1FVTm9SRHRCUVVOSUxHRkJRVWNzUlVGQlJTeEZRVUZGTEV0QlFVc3NSMEZCUnl4RlFVRkZMRTFCUVUwc1IwRkJSenRCUVVGQkxGRkJRemxDTEZOQlFWTXNUMEZCVHp0QlFVTmFMR05CUVVrc1MwRkJTenRCUVVGQkxGRkJRMkk3UVVGQlFTeE5RVU5LTEVOQlFVTTdRVUZCUVN4SlFVTk1PMEZCUVVFc1NVRkpRU3hqUVVGakxFdEJRV0VzVFVGQmEwTTdRVUZEZWtRc1ZVRkJTU3hQUVVGUExFdEJRVXNzYlVKQlFXMUNMRmxCUVZrN1FVRkRNME1zWVVGQlN5eGxRVUZsTEV0QlFVc3NRMEZCUXl4aFFVRmhPMEZCUTI1RExHRkJRVWM3UVVGQlFTeFpRVUZYTzBGQlFVRXNXVUZCVFN4UFFVRlBMRkZCUVZFN1FVRkJRU3haUVVGSExFTkJRVU1zUjBGQlJ5eFJRVU4wUXl4SFFVRkhMR3RDUVVGclFpeEhRVUZITzBGQlFVRXNWVUZETlVJN1FVRkJRU3hSUVVOS0xFTkJRVU03UVVGQlFTeE5RVU5NTEU5QlFVODdRVUZEU0N4alFVRk5MR05CUVdNc1MwRkJTeXhKUVVGSk8wRkJRVUVzVFVGRGFrTTdRVUZCUVN4SlFVTktPMEZCUVVFc1NVRkZRU3hWUVVGVkxFOUJRV1VzVVVGQlVTeFBRVUZQTzBGQlEzQkRMRmxCUVUwc1ZVRkJWU3hQUVVGUExFdEJRVXM3UVVGQlFTeEpRVU5vUXp0QlFVRkJMRWxCUlVFc1MwRkJTeXhOUVVGeFFqdEJRVU4wUWl4WlFVRk5MRXRCUVVzN1FVRkRXQ3hYUVVGTExGRkJRVkVzUTBGQlF6dEJRVUZCTEVsQlEyeENPMEZCUVVFc1NVRkZRU3hOUVVGTkxFVkJRVVVzWjBKQlFXZENMRXRCUVVzc1RVRkJUU3hOUVVGTkxGRkJRVkVzVDBGQlR5eEhRVUZITEVsQlFVa3NTVUZCV1N4RFFVRkRMRWRCUVVjN1FVRkRNMFVzV1VGQlRTeE5RVUZOTzBGQlJWb3NhVUpCUVZjc1RVRkJUVHRCUVVOaUxHTkJRVTBzYlVKQlFXMUNMRWxCUVVrc1dVRkJXU3h0UWtGQmJVSTdRVUZETlVRc1lVRkJTeXhEUVVGRE8wRkJRVUVzVFVGRFZqdEJRVVZCTEdGQlFVOHNUMEZCVHl4TlFVRk5MRWRCUVVjN1FVRkRka0lzTUVKQlFXOUNMRWxCUVVrc1dVRkJXVHRCUVVWd1F5eFhRVUZMTEdsQ1FVRnBRanRCUVVOMFFpeFZRVUZKTEZGQlFWRXNXVUZCV1N4TlFVRk5PMEZCUXpGQ0xHVkJRVThzUjBGQlJ5eFhRVUZYTzBGQlFVRXNUVUZEZWtJc1EwRkJRenRCUVVWRUxGVkJRVWs3UVVGRFFTeFpRVUZKTEdWQlFXVTdRVUZCUVN4TlFVTjJRaXhUUVVGVExFOUJRVTg3UVVGRFdpeGxRVUZQTEU5QlFVOHNVMEZCVHl4SFFVRkhMR0ZCUVdFc1NVRkJTU3hqUVVGakxFZEJRVWNzUjBGQlNTeEhRVUZITEZkQlFWYzdRVUZCUVN4TlFVTm9SanRCUVVWQkxGVkJRVWs3UVVGRFFTeGhRVUZMTEZWQlFWVXNTMEZCU3l4TFFVRkxPMEZCUlRkQ0xGVkJRVWs3UVVGRFFTeFpRVUZKTEZWQlFWVXNTMEZCU3p0QlFVVjJRaXhsUVVGVE8wRkJRMVFzVlVGQlNUdEJRVU5CTEZsQlFVa3NTMEZCU3p0QlFVVmlMRlZCUVVrc1UwRkJVeXhEUVVGRExFTkJRVU03UVVGQlFTeEpRVU51UWp0QlFVRkJMRVZCUTBvN1FVRkRTanM3TzBGR2JraEJReXhMUVVGSkxFdEJRVXNzU1VGQlNUdEJRVVZpTEVsQlFVOHNZMEZCVVN4TlFVRk5ReXhQUVVGTkxGZEJRVmM3T3p0QlIweDBReXhQUVVGUFF5eFpRVUZYTzBGQlEyeENMRTlCUVU5RExGVkJRVk03UVVGRGFFSXNUMEZCVDBNc1kwRkJZVHRCUVVkd1FpeFRRVUZUTEU5QlFVOHNWVUZCYVVJN1FVRkROMElzVTBGQlR5eFRRVUZUTEV0QlFVc3NVVUZCVVN4RlFVRkZMRWxCUVVrc1VVRkJUU3hqUVVGalF5eExRVUZKTEZOQlEzSkVMRXRCUTBFc1NVRkJTVUVzUzBGQlNTeE5RVUZOTEVWQlFVVXNVMEZCVXl4TlFVRk5MRTlCUVU4c1QwRkJUeXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETzBGQlF6ZEVPMEZCUjBFc1QwRkJUeXhsUVVGbFF5eFBRVUZOTEVsQlFVa3NWMEZCVnl4WlFVRlpPMEZCUVVFc1JVRkRia1FzVFVGQlRUdEJRVUZGTEZkQlFVOHNTMEZCU3l4aFFVRmhPMEZCUVVFc1JVRkJSVHRCUVVGQkxFVkJRMjVETEVsQlFVa3NSMEZCUnp0QlFVRkZMRk5CUVVzc1lVRkJZU3hEUVVGRE8wRkJRVUVzUlVGQlJUdEJRVU5zUXl4RFFVRkRPMEZCUjAwc1NVRkJUU3hOUVVGT0xHTkJRV3RDTEZOQlFWTkJMRTlCUVUwc1IwRkJSeXhGUVVGRk8wRkJRVUVzUlVGRGVrTXNUMEZCVHp0QlFVRkZMRWxCUVVGRExGTkJRVkVzWTBGQll5eEZRVUZGTEZkQlFWY3NUVUZCVFN4SFFVRkhMRWxCUVVrN1FVRkJRU3hGUVVGRk8wRkJRVUVzUlVGRE0wUXNXVUZCV1N4VlFVRnhRaXhWUVVGblF6dEJRVUZGTEZWQlFVMHNSVUZCUlN4VlFVRlZMRWRCUVVjc1RVRkJUU3hEUVVGUk8wRkJRVUVzUlVGQlJUdEJRVUZCTEVWQlF6bEdMRmxCUVZrc1ZVRkJkVUk3UVVGQlJTeFRRVUZMTEdGQlFXRXNUMEZCVHl4UlFVRlJMRU5CUVVNN1FVRkJRU3hGUVVGRk8wRkJRM1pHTzBGQlYwOHNTVUZCVFN4VFFVRk9MR05CUVhGQ0xGTkJRVk5FTEU5QlFVMHNUVUZCVFN4RlFVRkZPMEZCUVVFc1JVRkRMME1zVDBGQlR6dEJRVUZGTEVsQlFVRkRMRk5CUVZFc1kwRkJZeXhGUVVGRkxGZEJRVmNzVTBGQlV5eEhRVUZITEVsQlFVazdRVUZCUVN4RlFVRkZPMEZCUVVFc1JVRkRPVVFzV1VGQldTeFBRVUZ4UWl4UFFVRjFRanRCUVVGRkxGVkJRVTBzUlVGQlJTeFBRVUZQTEVkQlFVY3NUVUZCVFN4RFFVRlJPMEZCUVVFc1JVRkJSVHRCUVVOb1J6dEJRVWxQTEVsQlFVMHNXVUZCVGl4alFVRjNRaXhUUVVGVFJDeFBRVUZOTEZOQlFWTXNSVUZCUlR0QlFVRkJMRVZCUTNKRUxFOUJRVTg3UVVGQlJTeEpRVUZCUXl4VFFVRlJMR05CUVdNc1JVRkJSU3hYUVVGWExGbEJRVmtzUjBGQlJ5eEpRVUZKTzBGQlFVRXNSVUZCUlR0QlFVRkJMRVZCUTJwRkxGbEJRVmtzVlVGQk1rSXNWVUZCWjBNN1FVRkJSU3hWUVVGTkxFVkJRVVVzVlVGQlZTeEhRVUZITEUxQlFVMHNRMEZCVVR0QlFVRkJMRVZCUVVVN1FVRkJRU3hGUVVOd1J5eFpRVUZaTEZWQlFYVkNPMEZCUTNwRExGVkJRVTBzUzBGQlN5eFBRVUZQTEZGQlFWRTdRVUZETVVJc1UwRkJTeXhqUVVGakxFZEJRVWNzUTBGQlF5eExRVUZMTEVsQlFVbEdMRXRCUVVrN1FVRkRjRU1zVTBGQlN5eGxRVUZsTEVkQlFVY3NRMEZCUXl4TFFVRkxMRWxCUVVsQkxFdEJRVWs3UVVGRGNrTXNVMEZCU3l4WlFVRlpMRWRCUVVjc1EwRkJReXhMUVVGTExFbEJRVWxCTEV0QlFVazdRVUZCUVN4RlFVTjBRenRCUVVOS08wRkJTVThzU1VGQlRTeHRRa0ZCVGl4alFVRXJRaXhUUVVGVFF5eFBRVUZOTEdkQ1FVRm5RaXhGUVVGRk8wRkJRVUVzUlVGRGJrVXNUMEZCVHp0QlFVRkZMRWxCUVVGRExGTkJRVkVzWTBGQll5eEZRVUZGTEZkQlFWY3NiVUpCUVcxQ0xFZEJRVWNzU1VGQlNUdEJRVUZCTEVWQlFVVTdRVUZCUVN4RlFVTjRSU3haUVVGWkxFOUJRU3RDTEU5QlFYVkNPMEZCUVVVc1ZVRkJUU3hGUVVGRkxFOUJRVThzUjBGQlJ5eE5RVUZOTEVOQlFWRTdRVUZCUVN4RlFVRkZPMEZCUXpGSE8wRkJUVThzU1VGQlRTeGpRVUZPTEdOQlFUQkNMRk5CUVZOR0xFdEJRVWtzVjBGQlZ5eEZRVUZGTzBGQlFVRXNSVUZEZGtRc1QwRkJUenRCUVVGRkxFbEJRVUZGTEZOQlFWRXNZMEZCWXl4RlFVRkZMRmRCUVZjc1kwRkJZeXhIUVVGSExFbEJRVWs3UVVGQlFTeEZRVUZGTzBGQlFVRXNSVUZEYmtVc1dVRkJXU3hQUVVFd1FqdEJRVUZGTEZWQlFVMHNTMEZCV1R0QlFVRkJMRVZCUVVVN1FVRkRhRVU3UVVGUFR5eEpRVUZOTEZGQlFVNHNZMEZCYjBJc1UwRkJVMFlzUzBGQlNTeExRVUZMTEVWQlFVVTdRVUZCUVN4RlFVTXpReXhQUVVGUE8wRkJRVVVzU1VGQlFVVXNVMEZCVVN4alFVRmpMRVZCUVVVc1YwRkJWeXhSUVVGUkxFZEJRVWNzU1VGQlNUdEJRVUZCTEVWQlFVVTdRVUZCUVN4RlFVTTNSQ3haUVVGWkxFOUJRVzlDTzBGQlFVVXNWVUZCVFN4TFFVRlpPMEZCUVVFc1JVRkJSVHRCUVVNeFJEdEJRVlZQTEVsQlFVMHNWMEZCVGl4alFVRjFRaXhUUVVGVFJDeFBRVUZOTEZGQlFWRXNSVUZCUlR0QlFVRkJMRVZCUTI1RUxFOUJRVTg3UVVGQlJTeEpRVUZCUXl4VFFVRlJMR05CUVdNc1JVRkJSU3hYUVVGWExGZEJRVmNzUjBGQlJ5eEpRVUZKTzBGQlFVRXNSVUZCUlR0QlFVRkJMRVZCUTJoRkxGbEJRVmtzVDBGQmRVSXNUMEZCZFVJN1FVRkJSU3hWUVVGTkxFVkJRVVVzVDBGQlR5eEhRVUZITEUxQlFVMHNRMEZCVVR0QlFVRkJMRVZCUVVVN1FVRkRiRWM3UVVGUFR5eEpRVUZOTEU5QlFVNHNZMEZCYlVJc1UwRkJVMFFzVDBGQlRTeEpRVUZKTEVWQlFVVTdRVUZCUVN4RlFVTXpReXhQUVVGUE8wRkJRVVVzU1VGQlFVTXNVMEZCVVN4alFVRmpMRVZCUVVVc1YwRkJWeXhQUVVGUExFZEJRVWNzU1VGQlNUdEJRVUZCTEVWQlFVVTdRVUZCUVN4RlFVTTFSQ3haUVVGWkxFOUJRVzFDTzBGQlFVVXNWVUZCVFN4TFFVRlpPMEZCUVVFc1JVRkJSVHRCUVVONlJEdEJRVWxQTEVsQlFVMHNVVUZCVGl4alFVRnZRaXhUUVVGVFJDeFBRVUZOTEV0QlFVc3NSVUZCUlR0QlFVRkJMRVZCUXpkRExFOUJRVTg3UVVGQlJTeEpRVUZCUXl4VFFVRlJMR05CUVdNc1JVRkJSU3hYUVVGWExGRkJRVkVzUjBGQlJ5eEpRVUZKTzBGQlFVRXNSVUZCUlR0QlFVRkJMRVZCUXpkRUxGbEJRVmtzVDBGQmIwSTdRVUZCUlN4VlFVRk5MRXRCUVZrN1FVRkJRU3hGUVVGRk8wRkJRVUVzUlVGRE5VTXNXVUZCV1N4VlFVRjFRanRCUVVGRkxGTkJRVXNzVVVGQlVTeFBRVUZQTEZGQlFWRTdRVUZCUVN4RlFVRkZPMEZCUTJwR08wRkJTVThzU1VGQlRTeFhRVUZPTEdOQlFYVkNMRk5CUVZORUxFOUJRVTBzVVVGQlVTeEZRVUZGTzBGQlFVRXNSVUZEYmtRc1QwRkJUenRCUVVGRkxFbEJRVUZETEZOQlFWRXNZMEZCWXl4RlFVRkZMRmRCUVZjc1YwRkJWeXhIUVVGSExFbEJRVWs3UVVGQlFTeEZRVUZGTzBGQlFVRXNSVUZEYUVVc1dVRkJXU3hQUVVGMVFqdEJRVUZGTEZWQlFVMHNTMEZCV1R0QlFVRkJMRVZCUVVVN1FVRkROMFE3UVVGTlR5eEpRVUZOTEdGQlFVNHNZMEZCZVVJc1UwRkJVMFlzUzBGQlNTeFZRVUZWTEVWQlFVVTdRVUZCUVN4RlFVTnlSQ3hQUVVGUE8wRkJRVVVzU1VGQlFVVXNVMEZCVVN4alFVRmpMRVZCUVVVc1YwRkJWeXhoUVVGaExFZEJRVWNzU1VGQlNUdEJRVUZCTEVWQlFVVTdRVUZCUVN4RlFVTnNSU3haUVVGWkxFOUJRWGxDTEU5QlFYVkNPMEZCUVVVc1ZVRkJUU3hGUVVGRkxFOUJRVThzUjBGQlJ5eE5RVUZOTEVOQlFWRTdRVUZCUVN4RlFVRkZPMEZCUTNCSE8wRkJSMEVzVDBGQlR5eGxRVUZsUkN4UFFVRk5MRkZCUVZFc1YwRkJWeXhaUVVGWk8wRkJRVUVzUlVGRGRrUXNUVUZCVFR0QlFVRkZMRmRCUVU4c1MwRkJTeXhoUVVGaE8wRkJRVUVzUlVGQlJUdEJRVUZCTEVWQlEyNURMRWxCUVVrc1IwRkJSenRCUVVGRkxGTkJRVXNzWVVGQllTeERRVUZETzBGQlFVRXNSVUZCUlR0QlFVTnNReXhEUVVGRE8wRkJSMDBzU1VGQlRTeFZRVUZPTEdOQlFYTkNMRk5CUVZOQkxFOUJRVTBzVDBGQlR5eEZRVUZGTzBGQlFVRXNSVUZEYWtRc1QwRkJUenRCUVVGRkxFbEJRVUZETEZOQlFWRXNZMEZCWXl4RlFVRkZMRmRCUVZjc1ZVRkJWU3hIUVVGSExFbEJRVWs3UVVGQlFTeEZRVUZGTzBGQlFVRXNSVUZETDBRc1dVRkJXU3hWUVVGNVFpeFZRVUZuUXp0QlFVRkZMRlZCUVUwc1JVRkJSU3hWUVVGVkxFZEJRVWNzVFVGQlRTeERRVUZSTzBGQlFVRXNSVUZCUlR0QlFVRkJMRVZCUTJ4SExGbEJRVmtzVlVGQmRVSTdRVUZEZWtNc1ZVRkJUU3hEUVVGRExFOUJRVThzUjBGQlJ5eFJRVUZSTEVsQlFVa3NUMEZCVHl4UlFVRlJPMEZCUXpWRExGTkJRVXNzVlVGQlZTeExRVUZMTzBGQlEzQkNMRk5CUVVzc1lVRkJZU3hSUVVGUk8wRkJRVUVzUlVGRE9VSTdRVUZEU2p0QlFVbFBMRWxCUVUwc1YwRkJUaXhqUVVGMVFpeFRRVUZUUml4TFFVRkpMRkZCUVZFc1JVRkJSVHRCUVVGQkxFVkJRMnBFTEU5QlFVODdRVUZCUlN4SlFVRkJSU3hUUVVGUkxHTkJRV01zUlVGQlJTeFhRVUZYTEZkQlFWY3NSMEZCUnl4SlFVRkpPMEZCUVVFc1JVRkJSVHRCUVVGQkxFVkJRMmhGTEZsQlFWa3NUMEZCZFVJc1QwRkJkVUk3UVVGQlJTeFZRVUZOTEVWQlFVVXNUMEZCVHl4SFFVRkhMRTFCUVUwc1EwRkJVVHRCUVVGQkxFVkJRVVU3UVVGRGJFYzdRVUZKVHl4SlFVRk5MR0ZCUVU0c1kwRkJlVUlzVTBGQlUwUXNUMEZCVFN4VlFVRlZMRVZCUVVVN1FVRkJRU3hGUVVOMlJDeFBRVUZQTzBGQlFVVXNTVUZCUVVNc1UwRkJVU3hqUVVGakxFVkJRVVVzVjBGQlZ5eGhRVUZoTEVkQlFVY3NTVUZCU1R0QlFVRkJMRVZCUVVVN1FVRkJRU3hGUVVOc1JTeFpRVUZaTEU5QlFYbENMRTlCUVhWQ08wRkJRVVVzVlVGQlRTeEZRVUZGTEU5QlFVOHNSMEZCUnl4TlFVRk5MRU5CUVZFN1FVRkJRU3hGUVVGRk8wRkJRM0JITzBGQlRVOHNTVUZCVFN4VFFVRk9MR05CUVhGQ0xGTkJRVk5FTEU5QlFVMHNUVUZCVFN4RlFVRkZPMEZCUVVFc1JVRkRMME1zVDBGQlR6dEJRVUZGTEVsQlFVRkRMRk5CUVZFc1kwRkJZeXhGUVVGRkxGZEJRVmNzVTBGQlV5eEhRVUZITEVsQlFVazdRVUZCUVN4RlFVRkZPMEZCUVVFc1JVRkRPVVFzV1VGQldTeFBRVUZ4UWp0QlFVRkZMRlZCUVUwc1MwRkJXVHRCUVVGQkxFVkJRVVU3UVVGRE0wUTdRVUZKVHl4SlFVRk5MRkZCUVU0c1kwRkJiMElzVTBGQlUwUXNUMEZCVFN4TFFVRkxMRVZCUVVVN1FVRkJRU3hGUVVNM1F5eFBRVUZQTzBGQlFVVXNTVUZCUVVNc1UwRkJVU3hqUVVGakxFVkJRVVVzVjBGQlZ5eFJRVUZSTEVkQlFVY3NTVUZCU1R0QlFVRkJMRVZCUVVVN1FVRkJRU3hGUVVNM1JDeFpRVUZaTEZWQlFYVkNMRlZCUVdkRE8wRkJRVVVzVlVGQlRTeEZRVUZGTEZWQlFWVXNSMEZCUnl4TlFVRk5MRU5CUVZFN1FVRkJRU3hGUVVGRk8wRkJRVUVzUlVGRGFFY3NXVUZCV1N4VlFVRjFRanRCUVVGRkxGTkJRVXNzWVVGQllTeFBRVUZQTEZGQlFWRXNRMEZCUXp0QlFVRkJMRVZCUVVVN1FVRkRka1k3UVVGSlR5eEpRVUZOTEZOQlFVNHNZMEZCY1VJc1UwRkJVMFlzUzBGQlNTeE5RVUZOTEVWQlFVVTdRVUZCUVN4RlFVTTNReXhQUVVGUE8wRkJRVVVzU1VGQlFVVXNVMEZCVVN4alFVRmpMRVZCUVVVc1YwRkJWeXhUUVVGVExFZEJRVWNzU1VGQlNUdEJRVUZCTEVWQlFVVTdRVUZCUVN4RlFVTTVSQ3haUVVGWkxFOUJRWEZDTzBGQlFVVXNWVUZCVFN4TFFVRlpPMEZCUVVFc1JVRkJSVHRCUVVNelJEdEJRVWxQTEVsQlFVMHNVMEZCVGl4alFVRnhRaXhUUVVGVFJDeFBRVUZOTEUxQlFVMHNSVUZCUlR0QlFVRkJMRVZCUXk5RExFOUJRVTg3UVVGQlJTeEpRVUZCUXl4VFFVRlJMR05CUVdNc1JVRkJSU3hYUVVGWExGTkJRVk1zUjBGQlJ5eEpRVUZKTzBGQlFVRXNSVUZCUlR0QlFVRkJMRVZCUXpsRUxGbEJRVmtzVDBGQmNVSXNUMEZCZFVJN1FVRkJSU3hWUVVGTkxFVkJRVVVzVDBGQlR5eEhRVUZITEUxQlFVMHNRMEZCVVR0QlFVRkJMRVZCUVVVN1FVRkRhRWM3T3p0QlEzaE1RU3hUUVVGdlFpeFhRVUZZUXl4blFrRkJNRUk3T3p0QlEwUnVReXhQUVVGUFF5eFpRVUZYTzBGQlEyeENMRTlCUVU4c1UwRkJVenM3TzBGRFJHaENMRTlCUVU5RExHTkJRV0U3UVVGRmNFSXNVMEZCYjBJc1YwRkJXRU1zWjBKQlFYVkNPMEZCUjJoRExFbEJRVTBzVDBGQlR5eFBRVUZQTEUxQlFVMDdRVUZETVVJc1NVRkJUU3hQUVVGUExFOUJRVThzVFVGQlRUdEJRVVV4UWl4SlFVRk5MRVZCUVVVc1YwRkJWeXhYUVVGWExFbEJRVWxET3pzN1FVTk9iRU1zU1VGQmNVSXNZMEZCY2tJc1RVRkJjVUlzWVVGQldUdEJRVUZCTEVWQlNYWkNMR05CUVdNN1FVRkdkRUlzVTBGQlVTeGxRVUZsTEZOQlFXbENMRVZCUVVVc1JVRkJSU3hMUVVGTExFdEJRVTBzVFVGQlRUdEJRVUZCTEVWQlJYUkRPMEZCUVVFN1FVRkJRU3hGUVVWMlFpeFBRVUZqTEdOQlFUSkNPMEZCUTNaRExGRkJRVWtzUTBGQlF5eGhRVUZaTEZWQlFWVTdRVUZEZWtJc2JVSkJRVmtzVjBGQlZ5eEpRVUZKTEdGQlFWazdRVUZCUVN4SlFVTjZRenRCUVVOQkxGZEJRVThzWVVGQldUdEJRVUZCTEVWQlEzSkNPMEZCUVVFc1JVRkZUeXhWUVVFMFFqdEJRVU5xUXl4WFFVRlBMRXRCUVVzN1FVRkJRU3hGUVVOa08wRkJRMFk3T3p0QlEyeENRU3hQUVVGUExGRkJRVkU3T3p0QlEwRm1MRWxCUVVzc1YwRkJUQ3hyUWtGQlMwTXNZMEZCVER0QlFVTkZMRVZCUVVGQkxHOUNRVUZCTEZkQlFWRXNTMEZCVWp0QlFVTkJMRVZCUVVGQkxHOUNRVUZCTEZWQlFVOHNTMEZCVUR0QlFVTkJMRVZCUVVGQkxHOUNRVUZCTEZkQlFWRXNTMEZCVWp0QlFVTkJMRVZCUVVGQkxHOUNRVUZCTEZWQlFVOHNTMEZCVUR0QlFVcEhMRk5CUVVGQk8wRkJRVUVzUjBGQlFUdEJRVTlNTEVsQlFYRkNMRk5CUVhKQ0xFMUJRWEZDTEZGQlFVODdRVUZCUVN4RlFVOHhRaXhaUVVORkxHdENRVU5CTEZkQlFYRkNMRkZCUVU4c2JVSkJRelZDTzBGQlRFWXNVMEZCVVN4WFFVRnhRaXhSUVVGUE8wRkJUV3hETEZOQlFVc3NiVUpCUVcxQ08wRkJRM2hDTEZOQlFVc3NWMEZCVnp0QlFVRkJMRVZCUTJ4Q08wRkJRVUVzUlVGWVFUdEJRVUZCTEZOQlFYZENMRzlDUVVGdlFqdEJRVUZCTzBGQlFVRXNSVUZETlVNN1FVRkJRU3hUUVVGM1FpeDNRa0ZCZDBJN1FVRkJRVHRCUVVGQkxFVkJXV2hFTEUxQlFVMHNXVUZCYjBJc1RVRkJZVHRCUVVOeVF5eFRRVUZMTEdWQlFXVXNaVUZCWjBJc1UwRkJVeXhIUVVGSExFbEJRVWs3UVVGQlFTeEZRVU4wUkR0QlFVRkJMRVZCUTBFc1MwRkJTeXhaUVVGdlFpeE5RVUZoTzBGQlEzQkRMRk5CUVVzc1pVRkJaU3hqUVVGbExGTkJRVk1zUjBGQlJ5eEpRVUZKTzBGQlFVRXNSVUZEY2tRN1FVRkJRU3hGUVVOQkxFdEJRVXNzV1VGQmIwSXNUVUZCWVR0QlFVTndReXhUUVVGTExHVkJRV1VzWTBGQlpTeFRRVUZUTEVkQlFVY3NTVUZCU1R0QlFVRkJMRVZCUTNKRU8wRkJRVUVzUlVGRFFTeE5RVUZOTEZsQlFXOUNMRTFCUVdFN1FVRkRja01zVTBGQlN5eGxRVUZsTEdWQlFXZENMRk5CUVZNc1IwRkJSeXhKUVVGSk8wRkJRVUVzUlVGRGRFUTdRVUZCUVN4RlFVVlJMRlZCUVZVc1QwRkJNRUk3UVVGRE1VTXNWMEZCVHl4VFFVRlRMRXRCUVVzN1FVRkJRU3hGUVVOMlFqdEJRVUZCTEVWQlJWRXNaVUZCWlN4UFFVRnBRaXhaUVVGdlFpeE5RVUZoTzBGQlEzWkZMRkZCUVVrc1EwRkJReXhMUVVGTExGVkJRVlVzUzBGQlN5eEZRVUZITzBGQlJUVkNMRlZCUVUwc1kwRkJZeXhUUVVGVExFdEJRVXNzUlVGQlJTeFpRVUZaTzBGQlJXaEVMRlZCUVUwc1RVRkJUU3hSUVVGUE8wRkJRMjVDTEZGQlFVa3NUMEZCVHl4TFFVRkxPMEZCUTJoQ0xGRkJRVWtzUzBGQlN5eFRRVUZUTEV0QlFVczdRVUZEY2tJc1lVRkJUeXhMUVVGTExFMUJRVTBzUjBGQlJ5eEhRVUZITzBGQlFVRXNTVUZETVVJc1QwRkJUenRCUVVOTUxHRkJRVThzUzBGQlN5eFBRVUZQTEV0QlFVc3NSMEZCUnp0QlFVRkJMRWxCUXpkQ08wRkJSVUVzVlVGQlRTeFpRVUZaTEVkQlFVY3NWMEZCVnl4TlFVRk5MRWxCUVVrc1RVRkJUU3hQUVVGUE8wRkJRM1pFTEZsQlFWRXNTVUZCU1N4WFFVRlhMRWRCUVVjc1NVRkJTVHRCUVVGQkxFVkJRMmhETzBGQlEwWTdPenRCUkc1RVFTeEpRVUZ4UWl4MVFrRkJja0lzVFVGQk1FTTdRVUZCUVN4RlFWTjRReXhqUVVGak8wRkJVR1FzVTBGQlVTeHhRMEZCYjBRN1FVRkROVVFzVTBGQlVTeFRRVUZUTEVsQlFVa3NUMEZCVHl4TFFVRkxMRmxCUVZrc1NVRkJTVHRCUVU4dlF5eFRRVUZMTEdOQlFXTXNSMEZCUnl4WlFVRlpPMEZCUTJ4RExGRkJRVWtzUTBGQlF5eExRVUZMTEdGQlFXRTdRVUZEY2tJc1dVRkJUU3hKUVVGSkxFMUJRVTBzYVVOQlFXbERPMEZCUVVFc1NVRkRia1E3UVVGRlFTeFRRVUZMTEZOQlFWTXNTMEZCU3l4TFFVRkxMR0ZCUVdFc1QwRkJUenRCUVVNMVF5eFRRVUZMTEd0Q1FVRnJRaXhMUVVGTExFOUJRVTg3UVVGQlFTeE5RVUZITEVOQlFVTXNWVUZEY2tNc1MwRkJTeXhQUVVGUExHZENRVUZuUWl4RlFVRkZMRWxCUVVrN1FVRkJRU3hKUVVOd1F6dEJRVU5CTEZOQlFVc3NXVUZCV1N4TFFVRkxMRTlCUVU4N1FVRkJRU3hOUVVNelFpeERRVUZETEZWQlFWVXNTMEZCU3l4UFFVRlBMRlZCUVZVc1JVRkJSU3hKUVVGSkxFdEJRVXNzUTBGQlF6dEJRVUZCTEVsQlF5OURPMEZCUVVFc1JVRkRSanRCUVVGQkxFVkJSVThzYVVKQlFYZENPMEZCUXpkQ0xGRkJRVWtzUTBGQlF5eExRVUZMTEdGQlFXRTdRVUZEY2tJc1dVRkJUU3hKUVVGSkxFMUJRVTBzYVVOQlFXbERPMEZCUVVFc1NVRkRia1E3UVVGRFFTeFhRVUZQTEV0QlFVczdRVUZCUVN4RlFVTmtPMEZCUVVFc1JVRkZUeXhYUVVFNFFqdEJRVU51UXl4WFFVRlBMRXRCUVVzN1FVRkJRU3hGUVVOa08wRkJRVUVzUlVGRlR5eFhRVUU0UWp0QlFVTnVReXhYUVVGUExFdEJRVXNzUzBGQlN5eGxRVUZsTEVkQlFVY3NUMEZCVHp0QlFVRkJMRVZCUXpWRE8wRkJRVUVzUlVGRlR5eGpRVUZ6UXp0QlFVTXpReXhYUVVGUExFdEJRVXM3UVVGQlFTeEZRVU5rTzBGQlFVRXNSVUZGVHl4dlFrRkJNRU03UVVGREwwTXNVMEZCU3l4UFFVRlBPMEZCUVVFc1RVRkRWanRCUVVGQkxFMUJRMEVzUzBGQlN5eG5Ra0ZCWjBJc1NVRkJTU3hIUVVGSExHZENRVUZuUWp0QlFVRkJMRWxCUXpsRE8wRkJRMEVzVjBGQlR5eExRVUZMTzBGQlFVRXNSVUZEWkR0QlFVRkJMRVZCUlU4c01FSkJRVEpETzBGQlEyaEVMRmRCUVU4c1MwRkJTeXhuUWtGQlowSXNSMEZCUnl4RFFVRkRMRmxCUVZrc1MwRkJTeXhUUVVGVExGRkJRVkVzUlVGQlJTeEpRVUZKTEVOQlFVTTdRVUZCUVN4RlFVTXpSVHRCUVVGQkxFVkJSVThzT0VKQlFTdERPMEZCUTNCRUxGZEJRVThzUzBGQlN5eG5Ra0ZCWjBJN1FVRkJRU3hOUVVGSExFTkJRVU1zV1VGRE9VSXNTMEZCU3l4VFFVRlRMRmxCUVZrc1JVRkJSU3hKUVVGSk8wRkJRVUVzU1VGRGJFTTdRVUZCUVN4RlFVTkdPMEZCUVVFc1JVRkZUeXgzUWtGQmQwSXNVVUZCYzBJN1FVRkRia1FzVlVGQlRTeHBRa0ZCYVVJc1MwRkJTeXhuUWtGQlowSXNTVUZCU1R0QlFVTm9SQ3hSUVVGSkxHZENRVUZuUWp0QlFVTnNRaXh4UWtGQlpTeFhRVUZYTEUxQlFVMDdRVUZCUVN4SlFVTnNRenRCUVVGQkxFVkJRMFk3UVVGQlFTeEZRVVZQTEhGQ1FVRXlRanRCUVVOb1F5eFZRVUZOTEdsQ1FVRnBRaXhMUVVGTExHZENRVUZuUWl4SlFVRkpPMEZCUTJoRUxGRkJRVWtzWjBKQlFXZENPMEZCUTJ4Q0xGZEJRVXNzY1VOQlFYRkRMR1ZCUVdVc1YwRkJWenRCUVVOd1JTeHhRa0ZCWlN4WFFVRlhMRU5CUVVNN1FVRkJRU3hKUVVNM1FqdEJRVUZCTEVWQlEwWTdRVUZCUVN4RlFVVlBMSFZDUVVFMlFqdEJRVU5zUXl4VlFVRk5MR2xDUVVGcFFpeExRVUZMTEdkQ1FVRm5RaXhKUVVGSk8wRkJRMmhFTEZGQlFVa3NhMEpCUVd0Q0xFdEJRVXNzZFVOQlFYVkRMRTFCUVUwN1FVRkRkRVVzY1VKQlFXVXNWMEZCVnl4TFFVRkxMR3REUVVGclF6dEJRVU5xUlN4WFFVRkxMSEZEUVVGeFF6dEJRVUZCTEVsQlF6VkRPMEZCUVVFc1JVRkRSanRCUVVGQkxFVkJSVThzYTBKQlFXdENMRk5CUVRSQ08wRkJRMjVFTEZsQlFWRXNaVUZCWlN4SlFVRkpPMEZCUXpOQ0xGTkJRVXNzVDBGQlR6dEJRVUZCTEUxQlExWTdRVUZCUVN4TlFVTkJMRkZCUVZFc1owSkJRV2RDTzBGQlFVRXNUVUZEZUVJN1FVRkJRU3hOUVVOQkxGRkJRVkVzVDBGQlR6dEJRVUZCTEUxQlEyWTdRVUZCUVN4TlFVTkJMRXRCUVVzc2EwSkJRV3RDTEVWQlFVVXNTVUZCU1N4SFFVRkhMR2RDUVVGblFqdEJRVUZCTEVsQlEyeEVPMEZCUVVFc1JVRkRSanRCUVVOR096czdRVVU1Ums4c1UwRkJVeXhUUVVGVExFVkJRVVVzVjBGQlZ5eERRVUZETEVkQlFVY3NUVUZCVFN4SFFVYzNRenRCUVVORExFMUJRVWtzVFVGQlR5eFZRVUZUTEV0QlFVc3NTMEZCU3p0QlFVTTVRaXhUUVVGUExHTkJRV01zVVVGQlVUdEJRVU5xUXp0QlFVVlBMRk5CUVZORExFdEJRMW9zVFVGRFFTeFBRVU5HTzBGQlEwVXNVMEZCVHl4SlFVRkxMRTlCUVU4c1RVRkJZU3hMUVVGTE8wRkJRM3BETzBGQlJVRXNTVUZCVFN4UlFVRlJPMEZCUVVFc1JVRkRWaXhMUVVGWk8wRkJRVUVzUlVGRFdpeFJRVUZsTzBGQlFVRXNSVUZEWml4WFFVRnJRanRCUVVGQkxFVkJRMnhDTEd0Q1FVRjVRanRCUVVGQkxFVkJRM3BDTEdGQlFXOUNPMEZCUVVFc1JVRkRjRUlzVDBGQll6dEJRVUZCTEVWQlEyUXNWVUZCYVVJN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGSGFrSXNUVUZCWVR0QlFVRkJMRVZCUTJJc1QwRkJZenRCUVVGQkxFVkJRMlFzVlVGQmFVSTdRVUZCUVR0QlFVRkJMRVZCUldwQ0xGbEJRVzFDTzBGQlFVRXNSVUZEYmtJc1UwRkJaMEk3UVVGQlFTeEZRVU5vUWl4VlFVRnBRanRCUVVGQkxFVkJRMnBDTEZsQlFXMUNPMEZCUVVFc1JVRkRia0lzVVVGQlpUdEJRVUZCTEVWQlEyWXNUMEZCWXp0QlFVRkJMRVZCUTJRc1VVRkJaVHRCUVVGQkxFVkJRMllzVVVGQlpUdEJRVU51UWp0QlFXbERUeXhKUVVGTkxFOUJRVTlCT3pzN1FVTm9SWEJDTEVsQlFVMHNjMEpCUVhOQ0xFTkJRVU1zZDBKQlFUWkRPMEZCUTNoRkxGRkJRVTBzWlVGQlpTeHZRa0ZCYjBJc1kwRkJZeXhGUVVGRkxFbEJRVWs3UVVGRE4wUXNUVUZCU1N4M1JFRkJORU03UVVGRE9VTXNkMEpCUVc5Q0xHMURRVUVyUWp0QlFVRkJMRVZCUTNKRUxFOUJRVTg3UVVGRFRDeDNRa0ZCYjBJc2JVUkJRWFZETzBGQlFVRXNSVUZETjBRN1FVRkRSanRCUVVWQkxGTkJRVk1zYjBKQlFXOUNMRTlCUVdsRE8wRkJRelZFTEZGQlFVMURMSGRDUVVGMVFpeEpRVUZKTEhGQ1FVRnhRanRCUVVOMFJDeFRRVU5GTEdkQ1FVRkJRenRCUVVGQkxFbEJRVU03UVVGQlFUdEJRVUZCTEUxQlEwTXNWMEZCVlR0QlFVRkJMRTFCUTFZc1QwRkJUeXhuUWtGQlFVRXNTMEZCUXl4VlFVRkxMRTFCUVUxRUxITkNRVUZ4UWl3MFFrRkJORUlzUjBGQlJ6dEJRVUZCTEUxQlEzWkZMRk5CUVZNc1RVRkJUU3h2UWtGQmIwSXNUVUZCVFN4dFFrRkJiVUk3UVVGQlFUdEJRVUZCTEVWQlF6bEVPMEZCUlVvN1FVRkpaU3hUUVVGU0xHRkJRVGhDTEU5QlFUQkNPMEZCUXpkRUxGTkJRMFVzWjBKQlFVRkRPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGRFF5eFhRVUZWTzBGQlFVRXNUVUZEVml4UFFVTkZMR2RDUVVGQlFUdEJRVUZCTEZGQlFVTTdRVUZCUVR0QlFVRkJMRlZCUTBNc1ZVRkJWVHRCUVVGQkxGbEJRMUlzWjBKQlFVRkJPMEZCUVVFc1kwRkJRenRCUVVGQk8wRkJRVUVzWjBKQlEwTXNjVUpCUVhGQ0xFMUJRVTA3UVVGQlFUdEJRVUZCTEZsQlF6ZENPMEZCUVVFc1dVRkRRU3huUWtGQlFVRXNTMEZCUXl4WlFVRlBMRmRCUVZjc2MwSkJRWE5DTEU5QlFVOHNXVUZCV1R0QlFVRkJMRmxCUXpWRUxHZENRVUZCUVN4TFFVRkRMRmxCUVU4c1YwRkJWeXh6UWtGQmMwSXNUMEZCVHl4WlFVRlpPMEZCUVVFc1ZVRkRPVVE3UVVGQlFUdEJRVUZCTEUxQlEwUTdRVUZCUVR0QlFVRkJMRVZCUlVvN1FVRkZURHM3TzBGRGVrTkJMRk5CUVZORExGRkJRVTg3UVVGRFpDeFRRVU5GTEhGQ1FVRkRMRk5CUVVrc1YwRkJWU3gxUWtGRFlqdEJRVUZCTEc5Q1FVRkJReXhMUVVGRExGZEJRMFVzWlVGQlN5eFpRVUZaTEZsQlFWa3NSVUZCUlN4UlFVRlJMRU5CUVVNc1JVRkJSU3hIUVVGSExFTkJRVU1zVTBGQlV6dEJRVU4wUkN4aFFVRlBMRXRCUVVzc1RVRkJUU3hIUVVGSExFVkJRVVU3UVVGQlFTeEpRVU42UWl4RFFVRkRMRWRCUTBnN1FVRkJRU3hKUVVOQkxHZENRVUZCUVN4TFFVRkRMRmRCUTBVc1pVRkJTeXhaUVVGWkxGbEJRVmtzUlVGQlJTeFJRVUZSTEVOQlFVTXNSVUZCUlN4SFFVRkhMRU5CUVVNc1UwRkJVenRCUVVOMFJDeGhRVUZQTEV0QlFVc3NUVUZCVFN4SlFVRkpMRVZCUVVVN1FVRkJRU3hKUVVNeFFpeERRVUZETEVkQlEwZzdRVUZCUVN4TFFVTkdPMEZCUlVvN1FVRkZaU3hUUVVGU0xHTkJRU3RDTEU5QlFUSkNPMEZCUXk5RUxGTkJRMFVzWjBKQlFVRkJPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGRFF5eFhRVUZYTzBGQlFVRXNUVUZEV0N4UFFVTkZMR2RDUVVGQlFUdEJRVUZCTEZGQlFVTTdRVUZCUVR0QlFVRkJMRlZCUTBNc1ZVRkJWVHRCUVVGQkxGbEJRMUlzWjBKQlFVRkJMRXRCUVVFc1dVRkRSU3d3UWtGQlFVRTdRVUZCUVN4alFVRkRPMEZCUVVFN1FVRkJRU3huUWtGRFF5eFZRVUZWTzBGQlFVRXNaMEpCUTFZc1ZVRkJWVHRCUVVGQkxHdENRVU5TTEdsRFFVTkZPMEZCUVVFc2IwTkJRVUZCTzBGQlFVRXNjMEpCUVVNN1FVRkJRVHRCUVVGQkxIZENRVU5ETEhGQ1FVRnhRaXhOUVVGTk8wRkJRVUU3UVVGQlFTeHZRa0ZETjBJN1FVRkJRU3h2UWtGRFFTeG5Ra0ZCUVVFc1MwRkJReXhUUVVGSkxFOUJRVThzWjBKQlFVRkJMRXRCUVVORUxFOUJRVUVzUlVGQlN5eEhRVUZKTzBGQlFVRXNjVUpCUTNoQ08wRkJRVUVzWjBKQlEwWTdRVUZCUVR0QlFVRkJMRmxCUTBZc1IwRkRSanRCUVVGQkxGVkJRMFk3UVVGQlFUdEJRVUZCTEUxQlEwUTdRVUZCUVR0QlFVRkJMRVZCUlVvN1FVRkZURHM3TzBGRGJrUkJMRTlCUVU4c1YwRkJWenRCUVVkc1FpeEpRVUZ4UWl4cFFrRkJja0lzVFVGQmIwTTdRVUZCUVN4RlFVMXNReXhqUVVGak8wRkJUR1FzVTBGQlVTeFJRVUZ4UWl4TlFVRk5MRmxCUVZrN1FVRkRMME1zVTBGQlVTeFRRVUZwUWl4SlFVRkpMRTlCUVU4c1owSkJRV2RDTzBGQlEzQkVMRk5CUVZFc1ZVRkJkMElzVFVGQlRTeFBRVUZQTEVsQlFVa3NVMEZCVXp0QlFVTXhSQ3hUUVVGUkxGVkJRWGRDTEUxQlFVMHNUMEZCVHl4SlFVRkpMRk5CUVZNN1FVRkJRU3hGUVVVelF6dEJRVUZCTEVWQlJWSXNZVUZCYzBNN1FVRkRNME1zVjBGQlR5eExRVUZMTEV0QlFVc3NUMEZCVHl4VFFVRlRPMEZCUVVFc1JVRkRia003UVVGQlFTeEZRVU5QTEhOQ1FVRjNRenRCUVVNM1F5eFhRVUZQTEV0QlFVc3NTMEZCU3l4VFFVRlRMRmRCUVZjN1FVRkJRU3hGUVVOMlF6dEJRVUZCTEVWQlEwOHNjMEpCUVhkRE8wRkJRemRETEZkQlFVOHNTMEZCU3l4TFFVRkxMRk5CUVZNc1YwRkJWenRCUVVGQkxFVkJRM1pETzBGQlEwWTdPenRCUTJwQ1FTeFRRVUZUTEdsQ1FVRnBRanRCUVVONFFpeFJRVUZOTEdsQ1FVRnBRaXhKUVVGSkxHVkJRV1U3UVVGRk1VTXNVMEZEUlN4blFrRkJRVVU3UVVGQlFTeEpRVUZETzBGQlFVRTdRVUZCUVN4TlFVTkRMRmRCUVZVN1FVRkJRU3hOUVVOV0xFOUJRMFVzWjBKQlFVRkJPMEZCUVVFc1VVRkJRenRCUVVGQk8wRkJRVUVzVlVGRFF5eFhRVUZYTzBGQlFVRXNWVUZEV0N4UFFVTkZMR2RDUVVGQlFUdEJRVUZCTEZsQlFVTTdRVUZCUVR0QlFVRkJMR05CUTBNc1QwRkJUeXhsUVVGbExGZEJRVmNzUlVGQlJTeEhRVUZITEVOQlFVTXNXVUZCV1R0QlFVTnFSQ3h2UWtGQlNTeFJRVUZSTEZkQlFWY3NSMEZCUnp0QlFVTjRRaXg1UWtGQlR6dEJRVUZCTEdkQ1FVTlVPMEZCUTBFc2RVSkJRVThzVVVGQlVTeERRVUZETEVWQlFVVXNZVUZCWVR0QlFVRkJMR05CUTJwRExFTkJRVU03UVVGQlFUdEJRVUZCTEZWQlEwWTdRVUZCUVR0QlFVRkJMRTFCUlVvN1FVRkJRVHRCUVVGQkxFVkJSVW83UVVGRlREdEJRVVZCTEZOQlFWTkRMRkZCUVU4N1FVRkRaQ3hUUVVORkxHZENRVUZCUkR0QlFVRkJMRWxCUVVNN1FVRkJRVHRCUVVGQkxFMUJRME1zVjBGQlZUdEJRVUZCTEUxQlExWXNWVUZCVlR0QlFVRkJMRkZCUTFJc1owSkJRVUZCTEV0QlFVTXNWMEZEUlN4bFFVRkxMRmxCUVZrc1dVRkJXU3hGUVVGRkxGRkJRVkVzUTBGQlF5eEZRVUZGTEVkQlFVY3NRMEZCUXl4VFFVRlRPMEZCUTNSRUxHbENRVUZQTEV0QlFVc3NUVUZCVFN4SlFVRkpMRVZCUVVVN1FVRkJRU3hSUVVNeFFpeERRVUZETEVkQlEwZzdRVUZCUVN4TlFVTkdPMEZCUVVFN1FVRkJRU3hGUVVORU8wRkJSVXc3UVVGRlpTeFRRVUZTTEdOQlFTdENPMEZCUTNCRExGTkJRMFVzWjBKQlFVRkJPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGRFF5eFhRVUZYTzBGQlFVRXNUVUZEV0N4aFFVRmhMR2RDUVVGQlFTeExRVUZEUXl4UFFVRkJMRVZCUVVzN1FVRkJRU3hOUVVOdVFpeGpRVUZqTEdkQ1FVRkJSQ3hMUVVGRExGZEJRVTBzVDBGQlR5eGhRVUZoTzBGQlFVRXNUVUZEZWtNc1YwRkRSU3huUWtGQlFVRTdRVUZCUVN4UlFVRkRPMEZCUVVFN1FVRkJRU3hWUVVORExGVkJRVlU3UVVGQlFTeFpRVU5TTEdkQ1FVRkJRVHRCUVVGQkxHTkJRVU03UVVGQlFUdEJRVUZCTEdkQ1FVTkRMRlZCUVZVN1FVRkJRVHRCUVVGQkxGbEJSVm83UVVGQlFTeFpRVVZCTEdkQ1FVRkJRU3hMUVVGRExGTkJRVWtzVlVGQlZTeE5RVUZOTEZWQlFWVXNRMEZCUXl4blFrRkJRVUVzUzBGQlF5eHJRa0ZCWlN4RFFVRkZMRWRCUVVjN1FVRkJRU3hWUVVOMlJEdEJRVUZCTzBGQlFVRXNUVUZEUmp0QlFVRkJPMEZCUVVFc1JVRkZTRHRCUVVWTU96czdRVU16UkVFc1NVRkJjVUlzYzBKQlFYSkNMRTFCUVhsRE8wRkJRVUVzUlVGUGRrTXNZMEZCWXp0QlFVNWtMRk5CUVZFc1UwRkJhVUlzU1VGQlNTeFBRVUZQTEhGQ1FVRnhRanRCUVVONlJDeFRRVUZSTEdGQlFXMURPMEZCUVVFN1FVRkJRU3hKUVVVelF6dEJRVU5CTEZOQlFWRXNjVUpCUVc5RE8wRkJRVUVzUlVGRk4wSTdRVUZCUVN4RlFVVlNMR2RDUVVGeFF6dEJRVU14UXl4WFFVRlBMRXRCUVVzc1MwRkJTeXhWUVVGVkxFVkJRVVVzUjBGQlJ5eE5RVUZOTzBGQlEzQkRMR0ZCUVU4c1MwRkJTeXhYUVVGWExFbEJRVWs3UVVGQlFTeEpRVU0zUWl4RFFVRkRPMEZCUVVFc1JVRkRTRHRCUVVGQkxFVkJRMDhzWTBGQll5eFBRVUY1UWp0QlFVTTFReXhUUVVGTExFOUJRVThzUzBGQlN5d3lRa0ZCTWtJc1MwRkJTeXhGUVVGRk8wRkJRMjVFTEZOQlFVc3NWMEZCVnl4SlFVRkpMRXRCUVVzN1FVRkJRU3hGUVVNelFqdEJRVU5HT3pzN1FVTnNRbVVzVTBGQlVpeG5Ra0ZCYVVNc1QwRkJOa0k3UVVGRGJrVXNVMEZEUlN4blFrRkJRVVU3UVVGQlFTeEpRVUZETzBGQlFVRTdRVUZCUVN4TlFVTkRMRmRCUVZjc1RVRkJUU3h4UWtGRFpDeDNRa0ZCZDBJc1JVRkRlRUlzUjBGQlJ5eERRVUZETEZkQlFWYzdRVUZEWkN4WlFVRkpMRmxCUVZrN1FVRkRhRUlzWlVGQlR5eFhRVUZYTEVsQlEySXNZVUZCWVN4alFVTmlMR0ZCUVdFN1FVRkJRU3hOUVVOd1FpeERRVUZETzBGQlFVRXNUVUZEU0N4UFFVTkZMR2RDUVVGQlFTeExRVUZETEZWQlFVc3NUVUZCVFN4TlFVRk5MSEZDUVVGeFFpdzBRa0ZCTkVJc1IwRkJSenRCUVVGQkxFMUJSWGhGTEhOQ1FVRnpRaXhOUVVGTk8wRkJRekZDTEdOQlFVMHNjVUpCUVhGQ0xIZENRVUYzUWl4RlFVRkZMRWxCUVVrc1NVRkJTU3hKUVVONlJDeE5RVUZOTEhGQ1FVRnhRaXh0UWtGQmJVSXNTVUZET1VNc1RVRkJUU3h4UWtGQmNVSXNjVUpCUVhGQ08wRkJRVUVzVFVGRGRFUTdRVUZCUVR0QlFVRkJMRVZCUTBZN1FVRkZTanM3TzBGRGJFSmxMRk5CUVZJc1dVRkJOa0lzVDBGQmVVSTdRVUZETTBRc1UwRkRSU3huUWtGQlFVTTdRVUZCUVN4SlFVRkRPMEZCUVVFN1FVRkJRU3hOUVVORExGVkJRVlU3UVVGQlFTeE5RVU5XTEZkQlFWVTdRVUZCUVN4TlFVTldMRlZCUVZVN1FVRkJRU3hSUVVOU0xHZENRVUZCUVR0QlFVRkJMRlZCUVVNN1FVRkJRVHRCUVVGQkxGbEJRME1zVlVGQlZUdEJRVUZCTEZsQlExWXNWVUZCVlR0QlFVRkJMRmxCUTFZc1MwRkJTenRCUVVGQkxGbEJRMHdzUzBGQlN6dEJRVUZCTEZsQlEwd3NUMEZCVHl4TlFVRk5PMEZCUVVFc1dVRkRZaXhYUVVGWExFTkJRVU1zVTBGQlV6dEJRVU51UWl4dlFrRkJUU3hqUVVGakxFdEJRVXNzVlVGQlZTeEpRVUZKTzBGQlEzWkRMRzlDUVVGTkxIRkNRVUZ4UWl4M1FrRkJkMElzVjBGQlZ6dEJRVUZCTEZsQlEyaEZPMEZCUVVFN1FVRkJRU3hSUVVOR08wRkJRVUVzVVVGRFFTeG5Ra0ZCUVVFc1MwRkJReXh0UWtGQlowSXNjMEpCUVhOQ0xFMUJRVTBzYzBKQlFYTkNPMEZCUVVFc1RVRkRja1U3UVVGQlFUdEJRVUZCTEVWQlEwWTdRVUZGU2pzN08wRkROVUpCTEVsQlFVOHNiMEpCUVZFN1FVRkJRU3hGUVVOaUxFOUJRVTg3UVVGQlFTeEpRVU5NTEZkQlFWYzdRVUZCUVN4TlFVTlVMRTFCUVUwN1FVRkJRU3hOUVVOT0xGZEJRVmM3UVVGQlFTeE5RVU5ZTEV0QlFVczdRVUZCUVN4SlFVTlFPMEZCUVVFc1JVRkRSanRCUVVGQkxFVkJRMEVzVTBGQlV6dEJRVUZCTEVsQlExQXNWMEZCVnp0QlFVRkJMRTFCUTFRc1MwRkJTenRCUVVGQkxFMUJRMHdzVVVGQlVUdEJRVUZCTEUxQlExSXNVVUZCVVR0QlFVRkJMRTFCUTFJc1QwRkJUenRCUVVGQkxFMUJRMUFzVDBGQlR6dEJRVUZCTEUxQlExQXNUMEZCVHp0QlFVRkJMRTFCUTFBc1UwRkJVenRCUVVGQkxFMUJRMVFzVVVGQlVUdEJRVUZCTEUxQlExSXNVVUZCVVR0QlFVRkJMRTFCUTFJc1RVRkJUVHRCUVVGQkxFbEJRMUk3UVVGQlFTeEZRVU5HTzBGQlEwWTdPenRCUTNKQ1FTeFBRVUZQTEdWQlFXVTdRVUZIZEVJc1NVRkJjVUlzY1VKQlFYSkNMRTFCUVhkRE8wRkJRVUVzUlVGSGRFTXNZMEZCWXp0QlFVWmtMRk5CUVZFc1dVRkJhVU1zVlVGQlZTeFpRVUZaTzBGQlF5OUVMRk5CUVZFc1UwRkJhVUlzU1VGQlNTeFBRVUZQTEV0QlFVc3NXVUZCV1N4SlFVRkpPMEZCUVVFc1JVRkRNVU03UVVGQlFTeEZRVVZTTEdGQlFUQkRPMEZCUXk5RExGZEJRVThzUzBGQlN5eExRVUZMTEZkQlFWY3NVMEZCVXp0QlFVRkJMRVZCUTNaRE8wRkJRVUVzUlVGRFR5eGpRVUUwUXp0QlFVTnFSQ3hYUVVGUExFdEJRVXNzUzBGQlN5eFhRVUZYTEZWQlFWVTdRVUZCUVN4RlFVTjRRenRCUVVGQkxFVkJRMDhzWlVGQmFVTTdRVUZEZEVNc1YwRkJUeXhMUVVGTExFdEJRVXNzVjBGQlZ5eFpRVUZaTzBGQlFVRXNSVUZETVVNN1FVRkJRU3hGUVVOUExGTkJRV1U3UVVGRGNFSXNVMEZCU3l4VlFVRlZMRTlCUVU4N1FVRkRkRUlzVTBGQlN5eFBRVUZQTzBGQlFVRXNUVUZEVml4cFEwRkJhVU1zUzBGQlN5eGhRVUZoTEVWQlFVVXNTVUZCU1R0QlFVRkJMRWxCUXpORU8wRkJRVUVzUlVGRFJqdEJRVU5HT3pzN1FVTndRa0VzU1VGQlRTeHhRa0ZCY1VJc1NVRkJTU3h0UWtGQmJVSTdRVUZGYkVRc1UwRkJVeXgzUWtGQmQwSTdRVUZETDBJc1UwRkRSU3huUWtGQlFVTTdRVUZCUVN4SlFVRkRPMEZCUVVFN1FVRkJRU3hOUVVORExGZEJRVmNzYlVKQlFXMUNMR0ZCUVdFc1JVRkJSU3hIUVVGSExFTkJRVU1zWTBGQll6dEJRVU0zUkN4WlFVRkpMRmxCUVZrN1FVRkRhRUlzY1VKQlFXRXNXVUZCV1N4TlFVRk5PMEZCUXk5Q0xHVkJRVTg3UVVGQlFTeE5RVU5VTEVOQlFVTTdRVUZCUVN4TlFVTkVMRk5CUVZNc1RVRkJUVHRCUVVOaUxESkNRVUZ0UWl4UFFVRlBPMEZCUVVFc1RVRkROVUk3UVVGQlFTeE5RVU5CTEU5QlEwVXNaMEpCUVVGQk8wRkJRVUVzVVVGQlF6dEJRVUZCTzBGQlFVRXNWVUZEUXl4UFFVRlBMRzFDUVVGdFFpeGhRVUZoTEVWQlFVVXNSMEZCUnl4RFFVRkRMR05CUVdNN1FVRkRla1FzYlVKQlFVOHNXVUZEU0N4clFrRkJWU3hOUVVGTkxGVkJRVlVzVDBGRE1VSXNhMEpCUVZVc1RVRkJUU3hWUVVGVk8wRkJRVUVzVlVGRGFFTXNRMEZCUXp0QlFVRkJPMEZCUVVFc1RVRkRTRHRCUVVGQk8wRkJRVUVzUlVGRlNqdEJRVVZLTzBGQlJVRXNVMEZCVXl3NFFrRkJPRUk3UVVGRGNrTXNVMEZEUlN4blFrRkJRVUU3UVVGQlFTeEpRVUZETzBGQlFVRTdRVUZCUVN4TlFVTkRMRmRCUVZVN1FVRkJRU3hOUVVOV0xGVkJRVlVzYlVKQlFXMUNMRmRCUVZjc1JVRkJSU3hIUVVGSExFTkJRVU1zV1VGQldUdEJRVU40UkN4bFFVRlBMRkZCUTBvc1QwRkJUeXhEUVVGRExGZEJRVmNzVDBGQlR5eGpRVUZqTEVOQlFVTXNSVUZEZWtNc1NVRkJTU3hEUVVGRExGZEJRMG9zWjBKQlFVRkJPMEZCUVVFc1ZVRkJRenRCUVVGQk8wRkJRVUVzV1VGRFF5eFRRVUZUTzBGQlFVRXNXVUZEVkN4VFFVRlRPMEZCUVVFc1dVRkRWQ3hQUVVGUE8wRkJRVUVzV1VGRFVDeFBRVUZQTEV0QlFVc3NVVUZCVVN4dFFrRkJiVUk3UVVGQlFTeFpRVU4yUXl4UFFVRlBMR2RDUVVGQlFTeExRVUZETEZWQlFVc3NUVUZCVFN4TFFVRkxMRkZCUVZFc1RVRkJUU3hIUVVGSE8wRkJRVUU3UVVGQlFTeFJRVU16UXl4RFFVTkVPMEZCUVVFc1RVRkRUQ3hEUVVGRE8wRkJRVUU3UVVGQlFTeEZRVU5JTzBGQlJVbzdRVUZGWlN4VFFVRlNMSGRDUVVGNVF6dEJRVU01UXl4VFFVTkZMR2RDUVVGQlFUdEJRVUZCTEVsQlFVTTdRVUZCUVR0QlFVRkJMRTFCUTBNc1YwRkJWVHRCUVVGQkxFMUJRMVlzVlVGQlZUdEJRVUZCTEZGQlExSXNaMEpCUVVGQk8wRkJRVUVzVlVGQlF6dEJRVUZCTzBGQlFVRXNXVUZEUXl4WFFVRlZPMEZCUVVFc1dVRkRWaXhWUVVGVk8wRkJRVUVzWTBGRFVpeG5Ra0ZCUVVFc1MwRkJReXg1UWtGQmMwSTdRVUZCUVN4alFVTjJRaXhuUWtGQlFVRXNTMEZCUXl3clFrRkJORUk3UVVGQlFTeFpRVU12UWp0QlFVRkJPMEZCUVVFc1VVRkRSanRCUVVGQkxFMUJRMFk3UVVGQlFUdEJRVUZCTEVWQlEwWTdRVUZGU2pzN08wRkROMFJCTEVsQlFVMHNkVUpCUVhWQ0xFbEJRVWtzY1VKQlFYRkNPMEZCUlhaRExGTkJRVklzZFVKQlFYZERPMEZCUXpkRExGTkJRMFVzWjBKQlFVRkRPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGRFF5eGhRVUZoUXl4TFFVRkpMRmxCUVZrN1FVRkJRU3hOUVVNM1FpeFZRVUZWTEhGQ1FVRnhRaXhaUVVGWkxFVkJRVVVzUjBGQlJ5eERRVUZETEdGQlFXRTdRVUZETlVRc2JVSkJRVmNzVjBGQlZ5eFhRVUZYTEVOQlFVTTdRVUZEYkVNc1kwRkJUU3gzUWtGRFNpeHhRa0ZCY1VJc2EwSkJRV3RDTzBGQlEzcERMR1ZCUVU4c1UwRkJVeXhKUVVGSkxFTkJRVU1zV1VGRGJrSXNaMEpCUVVGRU8wRkJRVUVzVlVGQlF6dEJRVUZCTzBGQlFVRXNXVUZEUXl4WFFVRlhMSE5DUVVGelFpeEhRVUZITEVOQlFVTXNiVUpCUVcxQ08wRkJRM1JFTEd0Q1FVRkpMRmxCUVZrN1FVRkRhRUlzYTBKQlEwVXNhMEpCUTBFc1pVRkJaU3hQUVVGUExFMUJRVTBzVVVGQlVTeFBRVUZQTEVkQlF6TkRPMEZCUTBFc05rSkJRV0U3UVVGQlFTeGpRVU5tTzBGQlEwRXNjVUpCUVU4N1FVRkJRU3haUVVOVUxFTkJRVU03UVVGQlFTeFpRVU5FTEZOQlFWTXNUVUZCVFR0QlFVTmlMRzFEUVVGeFFpeHJRa0ZCYTBJc1QwRkJUenRCUVVGQkxGbEJRMmhFTzBGQlFVRXNXVUZEUVN4UFFVRlBMR2RDUVVGQlFTeExRVUZETEZkQlFVMHNUMEZCVHl4UlFVRlJMR2RDUVVGblFpeEZRVUZGTEUxQlFVMHNSMEZCUnl4RlFVRkZMRWRCUVVjN1FVRkJRVHRCUVVGQkxGRkJReTlFTEVOQlEwUTdRVUZCUVN4TlFVTklMRU5CUVVNN1FVRkJRVHRCUVVGQkxFVkJRMGc3UVVGRlNqczdPMEZETjBKbExGTkJRVklzY1VKQlFYTkRPMEZCUXpORExGRkJRVTFGTEhkQ1FVRjFRaXhKUVVGSkxIRkNRVUZ4UWp0QlFVTjBSQ3hSUVVGTlF5eFZRVUZUTEVsQlFVa3NUMEZCVHl4dlFrRkJiMEk3UVVGRk9VTXNVMEZEUlN4blFrRkJRVU03UVVGQlFTeEpRVUZETzBGQlFVRTdRVUZCUVN4TlFVTkRMRmRCUVZVN1FVRkJRU3hOUVVOV0xFOUJRMFVzWjBKQlFVRkJPMEZCUVVFc1VVRkJRenRCUVVGQk8wRkJRVUVzVlVGRFF5eFZRVUZWTzBGQlFVRXNXVUZEVWl4blFrRkJRVUU3UVVGQlFTeGpRVUZETzBGQlFVRTdRVUZCUVN4blFrRkRReXh6UWtGQmMwSkdPMEZCUVVFc1owSkJRM1JDTEdOQlEwVkJMSE5DUVVGeFFpeDNRa0ZCZDBJc1JVRkJSU3hKUVVGSkxFbEJRVWs3UVVGQlFUdEJRVUZCTEZsQlJUTkVPMEZCUVVFc1dVRkRRU3huUWtGQlFVVXNTMEZCUXl4M1FrRkJjVUk3UVVGQlFTeFpRVU4wUWl4blFrRkJRVUVzUzBGQlF5eDVRa0ZCYzBJN1FVRkJRU3hWUVVONlFqdEJRVUZCTzBGQlFVRXNUVUZEUmp0QlFVRkJPMEZCUVVFc1JVRkZTanRCUVVWS096czdRVU5zUW1Vc1UwRkJVaXhWUVVFeVFpeFBRVUYxUWp0QlFVTjJSQ3hSUVVGTkxITkNRVUZ6UWl4SlFVRkpMRzlDUVVGdlFqdEJRVU53UkN4UlFVRk5MRVZCUVVVc1YwRkJWeXhKUVVGSk8wRkJSWFpDTEZOQlEwVXNaMEpCUVVGRE8wRkJRVUVzU1VGQlF6dEJRVUZCTzBGQlFVRXNUVUZEUXl4WFFVRlZPMEZCUVVFc1RVRkRWaXhYUVVGVk8wRkJRVUVzVFVGRFZqdEJRVUZCTEUxQlEwRXNVVUZCVVVNc1QwRkJUU3hoUVVGaE8wRkJRVUVzVFVGRE0wSXNZVUZCWVVFc1QwRkJUU3haUVVGWk8wRkJRVUVzVFVGREwwSXNZVUZCWVR0QlFVRkJMRTFCUTJJc1QwRkRSU3huUWtGQlFVUTdRVUZCUVN4UlFVRkRPMEZCUVVFN1FVRkJRU3hWUVVORExHTkJRMFVzWjBKQlFVRkJPMEZCUVVFc1dVRkJRenRCUVVGQk8wRkJRVUVzWTBGRFF5eHZRa0ZCYjBJc1RVRkJUVHRCUVVONFFpeHZRMEZCYjBJc1kwRkJZeXhGUVVGRkxFbEJRVWtzT0VKQlEzQkRMRzlDUVVGdlFpeDFRMEZCYVVNc1NVRkRja1FzYjBKQlFXOUNMRzFEUVVFclFqdEJRVUZCTEdOQlEzcEVPMEZCUVVFc1kwRkRRU3hYUVVGWExHOUNRVU5TTEdOQlFXTXNSVUZEWkN4SFFVRkhMRU5CUVVNc1pVRkJaU3d5UWtGQk1rSXNWVUZCVlR0QlFVRkJMR05CUXpORUxFOUJRVThzYjBKQlFXOUNMR05CUVdNc1JVRkJSU3hIUVVGSExFTkJRVU1zWlVGQlpUdEJRVU0xUkN4M1FrRkJVU3haUVVGWk8wRkJRVUVzYTBKQlEyeENPMEZCUTBVc01rSkJRVThzWjBKQlFVRkJMRXRCUVVNc2MwSkJRVzFDTzBGQlFVRXNhMEpCUXpkQ08wRkJRMFVzTWtKQlEwVXNaMEpCUVVGQk8wRkJRVUVzYzBKQlFVTTdRVUZCUVR0QlFVRkJMSGRDUVVORE8wRkJRVUU3UVVGQlFTeHZRa0ZEUmp0QlFVRkJMR3RDUVVWS08wRkJRMFVzTWtKQlFVOHNaMEpCUVVGQkxFdEJRVU1zWlVGQldUdEJRVUZCTEdkQ1FVTjRRanRCUVVGQkxHTkJRMFlzUTBGQlF6dEJRVUZCTzBGQlFVRXNWVUZEU0R0QlFVRkJPMEZCUVVFc1RVRkZTanRCUVVGQk8wRkJRVUVzUlVGRlNqdEJRVVZLT3pzN1FVTjJSRUVzVDBGQlQwVXNaVUZCWXpzN08wRkRSSEpDTEU5QlFVOHNZMEZCWXp0QlFVZHlRaXhKUVVGeFFpdzJRa0ZCY2tJc1RVRkJaMFE3UVVGQlFTeEZRVXM1UXl4WlFVRlpMR0ZCUVhGQ08wRkJTbXBETEZOQlFWRXNWMEZCVnl4VFFVRlRMRmxCUVZrN1FVRkRlRU1zVTBGQlVTeHZRa0ZCYTBRc1NVRkJTU3hUUVVGVExFbEJRVXM3UVVGRE5VVXNVMEZCVVN4alFVRnpRanRCUVVjMVFpeFRRVUZMTEZOQlFWTXNTVUZCU1N4UFFVRlBMRGhDUVVFNFFpeFhRVUZYTEVWQlFVVTdRVUZEY0VVc1UwRkJTeXhQUVVGUExFMUJRVTBzY1VOQlFYRkRMRmRCUVZjc1JVRkJSVHRCUVVOd1JTeFRRVUZMTEdOQlFXTTdRVUZEYmtJc1ZVRkJUU3haUVVGWkxFdEJRVXNzVTBGQlV5eGpRVUZqTEZkQlFWYzdRVUZEZWtRc1VVRkJTU3hEUVVGRExGZEJRVmM3UVVGRFpDeFhRVUZMTEU5QlFVOHNUVUZCVFN4eFFrRkJjVUlzVjBGQlZ5eFpRVUZaTzBGQlF6bEVMRmxCUVUwc1NVRkJTU3hOUVVGTkxIRkNRVUZ4UWl4WFFVRlhMRmxCUVZrN1FVRkJRU3hKUVVNNVJEdEJRVU5CTEZOQlFVc3NkMEpCUVhkQ08wRkJRemRDTEZOQlFVc3NOa0pCUVRaQ0xHTkJRV003UVVGRGFFUXNVMEZCU3l3MlFrRkJOa0lzWjBKQlFXZENPMEZCUTJ4RUxGTkJRVXNzTmtKQlFUWkNMR05CUVdNN1FVRkJRU3hGUVVOc1JEdEJRVUZCTEVWQlEwOHNZVUZCZVVNN1FVRkRPVU1zVjBGQlR5eExRVUZMTEV0QlFVc3NhMEpCUVd0Q0xFbEJRVWtzUjBGQlJ5eFRRVUZUTEVWQlFVVXNSMEZCUnl4RFFVRkRMRmxCUVZrN1FVRkRia1VzVjBGQlN5eFBRVUZQTzBGQlFVRXNVVUZEVml4NVFrRkJlVUlzUzBGQlN5eFhRVUZYTEV0QlFVc3NVVUZETTBNc1NVRkJTU3hEUVVGRExGZEJRVmNzVDBGQlR5eFZRVUZWTEVOQlFVTXNSVUZEYkVNc1UwRkJVeXhEUVVGRE8wRkJRVUVzVFVGRFpqdEJRVU5CTEdGQlFVODdRVUZCUVN4SlFVTlVMRU5CUVVNN1FVRkJRU3hGUVVOSU8wRkJRVUVzUlVGRlVTd3dRa0ZCWjBNN1FVRkRkRU1zVTBGQlN5eHJRa0ZCYTBJc1NVRkJTU3hMUVVGTExGTkJRVk1zWTBGQll5eExRVUZMTEZkQlFWY3NRMEZCUXp0QlFVTjRSU3hUUVVGTExFOUJRVTg3UVVGQlFTeE5RVU5XTERSRFFVRTBReXhMUVVGTExGZEJRVmM3UVVGQlFTeEpRVU01UkR0QlFVRkJMRVZCUTBZN1FVRkJRU3hGUVVWUkxEWkNRVUUyUWl4WlFVRXdRanRCUVVNM1JDeFRRVUZMTEZOQlFWTXNVVUZCVVN4WlFVRlpMRTFCUVUwN1FVRkRkRU1zVjBGQlN5eDNRa0ZCZDBJN1FVRkROMElzVjBGQlN5eFBRVUZQTzBGQlFVRXNVVUZEVml3MFEwRkJORU1zUzBGQlN5eFhRVUZYTEdOQlFXTXNWVUZCVlR0QlFVRkJMRTFCUTNSR08wRkJRVUVzU1VGRFJpeERRVUZETzBGQlFVRXNSVUZEU0R0QlFVTkdPenM3UVVReFEwOHNTVUZCVFN3NFFrRkJUaXhOUVVGclF6dEJRVUZCTEVWQlNYWkRMR05CUVdNN1FVRklaQ3hUUVVGUkxGZEJRVmRETEZWQlFWTXNXVUZCV1R0QlFVTjRReXhUUVVGUkxGTkJRV2xDTEVsQlFVa3NUMEZCVHl4dlFrRkJiMEk3UVVGSGRFUXNVMEZCU3l4VFFVRlRMRWxCUVVrc1QwRkJUeXh2UWtGQmIwSTdRVUZETjBNc1UwRkJTeXhQUVVGUExFMUJRVTBzTkVKQlFUUkNPMEZCUVVFc1JVRkRhRVE3UVVGQlFTeEZRVVZQTEdkQ1FVRXJRenRCUVVOd1JDeFhRVUZQTEV0QlFVc3NTMEZCU3l4VlFVRlZMRmxCUVZrc1JVRkJSU3hIUVVGSExFMUJRVTA3UVVGRGFFUXNXVUZCVFN4aFFVRmhMRXRCUVVzc1UwRkRja0lzWlVGQlpTeEZRVU5tTEV0QlFVc3NRMEZCUXl4SFFVRjFRaXhOUVVFd1FqdEJRVU4wUkN4bFFVRlBMRVZCUVVVc1QwRkJUeXhKUVVGSkxFVkJRVVVzVDBGQlR6dEJRVUZCTEUxQlF5OUNMRU5CUVVNN1FVRkRTQ3hYUVVGTExFOUJRVTg3UVVGQlFTeFJRVU5XTzBGQlFVRXNVVUZEUVN4WFFVTkhMRWxCUVVrc1EwRkJReXhqUVVGclF6dEJRVU4wUXl4cFFrRkJUeXhWUVVGVkxGTkJRVk03UVVGQlFTeFJRVU0xUWl4RFFVRkRMRVZCUTBFc1UwRkJVenRCUVVGQkxFMUJRMlE3UVVGRFFTeFZRVUZKTEZkQlFWY3NWMEZCVnl4SFFVRkhPMEZCUXpOQ0xHRkJRVXNzVDBGQlR5eExRVUZMTEdsRFFVRnBRenRCUVVGQkxFMUJRM0JFTzBGQlEwRXNZVUZCVHp0QlFVRkJMRWxCUTFRc1EwRkJRenRCUVVGQkxFVkJRMGc3UVVGQlFTeEZRVVZQTEhOQ1FVRnRSRHRCUVVONFJDeFhRVUZQTEV0QlFVc3NTMEZCU3l4VlFVRlZMRzFDUVVGdFFqdEJRVUZCTEVWQlEyaEVPMEZCUVVFc1JVRkZUeXhyUWtGQmEwSXNZVUZCTWtJN1FVRkRiRVFzVVVGQlNTeERRVUZETEdGQlFXRTdRVUZEYUVJc1YwRkJTeXhQUVVGUExFMUJRVTBzTmtOQlFUWkRPMEZCUXk5RU8wRkJRVUVzU1VGRFJqdEJRVU5CTEZGQlFVa3NTMEZCU3l4VFFVRlRMSE5DUVVGelFpeEZRVUZGTEU5QlFVOHNUVUZCVFN4aFFVRmhPMEZCUTJ4RkxGZEJRVXNzVDBGQlR6dEJRVUZCTEZGQlExWXNZVUZCWVN4WFFVRlhPMEZCUVVFc1RVRkRNVUk3UVVGRFFUdEJRVUZCTEVsQlEwWTdRVUZEUVN4VFFVRkxMRTlCUVU4c1MwRkJTeXd3UWtGQk1FSXNWMEZCVnl4RlFVRkZPMEZCUTNoRUxGTkJRVXNzVTBGQlV5eGpRVUZqTEZkQlFWY3NSVUZCUlN4TlFVRk5PMEZCUVVFc1JVRkRha1E3UVVGQlFTeEZRVVZQTEhkQ1FVTk1MRmxCUXl0Q08wRkJReTlDTEZkQlFVOHNTMEZCU3l4alFVRmpMRVZCUVVVc1IwRkJSeXhEUVVGRExHVkJRWEZETzBGQlEyNUZMRmxCUVUwc2JVSkJRVzFDTEV0QlFVc3NVMEZCVXl4aFFVRmhPMEZCUTNCRUxGbEJRVTBzZDBKQlFYZENMR2xDUVVGcFFpeExRVUZMTEVOQlFVTXNXVUZCV1R0QlFVTXZSQ3hqUVVGTkxHbENRVUZwUWl4WFFVRlhMRmxCUVZrc1IwRkJSeXhUUVVGVExFdEJRVXM3UVVGREwwUXNZMEZCVFN4elFrRkJjMElzVVVGQlVTeFRRVUZUTEV0QlFVczdRVUZGYkVRc1dVRkRSU3hyUWtGRFFTeDFRa0ZEUVN4dFFrRkJiVUlzY1VKQlEyNUNPMEZCUTBFc2FVSkJRVTg3UVVGQlFTeFJRVU5VTzBGQlJVRXNaVUZEUlN4UlFVRlJMRk5CUVZNc1RVRkJUU3hYUVVGWExHbENRVUZwUWl4TFFVTnVSQ3hSUVVGUkxGVkJRVlVzVFVGQlRTeFhRVUZYTEZWQlFWVXNTMEZETjBNc1VVRkJVU3hOUVVGTkxFMUJRVTBzVjBGQlZ5eGhRVUZoTEVWQlFVVXNTMEZET1VNc1VVRkJVU3hOUVVGTkxFMUJRVTBzVjBGQlZ5eGhRVUZoTEVWQlFVVTdRVUZCUVN4TlFVVnNSQ3hEUVVGRE8wRkJSVVFzVlVGQlNTeERRVUZETEhWQ1FVRjFRanRCUVVNeFFpeGhRVUZMTEU5QlFVODdRVUZCUVN4VlFVTldPMEZCUVVFc1VVRkRSanRCUVVOQkxHVkJRVThzUTBGQlF6dEJRVUZCTEUxQlExWTdRVUZGUVN4aFFVRlBMRmRCUVZjN1FVRkJRU3hSUVVOb1FpeERRVUZETEdOQlEwTXNWVUZCVlN4WlFVRlpMRVZCUVVVc1QwRkJUeXhOUVVGTkxITkNRVUZ6UWl4UFFVRlBPMEZCUVVFc1RVRkRkRVU3UVVGQlFTeEpRVU5HTEVOQlFVTTdRVUZCUVN4RlFVTklPMEZCUVVFc1JVRkZUeXd3UWtGRFRDeGhRVU0wUWp0QlFVTTFRaXhYUVVGUExFbEJRVWtzTWtKQlFUSkNMRmRCUVZjN1FVRkJRU3hGUVVOdVJEdEJRVU5HT3pzN1FVVTVSa0VzU1VGQlRTeHpRa0ZEU2l4SlFVRkpMRFJDUVVFMFFqdEJRVU5zUXl4SlFVRk5MRk5CUVZNc1NVRkJTU3hQUVVGUExHVkJRV1U3UVVGRmVrTXNTVUZCVFN4cFFrRkJhVUk3UVVGRmRrSXNTVUZCVFN4cFFrRkJhVUlzUTBGQlF5eGpRVUZ0UkR0QlFVTjZSU3hUUVVGUExHOUNRVU5LTERCQ1FVRXdRaXhWUVVGVkxFOUJRVThzUTBGQlF5eEZRVU0xUXl4WFFVRlhMRVZCUTFnc1IwRkJSeXhEUVVGRExGbEJRVms3UVVGRFppeFZRVUZOTEdOQlFXTXNVVUZCVVR0QlFVTTFRaXhWUVVGTkxGbEJRMG9zWjBKQlFXZENMRWxCUVVrc2FVSkJRV2xDTEdOQlFXTXNhVUpCUVdsQ08wRkJRM1JGTEZkQlFVODdRVUZCUVN4RlFVTlVMRU5CUVVNN1FVRkRURHRCUVVWQkxFbEJRVTBzZDBKQlFYZENMRU5CUVVNc1pVRkJOa003UVVGRE1VVXNVMEZCVHl4dlFrRkRTaXgzUWtGQmQwSXNWVUZCVlN4RlFVTnNReXhIUVVGSExFTkJRVU1zWlVGQlpUdEJRVU5zUWl4VlFVRk5MRzFDUVVGdFFpeHZRa0ZCYjBJc2IwSkJRVzlDTzBGQlEycEZMRlZCUVUwc1VVRkJVU3hYUVVGWExFOUJRVThzUTBGQlF5eExRVUZMTEdOQlFXTTdRVUZEYkVRc1lVRkRSU3hQUVVORExHVkJRV1VzVTBGQlV5eEZRVUZGTEVsQlFVa3NTVUZCU1N4TlFVTnNReXhWUVVGVkxFOUJRVThzVFVGQlRTeHBRa0ZCYVVJc1NVRkJTU3hGUVVGRkxFOUJRVThzU1VGQlNTeExRVUZMTzBGQlFVRXNTVUZGYmtVc1IwRkJSeXhEUVVGRE8wRkJRMG9zVjBGQlR6dEJRVUZCTEUxQlEwd3NLME5CUVN0RExGZEJRVmNzYVVKQlFXbENMRU5CUVVNc1MwRkJTeXhMUVVGTE8wRkJRVUVzU1VGRGVFWTdRVUZEUVN4WFFVRlBPMEZCUVVFc1JVRkRWQ3hEUVVGRE8wRkJRMHc3UVVGRlFTeEpRVUZOTEc5Q1FVRnZRaXhEUVVGRExGZEJRVzlETzBGQlF6ZEVMRkZCUVUwc1dVRkJXU3hQUVVGUExGVkJRVlVzUlVGQlJTeFpRVUZaTzBGQlEycEVMRkZCUVUwc2EwSkJRV3RDTzBGQlEzaENMRTFCUVVrc1ZVRkJWU3hYUVVGWExHVkJRV1VzUjBGQlJ6dEJRVU42UXl4WFFVRlBMRlZCUVZVc1VVRkJVU3hwUWtGQmFVSXNSVUZCUlR0QlFVRkJMRVZCUXpsRE8wRkJRMEVzVTBGQlR6dEJRVU5VTzBGQlRVRXNTVUZCVFN4NVFrRkJlVUlzUTBGQlF5eGpRVUZyUXp0QlFVTm9SU3hUUVVGUExHOUNRVU5LTERCQ1FVRXdRaXhWUVVGVkxFOUJRVThzUTBGQlF5eEZRVU0xUXl4WFFVRlhMRVZCUTFnc1IwRkJSeXhEUVVGRExGbEJRMGdzWjBKQlFVRkRPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGRFF5eFhRVUZWTzBGQlFVRXNUVUZEVml4UFFVTkZMRkZCUVZFc1YwRkJWeXhKUVVOcVFpeG5Ra0ZCUVVFc1MwRkJReXhUUVVGSkxFbEJSVXdzWjBKQlFVRkJPMEZCUVVFc1VVRkJRenRCUVVGQk8wRkJRVUVzVlVGRFF5eFJRVUZSUXl4TFFVRkpMRTFCUVUwN1FVRkJRU3hWUVVOc1FpeFJRVUZSUVN4TFFVRkpMRTFCUVUwN1FVRkJRU3hWUVVOc1FpeFhRVUZWTzBGQlFVRXNWVUZEVml4VlFVRlZMRkZCUVZFc1NVRkJTU3hEUVVGRExGZEJRM0pDTEdkQ1FVRkJSRHRCUVVGQkxGbEJRVU03UVVGQlFUdEJRVUZCTEdOQlEwTXNUVUZCVFN4clFrRkJhMElzVFVGQlRUdEJRVUZCTEdOQlF6bENMRmRCUVZVN1FVRkJRVHRCUVVGQkxGVkJRMW9zUTBGRFJEdEJRVUZCTzBGQlFVRXNUVUZEU0R0QlFVRkJPMEZCUVVFc1JVRkhUaXhEUVVORU8wRkJRMHc3UVVGRlFTeEpRVUZOTEd0Q1FVRnJRaXhEUVVGRExHTkJRV3RETzBGQlEzcEVMRk5CUTBVc1owSkJRVUZCTzBGQlFVRXNTVUZCUXp0QlFVRkJPMEZCUVVFc1RVRkRReXhqUVVGakxHVkJRV1VzVTBGQlV6dEJRVUZCTEUxQlEzUkRMRmRCUVZjc2IwSkJRMUlzYjBKQlFXOUNMRVZCUTNCQ08wRkJRVUVzVVVGRFF5eERRVUZETEhGQ1FVTkRMSE5DUVVORExHbENRVUZwUWl4UFFVRlBMRTFCUVUwc1ZVRkJWU3hQUVVGUExFbEJRelZETEdGQlEwRTdRVUZCUVN4TlFVTlNPMEZCUVVFc1RVRkRSaXhQUVVGUExIVkNRVUYxUWl4VFFVRlRPMEZCUVVFc1RVRkRka01zVTBGQlV5eE5RVUZOTzBGQlEySXNaVUZCVHp0QlFVRkJMRlZCUTB3c2FVTkJRV2xETEZWQlFWVXNUMEZCVHl4RFFVRkRPMEZCUVVFc1VVRkRja1E3UVVGRFFTdzBRa0ZCYjBJc2EwSkJRV3RDTEZWQlFWVXNUMEZCVHl4RFFVRkRPMEZCUVVFc1RVRkRNVVE3UVVGQlFUdEJRVUZCTEVWQlEwWTdRVUZGU2p0QlFVVmxMRk5CUVZJc1kwRkJLMElzVDBGQk1rSTdRVUZETDBRc1VVRkJUU3hoUVVFd1FpeE5RVUZOTzBGQlJYUkRMRk5CUVU4N1FVRkJRU3hKUVVOTUxHOURRVUZ2UXl4WFFVRlhMR2xDUVVGcFFpeERRVUZETzBGQlFVRXNSVUZEYmtVN1FVRkZRU3hUUVVORkxHZENRVUZCUVR0QlFVRkJMRWxCUVVNN1FVRkJRVHRCUVVGQkxFMUJRME1zVVVGQlVVTXNTMEZCU1N4TlFVRk5PMEZCUVVFc1RVRkRiRUlzVVVGQlVVRXNTMEZCU1N4TlFVRk5PMEZCUVVFc1RVRkRiRUlzVjBGQlZUdEJRVUZCTEUxQlExWXNTMEZCU3l4elFrRkJjMElzVlVGQlZTeEZRVUZGTzBGQlFVRXNVVUZEY2tNc1EwRkJReXhWUVVGclFpeGpRVUZqTEV0QlFVczdRVUZCUVN4TlFVTjRRenRCUVVGQkxFMUJRMEVzVDBGQlR5eHZRa0ZEU2l4M1FrRkJkMElzVlVGQlZTeEZRVU5zUXl4SFFVRkhMRU5CUVVNc1pVRkRTQ3huUWtGQlFVUXNTMEZCUXl4VFFVRkpMRlZCUVZVc1YwRkJWeXhKUVVGSkxHVkJRV1VzUjBGQlJ5eERRVU5xUkR0QlFVRkJPMEZCUVVFc1JVRkRURHRCUVVWS096czdRVU5zU1VFc1QwRkJUeXhWUVVGVk8wRkJTVllzU1VGQlRTeHpRa0ZCVGl4TlFVRXdRanRCUVVGQkxFVkJTeTlDTEdOQlFXTTdRVUZLWkN4VFFVRnBRaXhQUVVGUExFdEJRVXNzV1VGQldUdEJRVU42UXl4VFFVRnBRaXhUUVVGcFFpeEpRVUZKTEU5QlFVOHNTMEZCU3l4WlFVRlpMRWxCUVVrN1FVRkRiRVVzVTBGQlVTeHJRa0ZCYTBRc1NVRkJTU3hUUVVGVExFbEJRVWs3UVVGQlFTeEZRVVUxUkR0QlFVRkJMRVZCUlZJc1pVRkJlVU03UVVGRE9VTXNWMEZCVHl4TFFVRkxMRXRCUVVzc1RVRkJUU3hQUVVGUE8wRkJRVUVzUlVGRGFFTTdRVUZCUVN4RlFVTlBMSEZDUVVGdlJEdEJRVU42UkN4WFFVRlBMRXRCUVVzc1MwRkJTeXhsUVVGbE8wRkJRVUVzUlVGRGJFTTdRVUZCUVN4RlFVVlBMRzFDUVVGdFFpeE5RVUZyUXp0QlFVTXhSQ3hSUVVGSkxFTkJRVU1zVFVGQlRUdEJRVU5VTEZkQlFVc3NUMEZCVHl4TlFVRk5MRFJDUVVFMFFqdEJRVU01UXl4WFFVRkxMR2RDUVVGblFpeEpRVUZKTEVsQlFVazdRVUZCUVN4SlFVTXZRaXhQUVVGUE8wRkJRMHdzVjBGQlN5eFBRVUZQTEUxQlFVMHNjMEpCUVhOQ0xFdEJRVXNzVlVGQlZTeERRVUZETzBGQlEzaEVMRmRCUVVzc1owSkJRV2RDTEVsQlFVa3NTVUZCU1R0QlFVRkJMRWxCUXk5Q08wRkJRVUVzUlVGRFJqdEJRVUZCTEVWQlJVOHNaMEpCUVdkQ0xFMUJRVEpDTzBGQlEyaEVMRk5CUVVzc1QwRkJUenRCUVVGQkxFMUJRMVk3UVVGQlFTeE5RVU5CTEV0QlFVc3NWVUZCVlR0QlFVRkJMRTFCUTJZc1MwRkJTeXhaUVVGWkxFZEJRVWM3UVVGQlFTeE5RVU53UWl4TFFVRkxMR05CUVdNN1FVRkJRU3hKUVVOeVFqdEJRVU5CTEZOQlFVc3NZMEZCWXp0QlFVRkJMRVZCUTNKQ08wRkJRMFk3T3p0QlF6bENUeXhKUVVGTkxHbENRVUZwUWl4RFFVRkRMRlZCUXpkQ0xFMUJRVTBzVjBGQlZ5eEpRVUZKTzBGQlQyaENMRWxCUVUwc2JVSkJRVzFDTEVOQlFVTXNWVUZETDBJc1RVRkJUU3hYUVVGWExFbEJRVWs3T3p0QlEwVjJRaXhKUVVGTkxGbEJRVmtzUTBGQlF5eEZRVUZGTEV0QlFVc3NUVUZCYlVNN1FVRkRNMFFzVTBGRFJTeG5Ra0ZCUVVVN1FVRkJRU3hKUVVGRE8wRkJRVUU3UVVGQlFTeE5RVU5ETEZkQlFWVTdRVUZCUVN4TlFVTldMRkZCUVU4N1FVRkJRU3hOUVVOUUxGTkJRVk1zUTBGQlF5eE5RVUZOTEZWQlFWVTdRVUZEZUVJc1dVRkJTU3hsUVVGbExFdEJRVXNzUjBGQlJ6dEJRVU42UWl4bFFVRkxMRk5CUVZNc1IwRkJSeXhEUVVGRE8wRkJRVUVzVVVGRGNFSTdRVUZGUVN4WlFVRkpMR2xDUVVGcFFpeExRVUZMTEVkQlFVYzdRVUZETTBJc1owSkJRVTBzV1VGQldTeExRVUZMTEdWQlFXVTdRVUZEZEVNc1owSkJRVTBzWTBGQll5eExRVUZMTEdsQ1FVRnBRanRCUVVVeFF5eGpRVUZKTEdGQlFXRXNZVUZCWVR0QlFVTTFRaXhyUWtGQlRTeFBRVUZQUXl4TFFVRkpMRXRCUVVzc1pVRkJaU3hUUVVGVE8wRkJRemxETEdsQ1FVRkxMRzlDUVVGdlFpeFpRVUZaTEZkQlFWYzdRVUZEYUVRc2FVSkJRVXM3UVVGQlFTeGpRVU5JTzBGQlFVRXNZMEZEUVN4SlFVRkpMRkZCUVZFN1FVRkJRU3hqUVVOYUxFbEJRVWtzVVVGQlVUdEJRVUZCTEdOQlExbzdRVUZCUVN4WlFVTkdPMEZCUVVFc1ZVRkRSanRCUVVGQkxGRkJRMFk3UVVGQlFTeE5RVU5HTzBGQlFVRXNUVUZEUVN4UFFVTkZMR2RDUVVGQlJEdEJRVUZCTEZGQlFVTTdRVUZCUVR0QlFVRkJMRlZCUTBNc1YwRkJWVHRCUVVGQkxGVkJRMVlzVlVGQlZUdEJRVUZCTEZWQlExWXNWVUZCVlR0QlFVRkJMRmxCUTFJc1owSkJRVUZCTzBGQlFVRXNZMEZCUXp0QlFVRkJPMEZCUVVFc1owSkJRME1zVDBGQlR5eExRVUZMTEUxQlFVMHNUMEZCVHl4RlFVRkZPMEZCUVVFc2EwSkJRM3BDTEVOQlFVTXNWVUZCVlN4VFFVRlRMRXRCUVVzc1dVRkJXU3hIUVVGSExGTkJRVk03UVVGQlFTeG5Ra0ZEYmtRN1FVRkJRVHRCUVVGQkxGbEJRMFk3UVVGQlFTeFpRVU5CTEdkQ1FVRkJRVHRCUVVGQkxHTkJRVU03UVVGQlFUdEJRVUZCTEdkQ1FVTkRMRTlCUVU4c1MwRkJTeXhOUVVGTkxGTkJRVk1zUlVGQlJUdEJRVUZCTEd0Q1FVTXpRaXhEUVVGRExGbEJRVmtzVTBGQlV5eGxRVUZsTzBGQlFVRXNaMEpCUTNaRE8wRkJRVUU3UVVGQlFTeFpRVU5HTzBGQlFVRXNWVUZEUmp0QlFVRkJPMEZCUVVFc1RVRkRSanRCUVVGQk8wRkJRVUVzUlVGRlNqdEJRVVZLTzBGQlJXVXNVMEZCVWl4alFVRXJRaXhQUVVFeVFqdEJRVU12UkN4UlFVRk5MRVZCUVVVc2NVSkJRVUZGTEhGQ1FVRnZRaXhKUVVGSk8wRkJRMmhETEZGQlFVMHNZMEZCWTBFc2NVSkJRVzlDTEcxQ1FVRnRRanRCUVVVelJDeFRRVU5GTEdkQ1FVRkJSanRCUVVGQkxFbEJRVU03UVVGQlFUdEJRVUZCTEUxQlEwTXNWMEZCVnp0QlFVRkJMRTFCUTFnc1ZVRkJWVHRCUVVGQkxFMUJRMVlzVDBGQlR5eFpRVUZaTEVkQlFVY3NRMEZCUXl4VFFVRlRPMEZCUXpsQ0xGbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4bFFVRmxMRWRCUVVjN1FVRkRia01zYVVKQlFVOHNaMEpCUVVGQkxFdEJRVU1zVTBGQlNUdEJRVUZCTEZGQlEyUTdRVUZEUVN4bFFVRlBMR2RDUVVGQlFTeExRVUZETEdGQlFWVXNUVUZCV1R0QlFVRkJMRTFCUTJoRExFTkJRVU03UVVGQlFUdEJRVUZCTEVWQlEwZzdRVUZGU2pzN08wRkROMFZCTEVsQlFVMHNNa0pCUVRKQ08wRkJSV3BETEZOQlFWTXNhVUpCUTFBc1YwRkRRU3hOUVVOcFFqdEJRVU5xUWl4UlFVRk5MRzlDUVVGdlFpeFZRVU4yUWl4aFFVRmhMRVZCUTJJc1NVRkJTU3hGUVVOS0xFOUJRVThzUTBGQlEwY3NWVUZCVTBFc1RVRkJTeXhWUVVGVkxFTkJRVU03UVVGRGNFTXNVMEZCVHl4VlFVRlZMRzFDUVVGdFFpeEZRVUZGTEVkQlFVY3NRMEZCUXl4WlFVRlpPMEZCUTNCRUxGRkJRVWtzVlVGQlZUdEJRVU5rTEZGQlFVa3NWMEZCVnl4UlFVRlJMRlZCUVZVc1RVRkJUU3hMUVVGTExGVkJRVlVzUjBGQlJ6dEJRVU4yUkN4cFFrRkJWenRCUVVGQkxFbEJRMklzVDBGQlR6dEJRVU5NTEdsQ1FVRlhPMEZCUVVFc1NVRkRZanRCUVVOQkxGRkJRVWtzYTBKQlFXdENMRkZCUVZFc1NVRkJTU3hOUVVGTkxFZEJRVWM3UVVGRGVrTXNhVUpCUVZjN1FVRkJRU3hKUVVOaU8wRkJRMEVzVVVGQlNTeHJRa0ZCYTBJc1VVRkJVU3hKUVVGSkxFMUJRVTBzYTBKQlFXdENMRk5CUVZNc1IwRkJSenRCUVVOd1JTeHBRa0ZCVnp0QlFVRkJMRWxCUTJJN1FVRkZRU3hYUVVGUE8wRkJRVUVzUlVGRFZDeERRVUZETzBGQlEwZzdRVUZGUVN4SlFVRk5MREJDUVVFd1FpeERRVU01UWtNc2MwSkJRMEVzVTBGRFJ6dEJRVU5JTEZGQlFVMHNiVUpCUVcxQ1FTeHhRa0ZCYjBJc2JVSkJRVzFDTEVWQlFVVXNTVUZCU1R0QlFVTjBSU3hOUVVGSkxHOUNRVUZ2UWl4cFFrRkJhVUlzVlVGQlZTeE5RVUZOTEV0QlFVc3NWVUZCVlN4SFFVRkhPMEZCUTNwRkxFbEJRVUZCTEhGQ1FVRnZRaXh0UWtGQmJVSXNTVUZCU1R0QlFVRkJMRVZCUXpkRExFOUJRVTg3UVVGRFRDeEpRVUZCUVN4eFFrRkJiMElzYlVKQlFXMUNMRWxCUVVrN1FVRkRNME03UVVGQlFTeE5RVUZSTzBGQlFVRXNUVUZCTUVJc1RVRkRhRU5CTEhGQ1FVRnZRaXh0UWtGQmJVSXNTVUZCU1R0QlFVRkJMRWxCUXpkRE8wRkJRVUVzUlVGRFJqdEJRVU5HTzBGQlQyVXNVMEZCVWl4eFFrRkJjME1zVDBGQmEwTTdRVUZETjBVc1VVRkJUU3hGUVVGRkxIRkNRVUZCUVN4elFrRkJjVUlzUzBGQlN5eEpRVUZKTzBGQlEzUkRMRkZCUVUwc2MwSkJRWGRFTEVOQlFVTTdRVUZETDBRc2MwSkJRVzlDTEhOQ1FVRnpRaXhKUVVGSk8wRkJRVUVzU1VGRE5VTXNUVUZCVFR0QlFVRkJMRVZCUTFJN1FVRkRRU3h6UWtGQmIwSXNVMEZCVXl4SlFVRkpPMEZCUVVFc1NVRkRMMElzVFVGQlRUdEJRVUZCTEVWQlExSTdRVUZGUVN4VFFVTkZMR2RDUVVGQlF6dEJRVUZCTEVsQlFVTTdRVUZCUVR0QlFVRkJMRTFCUTBNc1VVRkJVVHRCUVVGQkxFMUJRMUlzVTBGQlV6dEJRVUZCTEUxQlExUXNWMEZCVnl4cFFrRkJhVUpFTEhOQ1FVRnhRaXhKUVVGSk8wRkJRVUVzVFVGRGNrUXNiMEpCUVc5Q0xFMUJRMnhDTEhkQ1FVRjNRa0VzYzBKQlFYRkNMRWxCUVVrN1FVRkJRU3hOUVVWdVJDeFRRVUZUTEUxQlFVMUJMSEZDUVVGdlFpeG5Ra0ZCWjBJc1NVRkJTVHRCUVVGQkxFMUJRM1pFTEU5QlEwVXNaMEpCUVVGRE8wRkJRVUVzVVVGQlF6dEJRVUZCTzBGQlFVRXNWVUZEUXl4TlFVRk5MRXRCUVVzc1RVRkJUU3hWUVVGVkxFVkJRVVVzUjBGQlJ5eERRVUZETEdGQlFXRTdRVUZETlVNc1owSkJRVWtzUTBGQlF5eFZRVUZWTzBGQlEySXNjVUpCUVU4c2IwSkJRVzlDTEV0QlFVc3NUMEZCVHl4RFFVRkRMRWRCUVVjc1VVRkJVVHRCUVVGQkxGbEJRM0pFTzBGQlEwRXNiVUpCUVU4N1FVRkJRU3hWUVVOVUxFTkJRVU03UVVGQlFUdEJRVUZCTEUxQlEwZzdRVUZCUVR0QlFVRkJMRVZCUlVvN1FVRkZTanM3TzBGRGNFWkJMRWxCUVU4c2NVSkJRVkU3UVVGQlFTeEZRVU5pTEZsQlFWazdRVUZCUVN4SlFVTldMR05CUVdNN1FVRkJRU3hOUVVOYUxFOUJRVTg3UVVGQlFTeE5RVU5RTEZWQlFWVTdRVUZCUVN4SlFVTmFPMEZCUVVFc1NVRkRRU3hwUWtGQmFVSTdRVUZCUVN4TlFVTm1MRTlCUVU4N1FVRkJRU3hOUVVOUUxGVkJRVlU3UVVGQlFTeEpRVU5hTzBGQlFVRXNTVUZEUVN4alFVRmpPMEZCUVVFc1RVRkRXaXhQUVVGUE8wRkJRVUVzVFVGRFVDeFZRVUZWTzBGQlFVRXNTVUZEV2p0QlFVRkJMRWxCUTBFc1kwRkJZenRCUVVGQkxFMUJRMW9zVDBGQlR6dEJRVUZCTEUxQlExQXNWVUZCVlR0QlFVRkJMRWxCUTFvN1FVRkJRU3hKUVVOQkxHbENRVUZwUWp0QlFVRkJMRTFCUTJZc1QwRkJUenRCUVVGQkxFMUJRMUFzVlVGQlZUdEJRVUZCTEVsQlExbzdRVUZCUVN4SlFVTkJMR05CUVdNN1FVRkJRU3hOUVVOYUxFOUJRVTg3UVVGQlFTeE5RVU5RTEZWQlFWVTdRVUZCUVN4SlFVTmFPMEZCUVVFc1JVRkRSanRCUVVOR096czdRVU51UWtFc1NVRkJUVU1zVlVGQlV5eEpRVUZKTEU5QlFVOHNaVUZCWlR0QlFVTjZReXhKUVVGTkxITkNRVUZ6UWl4SlFVRkpMRzlDUVVGdlFqdEJRVVUzUXl4VFFVRlRMR0ZCUVdFN1FVRkRNMElzVTBGRFJTeG5Ra0ZCUVVNN1FVRkJRU3hKUVVGRE8wRkJRVUU3UVVGQlFTeE5RVU5ETEZkQlFWY3NTMEZCU3l4dlFrRkJiMElzYlVKQlFXMUNMRU5CUVVNc1JVRkJSVHRCUVVGQkxGRkJRM2hFTEVOQlFVTXNiMEpCUVc5Q08wRkJRMjVDTEdsQ1FVTkZMSEZEUVVORExHdENRVUZyUWl4aFFVRmhPMEZCUVVFc1VVRkZjRU03UVVGQlFTeE5RVU5HTzBGQlFVRXNUVUZEUVN4UFFVTkZMR2RDUVVGQlFUdEJRVUZCTEZGQlFVTTdRVUZCUVR0QlFVRkJMRlZCUTBNc1YwRkJWeXhMUVVGTExHOUNRVUZ2UWl4dFFrRkJiVUlzUTBGQlF5eEZRVUZGTzBGQlFVRXNXVUZEZUVRc1EwRkJReXh2UWtGQmIwSTdRVUZEYmtJc2NVSkJRVThzYVVKQlFXbENMR3RDUVVGclFpeGhRVUZoTzBGQlFVRXNXVUZEZWtRN1FVRkJRU3hWUVVOR08wRkJRVUVzVlVGRFFTeFZRVUZWTzBGQlFVRXNWVUZEVml4UlFVRlJReXhMUVVGSkxFMUJRVTA3UVVGQlFTeFZRVU5zUWl4UlFVRlJRU3hMUVVGSkxFMUJRVTA3UVVGQlFTeFZRVU5zUWl4VlFVRlZPMEZCUVVFc1dVRkRVaXhuUWtGQlFVUTdRVUZCUVN4alFVRkRPMEZCUVVFN1FVRkJRU3huUWtGRFF5eFhRVUZYTzBGQlFVRXNaMEpCUTFnc1ZVRkJWU3h2UWtGRFVDeGhRVUZoTEVWQlEySTdRVUZCUVN4clFrRkJSeXhEUVVGRExGVkJRMGdzVFVGRFJ5eFBRVUZQTEVOQlFVTXNVMEZCVXl4TFFVRkxMRlZCUVZVc1RVRkJUU3hKUVVGSkxFVkJRekZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRlZCUTFZc1owSkJRVUZCTzBGQlFVRXNiMEpCUVVNN1FVRkJRVHRCUVVGQkxITkNRVU5ETzBGQlFVRXNjMEpCUTBFN1FVRkJRVHRCUVVGQkxHdENRVU5HTEVOQlEwUTdRVUZCUVN4blFrRkRURHRCUVVGQk8wRkJRVUVzV1VGRFNqdEJRVUZCTEZsQlEwRXNaMEpCUVVGQk8wRkJRVUVzWTBGQlF6dEJRVUZCTzBGQlFVRXNaMEpCUTBNc1owSkJRV2RDUXl4TFFVRkpMSFZDUVVGMVFqdEJRVUZCTEdkQ1FVTXpReXh2UWtGQmIwSXNiVUpCUVZjc1YwRkJWeXhoUVVGaE8wRkJRVUVzWjBKQlEzWkVMR0ZCUVdFc2IwSkJRMVlzYlVKQlFXMUNMRVZCUTI1Q0xFZEJRVWNzUTBGQlF5eHZRa0ZCYjBJN1FVRkRka0lzZVVKQlFVOHNiMEpCUVc5Q08wRkJRVUVzWjBKQlF6ZENMRU5CUVVNN1FVRkJRU3huUWtGRFNDeFBRVU5GTEdkQ1FVRkJSQ3hMUVVGRExHbENRVUZqTEhGQ1FVRXdRenRCUVVGQk8wRkJRVUVzV1VGRk4wUTdRVUZCUVN4VlFVTkdPMEZCUVVFN1FVRkJRU3hOUVVOR08wRkJRVUU3UVVGQlFTeEZRVVZLTzBGQlJVbzdPenRCUTJwRlFTeFBRVUZQTEdGQlFXRTdRVUZKY0VJc1NVRkJjVUlzYlVKQlFYSkNMRTFCUVhORE8wRkJRVUVzUlVGQmRFTTdRVUZEU1N4VFFVRlJMRk5CUVZNc1NVRkJTU3hQUVVGUExFdEJRVXNzV1VGQldTeEpRVUZKTzBGQlEycEVMRk5CUVZFc1ZVRkJWU3hSUVVGUkxGbEJRVms3UVVGQlFUdEJRVUZCTEVWQlJTOUNMSFZDUVVGM1F6dEJRVU16UXl4WFFVRlBMRXRCUVVzc1MwRkJTeXhUUVVGVExGbEJRVms3UVVGQlFTeEZRVU14UXp0QlFVRkJMRVZCUlU4c2EwSkJRVEJETzBGQlF6ZERMRmRCUVU4c1MwRkJTeXhMUVVGTExGTkJRVk1zVDBGQlR6dEJRVUZCTEVWQlEzSkRPMEZCUVVFc1JVRkZUeXhwUWtGQmEwTTdRVUZEY2tNc1YwRkJUeXhMUVVGTExFdEJRVXNzVTBGQlV5eFhRVUZYTzBGQlFVRXNSVUZEZWtNN1FVRkZTanM3TzBGRFprRXNVMEZCVXl3clFrRkJLMEk3UVVGRGRFTXNVVUZCVFVVc1ZVRkJVeXhKUVVGSkxFOUJRVThzT0VKQlFUaENPMEZCUTNoRUxGRkJRVTBzYlVKQlFXMUNMRWxCUVVrc2FVSkJRV2xDTzBGQlF6bERMRk5CUTBVc1owSkJRVUZETzBGQlFVRXNTVUZCUXp0QlFVRkJPMEZCUVVFc1RVRkRReXhYUVVGWE8wRkJRVUVzVFVGRFdDeFRRVUZUTzBGQlFVRXNUVUZEVkN4UFFVRlBMR2xDUVVGcFFpeHhRa0ZCY1VJc1JVRkJSU3hIUVVGSExFTkJRVU1zWlVGQlpUdEJRVU5vUlN4UlFVRkJSQ3hSUVVGUExFMUJRVTBzZFVKQlFYVkNMRlZCUVZVc1JVRkJSVHRCUVVOb1JDeGxRVUZQTzBGQlFVRXNUVUZEVkN4RFFVRkRPMEZCUVVFc1RVRkRSQ3hUUVVGVE8wRkJRVUVzVFVGRFZDeFBRVUZQTzBGQlFVRXNUVUZEVUN4UFFVRlBMR2RDUVVGQlF5eExRVUZETEZWQlFVc3NUVUZCVFN4cFFrRkJhVUlzWlVGQlpTeEhRVUZITzBGQlFVRTdRVUZCUVN4RlFVTjRSRHRCUVVWS08wRkJSV1VzVTBGQlVpeDVRa0ZCTUVNN1FVRkRMME1zVVVGQlRVUXNWVUZCVXl4SlFVRkpMRTlCUVU4c1pVRkJaVHRCUVVONlF5eFJRVUZOTEcxQ1FVRnRRaXhKUVVGSkxHbENRVUZwUWp0QlFVTTVReXhGUVVGQlFTeFJRVUZQTEUxQlFVMHNhVU5CUVdsRE8wRkJRemxETEZOQlEwVXNaMEpCUVVGRE8wRkJRVUVzU1VGQlF6dEJRVUZCTzBGQlFVRXNUVUZEUXl4UlFVRlJReXhMUVVGSkxFMUJRVTA3UVVGQlFTeE5RVU5zUWl4UlFVRlJRU3hMUVVGSkxFMUJRVTA3UVVGQlFTeE5RVU5zUWl4WFFVRlZPMEZCUVVFc1RVRkRWaXhWUVVGVkxFTkJRVU1zWjBKQlFVRkVMRXRCUVVNc1owTkJRVFpDTEVOQlFVVTdRVUZCUVR0QlFVRkJMRVZCUXpkRE8wRkJSVW83T3p0QlEyeERRU3hQUVVGUFJTeFZRVUZUT3pzN1FVTkVhRUlzVDBGQlQwTXNWVUZCVXpzN08wRkRRMmhDTEU5QlFVOHNXVUZCV1R0QlFVVmFMRWxCUVUwc2QwSkJRVTRzVFVGQk5FSTdRVUZCUVN4RlFVdHFReXhqUVVGak8wRkJTbVFzVTBGQlVTeFZRVUZWTEU5QlFVOHNXVUZCV1R0QlFVTnlReXhUUVVGUkxIRkNRVUZ4UWl4VFFVRnJRaXhMUVVGTE8wRkJRM0JFTEZOQlFWRXNhMEpCUVdsRE8wRkJSM1pETEZOQlFVc3NVVUZCVVN4UlFVRlJMRmxCUVZrc1RVRkJUVHRCUVVOeVF5eFhRVUZMTEhOQ1FVRnpRanRCUVVGQkxFbEJRemRDTEVOQlFVTTdRVUZCUVN4RlFVTklPMEZCUVVFc1JVRkZVU3gzUWtGQmQwSTdRVUZET1VJc1VVRkJTU3hMUVVGTExHbENRVUZwUWp0QlFVTjRRaXh0UWtGQllTeExRVUZMTEdWQlFXVTdRVUZCUVN4SlFVTnVRenRCUVVOQkxGTkJRVXNzYlVKQlFXMUNMRWxCUVVrc1NVRkJTVHRCUVVGQkxFVkJRMnhETzBGQlFVRXNSVUZGVHl4cFFrRkRUQ3hQUVVGMVFpeE5RVU5UTzBGQlEyaERMRmRCUVU4c1MwRkJTeXhMUVVGTExGTkJRVk1zWlVGQlpTeEZRVUZGTEVkQlFVY3NRMEZCUXl4clFrRkJhMEk3UVVGREwwUXNWVUZCU1N4TlFVRk5PMEZCUTFJc2QwSkJRV2RDTEdOQlFXTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1RVRkJUVHRCUVVNelF5eHBRa0ZCVHl4RlFVRkZMRk5CUVZNc1NVRkJTU3hGUVVGRkxGTkJRVk03UVVGQlFTeFJRVU51UXl4RFFVRkRPMEZCUVVFc1RVRkRTRHRCUVVOQkxHRkJRVTg3UVVGQlFTeEpRVU5VTEVOQlFVTTdRVUZCUVN4RlFVTklPMEZCUVVFc1JVRkZUeXdyUWtGRFRDeFZRVU5CTzBGQlEwRXNVMEZCU3l4UlFVRlJMRkZCUVZFc1dVRkJXU3hEUVVGRExFMUJRVTBzVDBGQlR6dEJRVU0zUXl4bFFVRlRMRTFCUVUwc1JVRkJSVHRCUVVGQkxFbEJRMjVDTEVOQlFVTTdRVUZCUVN4RlFVTklPMEZCUVVFc1JVRkZUeXh2UWtGQmIwSXNTVUZCYVVNN1FVRkRNVVFzVjBGQlR5eExRVUZMTEZGQlFWRXNhVUpCUVdsQ0xFVkJRVVU3UVVGQlFTeEZRVU42UXp0QlFVRkJMRVZCUlU4c2IwSkJRWE5ETzBGQlF6TkRMRmRCUVU4c1MwRkJTeXhMUVVGTExGTkJRVk1zWVVGQllUdEJRVUZCTEVWQlEzcERPMEZCUVVFc1JVRkZUeXhuUWtGQlowSXNUMEZCWjBJN1FVRkRja01zVTBGQlN5eFJRVUZSTEdsQ1FVRnBRaXhMUVVGTE8wRkJRVUVzUlVGRGNrTTdRVUZEUmpzN08wRkViRVJCTEVsQlFVMHNPRUpCUVRoQ08wRkJRM0JETEVsQlFVMHNaME5CUVdkRE8wRkJSWFJETEVsQlFVMHNNRUpCUVRCQ08wRkJRMmhETEVsQlFVMHNORUpCUVRSQ08wRkJRMnhETEVsQlFVMHNkMEpCUVhkQ0xFbEJRVWtzYzBKQlFYTkNPMEZCUldwRUxGTkJRVk1zZVVKQlFYbENPMEZCUTNaRExGRkJRVTFETEZWQlFWTXNTVUZCU1N4UFFVRlBMSGRDUVVGM1FqdEJRVU5zUkN4VFFVTkZMR2RDUVVGQlF6dEJRVUZCTEVsQlFVTTdRVUZCUVR0QlFVRkJMRTFCUTBNc1YwRkJWenRCUVVGQkxFMUJRMWdzVTBGQlV6dEJRVUZCTEUxQlExUXNVVUZCVVVNc1MwRkJTU3hOUVVGTk8wRkJRVUVzVFVGRGJFSXNVVUZCVVVFc1MwRkJTU3hOUVVGTk8wRkJRVUVzVFVGRGJFSXNUMEZCVHl4elFrRkJjMElzYTBKQlFXdENMRVZCUVVVc1IwRkJSeXhEUVVGRExHMUNRVUZ0UWp0QlFVTjBSU3hsUVVORkxHZENRVUZCUkR0QlFVRkJMRlZCUVVNN1FVRkJRVHRCUVVGQkxGbEJRME1zVVVGQlVUdEJRVUZCTEZsQlExSXNWMEZCVlR0QlFVRkJMRmxCUTFZc2IwSkJRVzlDTEUxQlFVMDdRVUZEZUVJc2IwSkJRVTFGTEd0Q1FVRnBRaXh6UWtGRGNFSXNhMEpCUVd0Q0xFVkJRMnhDTEVsQlFVazdRVUZEVUN4alFVRkJTQ3hSUVVGUExFMUJRVTBzYVVOQlFXbERMRU5CUVVOSExHVkJRV01zUlVGQlJUdEJRVU12UkN4dlEwRkJjMElzWjBKQlFXZENMRU5CUVVOQkxHVkJRV003UVVGQlFTeFpRVU4yUkR0QlFVRkJMRmxCUTBFc1QwRkRSU3huUWtGQlFVWTdRVUZCUVN4alFVRkRPMEZCUVVFN1FVRkJRU3huUWtGRFF5eE5RVUZOTEhOQ1FVTklMR3RDUVVGclFpeEZRVU5zUWl4SFFVRkhMRU5CUVVORkxHOUNRVUZ0UWp0QlFVTjBRaXgzUWtGQlRTeHhRa0ZCY1VJc2MwSkJRM2hDTEdsQ1FVRnBRaXhGUVVOcVFpeEpRVUZKTEVWQlFVVTdRVUZEVkN4elFrRkJTVUVzYVVKQlFXZENPMEZCUTJ4Q0xESkNRVUZQTEhGQ1FVRnhRaXhKUVVONFFpeG5RMEZEUVR0QlFVRkJMR3RDUVVOT0xFOUJRVTg3UVVGRFRDd3lRa0ZCVHl4eFFrRkJjVUlzU1VGRGVFSXNORUpCUTBFN1FVRkJRU3hyUWtGRFRqdEJRVUZCTEdkQ1FVTkdMRU5CUVVNN1FVRkJRVHRCUVVGQkxGbEJRMHc3UVVGQlFUdEJRVUZCTEZGQlJVbzdRVUZCUVN4TlFVVktMRU5CUVVNN1FVRkJRVHRCUVVGQkxFVkJRMGc3UVVGRlNqczdPMEZFTDBOQkxFbEJRVTBzYjBKQlFXOUNMRU5CUVVNc2FVSkJRVEpETzBGQlEzQkZMRk5CUTBVc1owSkJRVUZETEV0QlFVTXNWVUZCU3l4TlFVRk5MR0ZCUVdFc1ZVRkJWU3hIUVVGSExGZEJRVlVzZVVKQlFYZENPMEZCUlRWRk8wRkJSVThzVTBGQlV5eHhRa0ZCY1VJc1QwRkJhME03UVVGRGNrVXNVVUZCVFN4bFFVRmxMRTFCUVUwN1FVRkRNMElzVFVGQlNTeERRVUZETEdOQlFXTTdRVUZEYWtJc1YwRkJUeXhuUWtGQlFVRXNTMEZCUXl3d1FrRkJkVUk3UVVGQlFTeEZRVU5xUXp0QlFVTkJMRk5CUTBVc1owSkJRVUZCTzBGQlFVRXNTVUZCUXp0QlFVRkJPMEZCUVVFc1RVRkRReXhYUVVGWE8wRkJRVUVzVFVGRFdDeFRRVUZUTzBGQlFVRXNUVUZEVkN4UlFVRlJReXhMUVVGSkxFMUJRVTA3UVVGQlFTeE5RVU5zUWl4UlFVRlJRU3hMUVVGSkxFMUJRVTA3UVVGQlFTeE5RVU5zUWl4UFFVTkZMR2RDUVVGQlJEdEJRVUZCTEZGQlFVTTdRVUZCUVR0QlFVRkJMRlZCUTBNc1ZVRkJWVHRCUVVGQkxGbEJRMUlzWVVGQllTeFZRVUZWTzBGQlFVRTdRVUZCUVN4alFVVnlRaXhyUWtGQmEwSXNXVUZCV1R0QlFVRkJMR2RDUVVVNVFpeG5Ra0ZCUVVFc1MwRkJReXhWUVVGTExFMUJRVTBzWjBKQlFXZENPMEZCUVVFc1dVRkZPVUlzWjBKQlFVRkJMRXRCUVVNc1YwRkJUU3hQUVVGUExHRkJRV0VzV1VGQldTeEhRVUZITzBGQlFVRXNWVUZETlVNN1FVRkJRVHRCUVVGQkxFMUJRMFk3UVVGQlFUdEJRVUZCTEVWQlJVbzdRVUZGU2pzN08wRkhha05QTEVsQlFVMHNNa0pCUVU0c1RVRkJUU3d3UWtGQmVVSTdRVUZCUVN4RlFVOXdReXhqUVVGak8wRkJUbVFzVTBGQlVTeDNRa0ZCZDBJc1NVRkJTU3h6UWtGQmMwSTdRVUZETVVRc1UwRkJVU3d3UWtGQk1FSXNTVUZCU1N4VFFVRnhRaXhKUVVGTE8wRkJRMmhGTEZOQlFWRXNOa0pCUVRaQ0xFbEJRVWtzVTBGQmEwSXNTMEZCU3p0QlFVTm9SU3hUUVVGUkxGTkJRVk1zU1VGQlNTeFBRVUZQTEV0QlFVc3NXVUZCV1N4SlFVRkpPMEZCU1M5RExGTkJRVXNzZDBKQlFYZENMRWxCUVVrc1owSkJRVUZGTEV0QlFVTXNNRUpCUVhWQ0xFTkJRVVU3UVVGRE0wUXNVMEZCU3l3MlFrRkJOa0k3UVVGQlFTeEZRVU53UXp0QlFVRkJMRVZCU2tFN1FVRkJRU3hUUVVGbExDdENRVUVyUWp0QlFVRkJPMEZCUVVFc1JVRk5kRU1zSzBKQlFYRkRPMEZCUXpORExGTkJRVXNzYzBKQlFYTkNPMEZCUVVFc1RVRkRla0lzUTBGQlF5eHZRa0ZCYjBJc2JVSkJRVzFDTzBGQlEzUkRMR05CUVUwc1pVRkRTaXhMUVVGTExITkNRVUZ6UWl4dlFrRkJiMElzWTBGQll6dEJRVU12UkN4aFFVRkxMSGRDUVVGM1FqdEJRVUZCTEZWQlF6TkNMR2RDUVVGQlFTeExRVUZETEhkQ1FVRnhRaXhqUVVFMFFqdEJRVUZCTEZGQlEzQkVPMEZCUTBFc1lVRkJTeXd5UWtGQk1rSXNTVUZCU1N4SlFVRkpPMEZCUTNoRExHTkJRVTBzYzBKQlEwb3NZVUZCWVN4dFFrRkJiVUlzU1VGQlNTeEpRVU5vUXl4aFFVRmhMRzFDUVVGdFFpeEpRVU5vUXl3d1FrRkJlVUk3UVVGRkwwSXNZVUZCU3l4UFFVRlBPMEZCUVVFc1ZVRkRWaXc0UWtGQk9FSXNZVUZCWVN4aFFVRmhMRU5CUVVNc2FVSkJRV2xDTEcxQ1FVRnRRanRCUVVGQkxGRkJReTlHTzBGQlEwRXNaMEpCUVZFc2NVSkJRWEZDTEUxQlFVMDdRVUZEYWtNc1pVRkJTeXgzUWtGQmQwSXNTVUZCU1N4blFrRkJRVUVzUzBGQlF5d3dRa0ZCZFVJc1EwRkJSVHRCUVVNelJDeGxRVUZMTERKQ1FVRXlRaXhKUVVGSkxFdEJRVXM3UVVGQlFTeFJRVU16UXl4RFFVRkRPMEZCUVVFc1RVRkRTRHRCUVVGQkxFbEJRMFk3UVVGQlFTeEZRVU5HTzBGQlFVRXNSVUZEVHl4eFFrRkJNRU03UVVGREwwTXNWMEZCVHl4TFFVRkxMRXRCUVVzc2RVSkJRWFZDTzBGQlFVRXNSVUZETVVNN1FVRkJRU3hGUVVOUExIZENRVUV3UXp0QlFVTXZReXhYUVVGUExFdEJRVXNzUzBGQlN5d3dRa0ZCTUVJN1FVRkJRU3hGUVVNM1F6dEJRVU5HT3pzN1FVTTVRMDhzVTBGQlV5eHhRa0ZCY1VJN1FVRkRia01zVVVGQlRTd3lRa0ZCTWtJc1NVRkJTU3g1UWtGQmVVSTdRVUZET1VRc1UwRkRSU3huUWtGQlFVTTdRVUZCUVN4SlFVRkRPMEZCUVVFN1FVRkJRU3hOUVVORExGZEJRVmNzZVVKQlExSXNjMEpCUVhOQ0xFVkJRM1JDTEVkQlFVY3NRMEZCUXl4MVFrRkJkVUk3UVVGRE1VSXNXVUZCU1N4WlFVRlpPMEZCUTJoQ0xGbEJRVWtzYjBKQlFXOUNPMEZCUTNSQ0xIVkNRVUZoTzBGQlFVRXNVVUZEWmp0QlFVTkJMR1ZCUVU4N1FVRkJRU3hOUVVOVUxFTkJRVU03UVVGQlFTeE5RVU5JTEZOQlFWTTdRVUZCUVN4TlFVTlVMRk5CUVZNN1FVRkJRU3hOUVVOVUxGRkJRVkZETEV0QlFVa3NUVUZCVFR0QlFVRkJMRTFCUTJ4Q0xGRkJRVkZCTEV0QlFVa3NUVUZCVFR0QlFVRkJMRTFCUTJ4Q0xFOUJRVThzZVVKQlFYbENMRzFDUVVGdFFqdEJRVUZCTzBGQlFVRXNSVUZEY2tRN1FVRkZTanM3TzBGRFprRXNVMEZCVXl4bFFVRmxPMEZCUTNSQ0xGTkJRMFVzWjBKQlFVRkRPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGRFF5eFhRVUZYTzBGQlFVRXNUVUZEV0N4VlFVRlZPMEZCUVVFc1RVRkRWaXhUUVVGVE8wRkJRVUVzVFVGRFZDeFJRVUZSUXl4TFFVRkpMRTFCUVUwN1FVRkJRU3hOUVVOc1FpeFZRVUZWTzBGQlFVRXNVVUZEVWl4blFrRkJRVVFzUzBGQlF5d3dRa0ZCZFVJN1FVRkJRU3hSUVVONFFpeG5Ra0ZCUVVFc1MwRkJReXhqUVVGWE8wRkJRVUVzVVVGRFdpeG5Ra0ZCUVVFc1MwRkJReXh6UWtGQmJVSTdRVUZCUVN4TlFVTjBRanRCUVVGQk8wRkJRVUVzUlVGRFJqdEJRVVZLTzBGQlRVRXNVMEZCVXl4WlFVRlpMRVZCUVVVc1YwRkJWeXhIUVVGeFFqdEJRVU55UkN4VFFVTkZMR2RDUVVGQlFTeExRVUZETEZOQlFVa3NVMEZCVXl4TlFVRk5MRTlCUVU4c1owSkJRVUZCTEV0QlFVTXNhVUpCUVdNc1dVRkJkMElzUjBGQlNUdEJRVVV4UlR0QlFXdENaU3hUUVVGU0xFbEJRWEZDTEZsQlFYbENPMEZCUTI1RUxGRkJRVTFGTEZWQlFWTXNTVUZCU1N4UFFVRlBMRXRCUVVzN1FVRkRMMElzUlVGQlFVRXNVVUZCVHl4TlFVRk5MRzlDUVVGdlFqdEJRVVZxUXl4VFFVTkZMR2RDUVVGQlF6dEJRVUZCTEVsQlFVTTdRVUZCUVR0QlFVRkJMRTFCUTBNc1YwRkJWVHRCUVVGQkxFMUJRMVlzVjBGQlZUdEJRVUZCTEUxQlExWTdRVUZCUVN4TlFVTkJMRkZCUTBWRExFOUJRVTBzWVVGQllTeE5RVU51UWtFc1QwRkJUU3hoUVVGaExFOUJRMjVDUVN4UFFVRk5MR0ZCUVdFN1FVRkJRU3hOUVVWeVFpeGhRVUZoUVN4UFFVRk5MRmxCUVZrN1FVRkJRU3hOUVVNdlFpeGhRVUZoTzBGQlFVRXNUVUZEWWl4UFFVTkZMR2RDUVVGQlJEdEJRVUZCTEZGQlFVTTdRVUZCUVR0QlFVRkJMRlZCUTBNc1YwRkJWenRCUVVGQkxGVkJRMWdzWVVGQllTeG5Ra0ZCUVVFc1MwRkJReXhsUVVGWkxGbEJRWGRDTzBGQlFVRXNWVUZEYkVRc1kwRkJZeXhuUWtGQlFVRXNTMEZCUXl4VFFVRkpPMEZCUVVFc1ZVRkRia0lzVjBGQlZ5eG5Ra0ZCUVVFc1MwRkJReXhuUWtGQllTeFpRVUYzUWp0QlFVRkJPMEZCUVVFc1RVRkRia1E3UVVGQlFUdEJRVUZCTEVWQlJVbzdRVUZGU2pzN08wRkRla1ZsTEZOQlFWSXNkVUpCUVhkRExGbEJRWGxDTzBGQlEzUkZMRkZCUVUxRkxGVkJRVk1zU1VGQlNTeFBRVUZQTEhkQ1FVRjNRanRCUVVOc1JDeEZRVUZCUVN4UlFVRlBMRTFCUVUwc2RVTkJRWFZETzBGQlJYQkVMRk5CUTBVc1owSkJRVUZETzBGQlFVRXNTVUZCUXp0QlFVRkJPMEZCUVVFc1RVRkRReXhYUVVGVk8wRkJRVUVzVFVGRFZpeFhRVUZWTzBGQlFVRXNUVUZEVml4UlFVTkZReXhQUVVGTkxHRkJRV0VzVFVGRGJrSkJMRTlCUVUwc1lVRkJZU3hQUVVOdVFrRXNUMEZCVFN4aFFVRmhPMEZCUVVFc1RVRkZja0lzWVVGQllVRXNUMEZCVFN4WlFVRlpPMEZCUVVFc1RVRkRMMElzWVVGQllUdEJRVUZCTEUxQlEySTdRVUZCUVN4TlFVTkJMRTlCUVU4c1owSkJRVUZFTEV0QlFVTXNVMEZCU1N4WFFVRlZMSE5EUVVGeFF6dEJRVUZCTzBGQlFVRXNSVUZETjBRN1FVRkZTanM3TzBGRGRFSkJPenM3UVVOTFFTeFBRVUZQUlN4bFFVRmpPMEZCUlhKQ0xFbEJRVTBzVjBGQlYwRXNWVUZCVXl4WlFVRlpPMEZCUlhSRExGbEJRVWtzVFVGQlRUdEJRVUZCTEVWQlExSXNTMEZCU3p0QlFVRkJMRVZCUTB3c1QwRkJUenRCUVVOTUxHZENRVUZKTEdGQlFXRXNSVUZCUlN4SlFVRkpMRU5CUVVNc1dVRkJXVHRCUVVOc1F5dzJRa0ZCYjBJc1QwRkJUenRCUVVNelFpeFZRVUZKTEU5QlFVODdRVUZEV0N4blFrRkJWU3hGUVVGRkxGbEJRVmtzVVVGQlVTeERRVUZETzBGQlFVRXNTVUZEYmtNc1EwRkJRenRCUVVGQkxFVkJRMGc3UVVGRFJpeERRVUZET3lJc0NpQWdJbTVoYldWeklqb2dXeUpCYzNSaGJDSXNJQ0pIZEdzaUxDQWlRWE4wWVd3aUxDQWlZbWx1WkNJc0lDSnBiblJsY25aaGJDSXNJQ0owYVcxbGIzVjBJaXdnSWtGemRHRnNJaXdnSWtGemRHRnNJaXdnSWtGemRHRnNJaXdnSW5ZaUxDQWlhVzUwWlhKMllXd2lMQ0FpWTNSdmNuTWlMQ0FpUVhOMFlXd2lMQ0FpUVhOMFlXd2lMQ0FpUjNScklpd2dJa0Z6ZEdGc0lpd2dJbk51WVd0bGFXWjVJaXdnSW5CaGRHTm9JaXdnSWtKc2RXVjBiMjkwYUNJc0lDSkllWEJ5YkdGdVpDSXNJQ0pOY0hKcGN5SXNJQ0pPYjNScFptUWlMQ0FpVjNBaUxDQWlSMDlpYW1WamRDSXNJQ0pIZEdzaUxDQWlRWE4wWVd3aUxDQWlRWE4wWVd3aUxDQWlSM1JySWl3Z0lrZFBZbXBsWTNRaUxDQWlSM1JySWl3Z0lrRnpkR0ZzSWl3Z0lrZFBZbXBsWTNRaUxDQWlaR1ZtWVhWc2RDSXNJQ0pCYzNSaGJDSXNJQ0pIVDJKcVpXTjBJaXdnSW1SbFptRjFiSFFpTENBaVIwOWlhbVZqZENJc0lDSk1iMmRNWlhabGJDSXNJQ0pxYzNnaUxDQWlkMmx5WlZCc2RXMWlaWEpXYVdWM1RXOWtaV3dpTENBaWFuTjRJaXdnSWxScGJXVWlMQ0FpYW5ONElpd2dJbXB6ZUNJc0lDSlVhVzFsSWl3Z0ltcHplQ0lzSUNKcWMzZ2lMQ0FpYW5ONElpd2dJbXB6ZUNJc0lDSkhkR3NpTENBaWQybHlaVkJzZFcxaVpYSldhV1YzVFc5a1pXd2lMQ0FpYkc5bloyVnlJaXdnSW1wemVDSXNJQ0pxYzNnaUxDQWlRWE4wWVd3aUxDQWlTSGx3Y214aGJtUWlMQ0FpU0hsd2NteGhibVFpTENBaWFuTjRJaXdnSWtkMGF5SXNJQ0pxYzNnaUxDQWlSM1JySWl3Z0luTjVjM1JsYlZSeVlYbFdhV1YzVFc5a1pXd2lMQ0FpYVhSbGJTSXNJQ0p6ZVhOMFpXMVVjbUY1Vm1sbGQwMXZaR1ZzSWl3Z0ltcHplQ0lzSUNKc2IyZG5aWElpTENBaWFuTjRJaXdnSWtkMGF5SXNJQ0pzYjJkblpYSWlMQ0FpYW5ONElpd2dJa2QwYXlJc0lDSkhkR3NpTENBaVIzUnJJaXdnSW14dloyZGxjaUlzSUNKcWMzZ2lMQ0FpUjNScklpd2dJbWx6Ukc5T2IzUkVhWE4wZFhKaUlpd2dJbXB6ZUNJc0lDSkhkR3NpTENBaWFuTjRJaXdnSW1wemVDSXNJQ0pIZEdzaUxDQWlhbk40SWl3Z0lrZDBheUlzSUNKc2IyZG5aWElpTENBaWFuTjRJaXdnSWtGemRHRnNJaXdnSW14dloyZGxjaUlzSUNKcWMzZ2lMQ0FpUVhOMFlXd2lMQ0FpU0hsd2NteGhibVFpWFFwOUNnPT0K
EOF

LD_PRELOAD="" /nix/store/hli76xqy6ka5dk43whz9wbngdjnq4y33-gjs-1.84.2/bin/gjs -m $file $@